var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var Vector3D = require("awayjs-core/lib/geom/Vector3D");
var ControllerBase = require("awayjs-display/lib/controllers/ControllerBase");
var DisplayObjectEvent = require("awayjs-display/lib/events/DisplayObjectEvent");
var LookAtController = (function (_super) {
    __extends(LookAtController, _super);
    function LookAtController(targetObject, lookAtObject) {
        var _this = this;
        if (targetObject === void 0) { targetObject = null; }
        if (lookAtObject === void 0) { lookAtObject = null; }
        _super.call(this, targetObject);
        this._pOrigin = new Vector3D(0.0, 0.0, 0.0);
        this._onLookAtObjectChangedDelegate = function (event) { return _this.onLookAtObjectChanged(event); };
        if (lookAtObject)
            this.lookAtObject = lookAtObject;
        else
            this.lookAtPosition = new Vector3D();
    }
    Object.defineProperty(LookAtController.prototype, "lookAtPosition", {
        get: function () {
            return this._pLookAtPosition;
        },
        set: function (val) {
            if (this._pLookAtObject) {
                this._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);
                this._pLookAtObject = null;
            }
            this._pLookAtPosition = val;
            this.pNotifyUpdate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LookAtController.prototype, "lookAtObject", {
        get: function () {
            return this._pLookAtObject;
        },
        set: function (val) {
            if (this._pLookAtPosition)
                this._pLookAtPosition = null;
            if (this._pLookAtObject == val)
                return;
            if (this._pLookAtObject)
                this._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);
            this._pLookAtObject = val;
            if (this._pLookAtObject)
                this._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);
            this.pNotifyUpdate();
        },
        enumerable: true,
        configurable: true
    });
    //@override
    LookAtController.prototype.update = function (interpolate) {
        if (interpolate === void 0) { interpolate = true; }
        if (this._pTargetObject) {
            if (this._pLookAtPosition)
                this._pTargetObject.lookAt(this._pLookAtPosition);
            else if (this._pLookAtObject)
                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);
        }
    };
    LookAtController.prototype.onLookAtObjectChanged = function (event) {
        this.pNotifyUpdate();
    };
    return LookAtController;
})(ControllerBase);
module.exports = LookAtController;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1kaXNwbGF5L2xpYi9jb250cm9sbGVycy9Mb29rQXRDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbIkxvb2tBdENvbnRyb2xsZXIiLCJMb29rQXRDb250cm9sbGVyLmNvbnN0cnVjdG9yIiwiTG9va0F0Q29udHJvbGxlci5sb29rQXRQb3NpdGlvbiIsIkxvb2tBdENvbnRyb2xsZXIubG9va0F0T2JqZWN0IiwiTG9va0F0Q29udHJvbGxlci51cGRhdGUiLCJMb29rQXRDb250cm9sbGVyLm9uTG9va0F0T2JqZWN0Q2hhbmdlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTyxRQUFRLFdBQWUsK0JBQStCLENBQUMsQ0FBQztBQUcvRCxJQUFPLGNBQWMsV0FBYSwrQ0FBK0MsQ0FBQyxDQUFDO0FBQ25GLElBQU8sa0JBQWtCLFdBQVksOENBQThDLENBQUMsQ0FBQztBQUVyRixJQUFNLGdCQUFnQjtJQUFTQSxVQUF6QkEsZ0JBQWdCQSxVQUF1QkE7SUFRNUNBLFNBUktBLGdCQUFnQkEsQ0FRVEEsWUFBaUNBLEVBQUVBLFlBQWlDQTtRQVJqRkMsaUJBMkVDQTtRQW5FWUEsNEJBQWlDQSxHQUFqQ0EsbUJBQWlDQTtRQUFFQSw0QkFBaUNBLEdBQWpDQSxtQkFBaUNBO1FBRS9FQSxrQkFBTUEsWUFBWUEsQ0FBQ0EsQ0FBQ0E7UUFOZEEsYUFBUUEsR0FBWUEsSUFBSUEsUUFBUUEsQ0FBQ0EsR0FBR0EsRUFBRUEsR0FBR0EsRUFBRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0E7UUFRdERBLElBQUlBLENBQUNBLDhCQUE4QkEsR0FBR0EsVUFBQ0EsS0FBd0JBLElBQUtBLE9BQUFBLEtBQUlBLENBQUNBLHFCQUFxQkEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsRUFBakNBLENBQWlDQSxDQUFDQTtRQUV0R0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsWUFBWUEsQ0FBQ0E7WUFDaEJBLElBQUlBLENBQUNBLFlBQVlBLEdBQUdBLFlBQVlBLENBQUNBO1FBQ2xDQSxJQUFJQTtZQUNIQSxJQUFJ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Q0EzRUEsQUEyRUNBLEVBM0U4QixjQUFjLEVBMkU1QztBQUVELEFBQTBCLGlCQUFqQixnQkFBZ0IsQ0FBQyIsImZpbGUiOiJjb250cm9sbGVycy9Mb29rQXRDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWZWN0b3IzRFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9WZWN0b3IzRFwiKTtcclxuXHJcbmltcG9ydCBEaXNwbGF5T2JqZWN0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2Jhc2UvRGlzcGxheU9iamVjdFwiKTtcclxuaW1wb3J0IENvbnRyb2xsZXJCYXNlXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2NvbnRyb2xsZXJzL0NvbnRyb2xsZXJCYXNlXCIpO1xyXG5pbXBvcnQgRGlzcGxheU9iamVjdEV2ZW50XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9ldmVudHMvRGlzcGxheU9iamVjdEV2ZW50XCIpO1xyXG5cclxuY2xhc3MgTG9va0F0Q29udHJvbGxlciBleHRlbmRzIENvbnRyb2xsZXJCYXNlXHJcbntcclxuXHRwdWJsaWMgX3BMb29rQXRQb3NpdGlvbjpWZWN0b3IzRDtcclxuXHRwdWJsaWMgX3BMb29rQXRPYmplY3Q6RGlzcGxheU9iamVjdDtcclxuXHRwdWJsaWMgX3BPcmlnaW46VmVjdG9yM0QgPSBuZXcgVmVjdG9yM0QoMC4wLCAwLjAsIDAuMCk7XHJcblxyXG5cdHByaXZhdGUgX29uTG9va0F0T2JqZWN0Q2hhbmdlZERlbGVnYXRlOihldmVudDpEaXNwbGF5T2JqZWN0RXZlbnQpID0+IHZvaWQ7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHRhcmdldE9iamVjdDpEaXNwbGF5T2JqZWN0ID0gbnVsbCwgbG9va0F0T2JqZWN0OkRpc3BsYXlPYmplY3QgPSBudWxsKVxyXG5cdHtcclxuXHRcdHN1cGVyKHRhcmdldE9iamVjdCk7XHJcblxyXG5cdFx0dGhpcy5fb25Mb29rQXRPYmplY3RDaGFuZ2VkRGVsZWdhdGUgPSAoZXZlbnQ6RGlzcGxheU9iamVjdEV2ZW50KSA9PiB0aGlzLm9uTG9va0F0T2JqZWN0Q2hhbmdlZChldmVudCk7XHJcblxyXG5cdFx0aWYgKGxvb2tBdE9iamVjdClcclxuXHRcdFx0dGhpcy5sb29rQXRPYmplY3QgPSBsb29rQXRPYmplY3Q7XHJcblx0XHRlbHNlXHJcblx0XHRcdHRoaXMubG9va0F0UG9zaXRpb24gPSBuZXcgVmVjdG9yM0QoKTtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBnZXQgbG9va0F0UG9zaXRpb24oKTpWZWN0b3IzRFxyXG5cdHtcclxuXHRcdHJldHVybiB0aGlzLl9wTG9va0F0UG9zaXRpb247XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgc2V0IGxvb2tBdFBvc2l0aW9uKHZhbDpWZWN0b3IzRClcclxuXHR7XHJcblx0XHRpZiAodGhpcy5fcExvb2tBdE9iamVjdCkge1xyXG5cdFx0XHR0aGlzLl9wTG9va0F0T2JqZWN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoRGlzcGxheU9iamVjdEV2ZW50LlNDRU5FVFJBTlNGT1JNX0NIQU5HRUQsIHRoaXMuX29uTG9va0F0T2JqZWN0Q2hhbmdlZERlbGVnYXRlKTtcclxuXHRcdFx0dGhpcy5fcExvb2tBdE9iamVjdCA9IG51bGw7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5fcExvb2tBdFBvc2l0aW9uID0gdmFsO1xyXG5cdFx0dGhpcy5wTm90aWZ5VXBkYXRlKCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0IGxvb2tBdE9iamVjdCgpOkRpc3BsYXlPYmplY3RcclxuXHR7XHJcblx0XHRyZXR1cm4gdGhpcy5fcExvb2tBdE9iamVjdDtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBzZXQgbG9va0F0T2JqZWN0KHZhbDpEaXNwbGF5T2JqZWN0KVxyXG5cdHtcclxuXHRcdGlmICh0aGlzLl9wTG9va0F0UG9zaXRpb24pXHJcblx0XHRcdHRoaXMuX3BMb29rQXRQb3NpdGlvbiA9IG51bGw7XHJcblxyXG5cdFx0aWYgKHRoaXMuX3BMb29rQXRPYmplY3QgPT0gdmFsKVxyXG5cdFx0XHRyZXR1cm47XHJcblxyXG5cdFx0aWYgKHRoaXMuX3BMb29rQXRPYmplY3QpXHJcblx0XHRcdHRoaXMuX3BMb29rQXRPYmplY3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihEaXNwbGF5T2JqZWN0RXZlbnQuU0NFTkVUUkFOU0ZPUk1fQ0hBTkdFRCwgdGhpcy5fb25Mb29rQXRPYmplY3RDaGFuZ2VkRGVsZWdhdGUpO1xyXG5cclxuXHRcdHRoaXMuX3BMb29rQXRPYmplY3QgPSB2YWw7XHJcblxyXG5cdFx0aWYgKHRoaXMuX3BMb29rQXRPYmplY3QpXHJcblx0XHRcdHRoaXMuX3BMb29rQXRPYmplY3QuYWRkRXZlbnRMaXN0ZW5lcihEaXNwbGF5T2JqZWN0RXZlbnQuU0NFTkVUUkFOU0ZPUk1fQ0hBTkdFRCwgdGhpcy5fb25Mb29rQXRPYmplY3RDaGFuZ2VkRGVsZWdhdGUpO1xyXG5cclxuXHRcdHRoaXMucE5vdGlmeVVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcblx0Ly9Ab3ZlcnJpZGVcclxuXHRwdWJsaWMgdXBkYXRlKGludGVycG9sYXRlOmJvb2xlYW4gPSB0cnVlKVxyXG5cdHtcclxuXHRcdGlmICh0aGlzLl9wVGFyZ2V0T2JqZWN0KSB7XHJcblx0XHRcdGlmICh0aGlzLl9wTG9va0F0UG9zaXRpb24pXHJcblx0XHRcdFx0dGhpcy5fcFRhcmdldE9iamVjdC5sb29rQXQodGhpcy5fcExvb2tBdFBvc2l0aW9uKTtcclxuXHRcdFx0ZWxzZSBpZiAodGhpcy5fcExvb2tBdE9iamVjdClcclxuXHRcdFx0XHR0aGlzLl9wVGFyZ2V0T2JqZWN0Lmxvb2tBdCh0aGlzLl9wTG9va0F0T2JqZWN0LnNjZW5lPyB0aGlzLl9wTG9va0F0T2JqZWN0LnNjZW5lUG9zaXRpb24gOiB0aGlzLl9wTG9va0F0T2JqZWN0LnRyYW5zZm9ybS5wb3NpdGlvbik7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIG9uTG9va0F0T2JqZWN0Q2hhbmdlZChldmVudDpEaXNwbGF5T2JqZWN0RXZlbnQpXHJcblx0e1xyXG5cdFx0dGhpcy5wTm90aWZ5VXBkYXRlKCk7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgPSBMb29rQXRDb250cm9sbGVyOyJdfQ==
/**
 * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects
 *
 * @see away.base.DisplayObject#pickingCollisionVO
 * @see away.core.pick.IPickingCollider
 *
 * @class away.pick.PickingCollisionVO
 */
var PickingCollisionVO = (function () {
    /**
     * Creates a new <code>PickingCollisionVO</code> object.
     *
     * @param entity The entity to which this collision object belongs.
     */
    function PickingCollisionVO(displayObject) {
        this.displayObject = displayObject;
    }
    return PickingCollisionVO;
})();
module.exports = PickingCollisionVO;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1kaXNwbGF5L2xpYi9waWNrL1BpY2tpbmdDb2xsaXNpb25WTy50cyJdLCJuYW1lcyI6WyJQaWNraW5nQ29sbGlzaW9uVk8iLCJQaWNraW5nQ29sbGlzaW9uVk8uY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQU1BLEFBUUE7Ozs7Ozs7R0FERztJQUNHLGtCQUFrQjtJQXFFdkJBOzs7O09BSUdBO0lBQ0hBLFNBMUVLQSxrQkFBa0JBLENBMEVYQSxhQUEyQkE7UUFFdENDLElBQUlBLENBQUNBLGFBQWFBLEdBQUdBLGFBQWFBLENBQUNBO0lBQ3BDQSxDQUFDQTtJQUVGRCx5QkFBQ0E7QUFBREEsQ0EvRUEsQUErRUNBLElBQUE7QUFFRCxBQUE0QixpQkFBbkIsa0JBQWtCLENBQUMiLCJmaWxlIjoicGljay9QaWNraW5nQ29sbGlzaW9uVk8uanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBvaW50XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2dlb20vUG9pbnRcIik7XHJcbmltcG9ydCBWZWN0b3IzRFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL1ZlY3RvcjNEXCIpO1xyXG5cclxuaW1wb3J0IERpc3BsYXlPYmplY3RcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL0Rpc3BsYXlPYmplY3RcIik7XHJcbmltcG9ydCBJUmVuZGVyYWJsZU93bmVyXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9JUmVuZGVyYWJsZU93bmVyXCIpO1xyXG5cclxuLyoqXHJcbiAqIFZhbHVlIG9iamVjdCBmb3IgYSBwaWNraW5nIGNvbGxpc2lvbiByZXR1cm5lZCBieSBhIHBpY2tpbmcgY29sbGlkZXIuIENyZWF0ZWQgYXMgdW5pcXVlIG9iamVjdHMgb24gZGlzcGxheSBvYmplY3RzXHJcbiAqXHJcbiAqIEBzZWUgYXdheS5iYXNlLkRpc3BsYXlPYmplY3QjcGlja2luZ0NvbGxpc2lvblZPXHJcbiAqIEBzZWUgYXdheS5jb3JlLnBpY2suSVBpY2tpbmdDb2xsaWRlclxyXG4gKlxyXG4gKiBAY2xhc3MgYXdheS5waWNrLlBpY2tpbmdDb2xsaXNpb25WT1xyXG4gKi9cclxuY2xhc3MgUGlja2luZ0NvbGxpc2lvblZPXHJcbntcclxuXHQvKipcclxuXHQgKiBUaGUgZGlzcGxheSBvYmplY3QgdG8gd2hpY2ggdGhpcyBjb2xsaXNpb24gb2JqZWN0IGJlbG9uZ3MuXHJcblx0ICovXHJcblx0cHVibGljIGRpc3BsYXlPYmplY3Q6RGlzcGxheU9iamVjdDtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIGxvY2FsIHBvc2l0aW9uIG9mIHRoZSBjb2xsaXNpb24gb24gdGhlIGVudGl0eSdzIHN1cmZhY2UuXHJcblx0ICovXHJcblx0cHVibGljIGxvY2FsUG9zaXRpb246VmVjdG9yM0Q7XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRoZSBsb2NhbCBub3JtYWwgdmVjdG9yIGF0IHRoZSBwb3NpdGlvbiBvZiB0aGUgY29sbGlzaW9uLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBsb2NhbE5vcm1hbDpWZWN0b3IzRDtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIHV2IGNvb3JkaW5hdGUgYXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBjb2xsaXNpb24uXHJcblx0ICovXHJcblx0cHVibGljIHV2OlBvaW50O1xyXG5cclxuXHQvKipcclxuXHQgKiBUaGUgaW5kZXggb2YgdGhlIGZhY2Ugd2hlcmUgdGhlIGV2ZW50IHRvb2sgcGwgYWNlLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBpbmRleDpudW1iZXI7XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRoZSBpbmRleCBvZiB0aGUgc3ViR2VvbWV0cnkgd2hlcmUgdGhlIGV2ZW50IHRvb2sgcGxhY2UuXHJcblx0ICovXHJcbi8vXHRcdHB1YmxpYyBzdWJHZW9tZXRyeUluZGV4Om51bWJlcjtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIHN0YXJ0aW5nIHBvc2l0aW9uIG9mIHRoZSBjb2xsaWRpbmcgcmF5IGluIGxvY2FsIGNvb3JkaW5hdGVzLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBsb2NhbFJheVBvc2l0aW9uOlZlY3RvcjNEO1xyXG5cclxuXHQvKipcclxuXHQgKiBUaGUgZGlyZWN0aW9uIG9mIHRoZSBjb2xsaWRpbmcgcmF5IGluIGxvY2FsIGNvb3JkaW5hdGVzLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyBsb2NhbFJheURpcmVjdGlvbjpWZWN0b3IzRDtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIHN0YXJ0aW5nIHBvc2l0aW9uIG9mIHRoZSBjb2xsaWRpbmcgcmF5IGluIHNjZW5lIGNvb3JkaW5hdGVzLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyByYXlQb3NpdGlvbjpWZWN0b3IzRDtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIGRpcmVjdGlvbiBvZiB0aGUgY29sbGlkaW5nIHJheSBpbiBzY2VuZSBjb29yZGluYXRlcy5cclxuXHQgKi9cclxuXHRwdWJsaWMgcmF5RGlyZWN0aW9uOlZlY3RvcjNEO1xyXG5cclxuXHQvKipcclxuXHQgKiBEZXRlcm1pbmVzIGlmIHRoZSByYXkgcG9zaXRpb24gaXMgY29udGFpbmVkIHdpdGhpbiB0aGUgZW50aXR5IGJvdW5kcy5cclxuXHQgKlxyXG5cdCAqIEBzZWUgYXdheTNkLmVudGl0aWVzLkVudGl0eSNib3VuZHNcclxuXHQgKi9cclxuXHRwdWJsaWMgcmF5T3JpZ2luSXNJbnNpZGVCb3VuZHM6Ym9vbGVhbjtcclxuXHJcblx0LyoqXHJcblx0ICogVGhlIGRpc3RhbmNlIGFsb25nIHRoZSByYXkgZnJvbSB0aGUgc3RhcnRpbmcgcG9zaXRpb24gdG8gdGhlIGNhbGN1bGF0ZWQgaW50ZXJzZWN0aW9uIGVudHJ5IHBvaW50IHdpdGggdGhlIGVudGl0eS5cclxuXHQgKi9cclxuXHRwdWJsaWMgcmF5RW50cnlEaXN0YW5jZTpudW1iZXI7XHJcblxyXG5cdC8qKlxyXG5cdCAqIFRoZSBtYXRlcmlhbCBvd253ZXIgYXNzb2NpYXRlZCB3aXRoIGEgY29sbGlzaW9uLlxyXG5cdCAqL1xyXG5cdHB1YmxpYyByZW5kZXJhYmxlT3duZXI6SVJlbmRlcmFibGVPd25lcjtcclxuXHJcblx0LyoqXHJcblx0ICogQ3JlYXRlcyBhIG5ldyA8Y29kZT5QaWNraW5nQ29sbGlzaW9uVk88L2NvZGU+IG9iamVjdC5cclxuXHQgKlxyXG5cdCAqIEBwYXJhbSBlbnRpdHkgVGhlIGVudGl0eSB0byB3aGljaCB0aGlzIGNvbGxpc2lvbiBvYmplY3QgYmVsb25ncy5cclxuXHQgKi9cclxuXHRjb25zdHJ1Y3RvcihkaXNwbGF5T2JqZWN0OkRpc3BsYXlPYmplY3QpXHJcblx0e1xyXG5cdFx0dGhpcy5kaXNwbGF5T2JqZWN0ID0gZGlzcGxheU9iamVjdDtcclxuXHR9XHJcblxyXG59XHJcblxyXG5leHBvcnQgPSBQaWNraW5nQ29sbGlzaW9uVk87Il19
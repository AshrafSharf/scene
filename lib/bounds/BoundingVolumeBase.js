var AbstractMethodError = require("awayjs-core/lib/errors/AbstractMethodError");
var BoundingVolumeBase = (function () {
    function BoundingVolumeBase(entity) {
        this._pInvalidated = true;
        this._pEntity = entity;
    }
    Object.defineProperty(BoundingVolumeBase.prototype, "boundsPrimitive", {
        get: function () {
            if (this._pBoundsPrimitive == null) {
                this._pBoundsPrimitive = this._pCreateBoundsPrimitive();
                this._pUpdate();
            }
            return this._pBoundsPrimitive;
        },
        enumerable: true,
        configurable: true
    });
    BoundingVolumeBase.prototype.nullify = function () {
        throw new AbstractMethodError();
    };
    BoundingVolumeBase.prototype.isInFrustum = function (planes, numPlanes) {
        throw new AbstractMethodError();
    };
    BoundingVolumeBase.prototype.clone = function () {
        throw new AbstractMethodError();
    };
    BoundingVolumeBase.prototype.rayIntersection = function (position, direction, targetNormal) {
        return -1;
    };
    BoundingVolumeBase.prototype.classifyToPlane = function (plane) {
        throw new AbstractMethodError();
    };
    BoundingVolumeBase.prototype._pUpdate = function () {
        this._pInvalidated = false;
    };
    BoundingVolumeBase.prototype.invalidate = function () {
        this._pInvalidated = true;
    };
    BoundingVolumeBase.prototype._pCreateBoundsPrimitive = function () {
        throw new AbstractMethodError();
    };
    return BoundingVolumeBase;
})();
module.exports = BoundingVolumeBase;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1kaXNwbGF5L2xpYi9ib3VuZHMvYm91bmRpbmd2b2x1bWViYXNlLnRzIl0sIm5hbWVzIjpbIkJvdW5kaW5nVm9sdW1lQmFzZSIsIkJvdW5kaW5nVm9sdW1lQmFzZS5jb25zdHJ1Y3RvciIsIkJvdW5kaW5nVm9sdW1lQmFzZS5ib3VuZHNQcmltaXRpdmUiLCJCb3VuZGluZ1ZvbHVtZUJhc2UubnVsbGlmeSIsIkJvdW5kaW5nVm9sdW1lQmFzZS5pc0luRnJ1c3R1bSIsIkJvdW5kaW5nVm9sdW1lQmFzZS5jbG9uZSIsIkJvdW5kaW5nVm9sdW1lQmFzZS5yYXlJbnRlcnNlY3Rpb24iLCJCb3VuZGluZ1ZvbHVtZUJhc2UuY2xhc3NpZnlUb1BsYW5lIiwiQm91bmRpbmdWb2x1bWVCYXNlLl9wVXBkYXRlIiwiQm91bmRpbmdWb2x1bWVCYXNlLmludmFsaWRhdGUiLCJCb3VuZGluZ1ZvbHVtZUJhc2UuX3BDcmVhdGVCb3VuZHNQcmltaXRpdmUiXSwibWFwcGluZ3MiOiJBQUlBLElBQU8sbUJBQW1CLFdBQWEsNENBQTRDLENBQUMsQ0FBQztBQUtyRixJQUFNLGtCQUFrQjtJQU12QkEsU0FOS0Esa0JBQWtCQSxDQU1YQSxNQUFNQTtRQUZYQyxrQkFBYUEsR0FBV0EsSUFBSUEsQ0FBQ0E7UUFJbkNBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLE1BQU1BLENBQUNBO0lBQ3hCQSxDQUFDQTtJQUVERCxzQkFBV0EsK0NBQWVBO2FBQTFCQTtZQUVDRSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxpQkFBaUJBLElBQUlBLElBQUlBLENBQUNBLENBQUNBLENBQUNBO2dCQUNwQ0EsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxHQUFHQSxJQUFJQSxDQUFDQSx1QkFBdUJBLEVBQUVBLENBQUNBO2dCQUV4REEsSUFBSUEsQ0FBQ0EsUUFBUUEsRUFBRUEsQ0FBQ0E7WUFDakJBLENBQUNBO1lBRURBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0E7UUFDL0JBLENBQUNBOzs7T0FBQUY7SUFFTUEsb0NBQU9BLEdBQWRBO1FBRUNHLE1BQU1BLElBQUlBLG1CQUFtQkEsRUFBRUEsQ0FBQ0E7SUFDakNBLENBQUNBO0lBRU1ILHdDQUFXQSxHQUFsQkEsVUFBbUJBLE1BQXFCQSxFQUFFQSxTQUFnQkE7UUFFekRJLE1BQU1BLElBQUlBLG1CQUFtQkEsRUFBRUEsQ0FBQ0E7SUFDakNBLENBQUNBO0lBRU1KLGtDQUFLQSxHQUFaQTtRQUVDSyxNQUFNQSxJQUFJQSxtQkFBbUJBLEVBQUVBLENBQUNBO0lBQ2pDQSxDQUFDQTtJQUVNTCw0Q0FBZUEsR0FBdEJBLFVBQXVCQSxRQUFpQkEsRUFBRUEsU0FBa0JBLEVBQUVBLFlBQXFCQTtRQUVsRk0sTUFBTUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDWEEsQ0FBQ0E7SUFFTU4sNENBQWVBLEdBQXRCQSxVQUF1QkEsS0FBYUE7UUFFbkNPLE1BQU1BLElBQUlBLG1CQUFtQkEsRUFBRUEsQ0FBQ0E7SUFDakNBLENBQUNBO0lBRU1QLHFDQUFRQSxHQUFmQTtRQUVDUSxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxLQUFLQSxDQUFDQTtJQUM1QkEsQ0FBQ0E7SUFFTVIsdUNBQVVBLEdBQWpCQTtRQUVDUyxJQUFJQSxDQUFDQSxhQUFhQSxHQUFHQSxJQUFJQSxDQUFDQTtJQUMzQkEsQ0FBQ0E7SUFFTVQsb0RBQXVCQSxHQUE5QkE7UUFFQ1UsTUFBTUEsSUFBSUEsbUJBQW1CQSxFQUFFQSxDQUFDQTtJQUNqQ0EsQ0FBQ0E7SUFDRlYseUJBQUNBO0FBQURBLENBN0RBLEFBNkRDQSxJQUFBO0FBRUQsQUFBNEIsaUJBQW5CLGtCQUFrQixDQUFDIiwiZmlsZSI6ImJvdW5kcy9Cb3VuZGluZ1ZvbHVtZUJhc2UuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJveFx0XHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2dlb20vQm94XCIpO1xuaW1wb3J0IE1hdHJpeDNEXHRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2dlb20vTWF0cml4M0RcIik7XG5pbXBvcnQgUGxhbmUzRFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL1BsYW5lM0RcIik7XG5pbXBvcnQgVmVjdG9yM0RcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9WZWN0b3IzRFwiKTtcbmltcG9ydCBBYnN0cmFjdE1ldGhvZEVycm9yXHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2Vycm9ycy9BYnN0cmFjdE1ldGhvZEVycm9yXCIpO1xuXG5pbXBvcnQgSUVudGl0eVx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9JRW50aXR5XCIpO1xuaW1wb3J0IE1lc2hcdFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9NZXNoXCIpO1xuXG5jbGFzcyBCb3VuZGluZ1ZvbHVtZUJhc2Vcbntcblx0cHVibGljIF9wRW50aXR5OklFbnRpdHk7XG5cdHB1YmxpYyBfcEJvdW5kc1ByaW1pdGl2ZTpNZXNoO1xuXHRwdWJsaWMgX3BJbnZhbGlkYXRlZDpib29sZWFuID0gdHJ1ZTtcblxuXHRjb25zdHJ1Y3RvcihlbnRpdHkpXG5cdHtcblx0XHR0aGlzLl9wRW50aXR5ID0gZW50aXR5O1xuXHR9XG5cblx0cHVibGljIGdldCBib3VuZHNQcmltaXRpdmUoKTpJRW50aXR5XG5cdHtcblx0XHRpZiAodGhpcy5fcEJvdW5kc1ByaW1pdGl2ZSA9PSBudWxsKSB7XG5cdFx0XHR0aGlzLl9wQm91bmRzUHJpbWl0aXZlID0gdGhpcy5fcENyZWF0ZUJvdW5kc1ByaW1pdGl2ZSgpO1xuXG5cdFx0XHR0aGlzLl9wVXBkYXRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuX3BCb3VuZHNQcmltaXRpdmU7XG5cdH1cblxuXHRwdWJsaWMgbnVsbGlmeSgpXG5cdHtcblx0XHR0aHJvdyBuZXcgQWJzdHJhY3RNZXRob2RFcnJvcigpO1xuXHR9XG5cblx0cHVibGljIGlzSW5GcnVzdHVtKHBsYW5lczpBcnJheTxQbGFuZTNEPiwgbnVtUGxhbmVzOm51bWJlcik6Ym9vbGVhblxuXHR7XG5cdFx0dGhyb3cgbmV3IEFic3RyYWN0TWV0aG9kRXJyb3IoKTtcblx0fVxuXG5cdHB1YmxpYyBjbG9uZSgpOkJvdW5kaW5nVm9sdW1lQmFzZVxuXHR7XG5cdFx0dGhyb3cgbmV3IEFic3RyYWN0TWV0aG9kRXJyb3IoKTtcblx0fVxuXG5cdHB1YmxpYyByYXlJbnRlcnNlY3Rpb24ocG9zaXRpb246VmVjdG9yM0QsIGRpcmVjdGlvbjpWZWN0b3IzRCwgdGFyZ2V0Tm9ybWFsOlZlY3RvcjNEKTpudW1iZXJcblx0e1xuXHRcdHJldHVybiAtMTtcblx0fVxuXG5cdHB1YmxpYyBjbGFzc2lmeVRvUGxhbmUocGxhbmU6UGxhbmUzRCk6bnVtYmVyXG5cdHtcblx0XHR0aHJvdyBuZXcgQWJzdHJhY3RNZXRob2RFcnJvcigpO1xuXHR9XG5cblx0cHVibGljIF9wVXBkYXRlKClcblx0e1xuXHRcdHRoaXMuX3BJbnZhbGlkYXRlZCA9IGZhbHNlO1xuXHR9XG5cblx0cHVibGljIGludmFsaWRhdGUoKVxuXHR7XG5cdFx0dGhpcy5fcEludmFsaWRhdGVkID0gdHJ1ZTtcblx0fVxuXG5cdHB1YmxpYyBfcENyZWF0ZUJvdW5kc1ByaW1pdGl2ZSgpOk1lc2hcblx0e1xuXHRcdHRocm93IG5ldyBBYnN0cmFjdE1ldGhvZEVycm9yKCk7XG5cdH1cbn1cblxuZXhwb3J0ID0gQm91bmRpbmdWb2x1bWVCYXNlOyJdfQ==
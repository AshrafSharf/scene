var LineSubGeometry = require("awayjs-core/lib/data/LineSubGeometry");
var TriangleSubGeometry = require("awayjs-core/lib/data/TriangleSubGeometry");
var CurveSubGeometry = require("awayjs-core/lib/data/CurveSubGeometry");
var LineSubMesh = require("awayjs-display/lib/base/LineSubMesh");
var TriangleSubMesh = require("awayjs-display/lib/base/TriangleSubMesh");
var CurveSubMesh = require("awayjs-display/lib/base/CurveSubMesh");
/**
 * @class away.pool.SubMeshPool
 */
var SubMeshPool = (function () {
    function SubMeshPool() {
    }
    /**
     *
     * @param subMeshClass
     */
    SubMeshPool.addSubMeshClass = function (subMeshClass, subGeometryType) {
        SubMeshPool.subMeshClassPool[subGeometryType] = subMeshClass;
        return subGeometryType;
    };
    /**
     *
     * @param subGeometry
     */
    SubMeshPool.getSubMeshClass = function (subGeometry) {
        return SubMeshPool.subMeshClassPool[subGeometry.subGeometryType];
    };
    SubMeshPool.subMeshClassPool = new Object();
    SubMeshPool.defaultSubMeshTypes = [SubMeshPool.addSubMeshClass(LineSubMesh, LineSubGeometry.SUB_GEOMETRY_TYPE), SubMeshPool.addSubMeshClass(TriangleSubMesh, TriangleSubGeometry.SUB_GEOMETRY_TYPE), SubMeshPool.addSubMeshClass(CurveSubMesh, CurveSubGeometry.SUB_GEOMETRY_TYPE)];
    return SubMeshPool;
})();
module.exports = SubMeshPool;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1kaXNwbGF5L2xpYi9wb29sL1N1Yk1lc2hQb29sLnRzIl0sIm5hbWVzIjpbIlN1Yk1lc2hQb29sIiwiU3ViTWVzaFBvb2wuY29uc3RydWN0b3IiLCJTdWJNZXNoUG9vbC5hZGRTdWJNZXNoQ2xhc3MiLCJTdWJNZXNoUG9vbC5nZXRTdWJNZXNoQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUNBLElBQU8sZUFBZSxXQUFjLHNDQUFzQyxDQUFDLENBQUM7QUFDNUUsSUFBTyxtQkFBbUIsV0FBYSwwQ0FBMEMsQ0FBQyxDQUFDO0FBQ25GLElBQU8sZ0JBQWdCLFdBQWMsdUNBQXVDLENBQUMsQ0FBQztBQUc5RSxJQUFPLFdBQVcsV0FBZSxxQ0FBcUMsQ0FBQyxDQUFDO0FBQ3hFLElBQU8sZUFBZSxXQUFjLHlDQUF5QyxDQUFDLENBQUM7QUFDL0UsSUFBTyxZQUFZLFdBQWUsc0NBQXNDLENBQUMsQ0FBQztBQUUxRSxBQUdBOztHQURHO0lBQ0csV0FBVztJQUFqQkEsU0FBTUEsV0FBV0E7SUE0QmpCQyxDQUFDQTtJQXhCQUQ7OztPQUdHQTtJQUNXQSwyQkFBZUEsR0FBN0JBLFVBQThCQSxZQUEwQkEsRUFBRUEsZUFBc0JBO1FBRS9FRSxXQUFXQSxDQUFDQSxnQkFBZ0JBLENBQUNBLGVBQWVBLENBQUNBLEdBQUdBLFlBQVlBLENBQUNBO1FBRTdEQSxNQUFNQSxDQUFDQSxlQUFlQSxDQUFDQTtJQUN4QkEsQ0FBQ0E7SUFFREY7OztPQUdHQTtJQUNXQSwyQkFBZUEsR0FBN0JBLFVBQThCQSxXQUEyQkE7UUFFeERHLE1BQU1BLENBQUNBLFdBQVdBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsQ0FBQ0E7SUFDbEVBLENBQUNBO0lBcEJjSCw0QkFBZ0JBLEdBQVVBLElBQUlBLE1BQU1BLEVBQUVBLENBQUNBO0lBc0J4Q0EsK0JBQW1CQSxHQUNoQ0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsV0FBV0EsRUFBRUEsZUFBZUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxFQUM1RUEsV0FBV0EsQ0FBQ0EsZUFBZUEsQ0FBQ0EsZUFBZUEsRUFBRUEsbUJBQW1CQSxDQUFDQSxpQkFBaUJBLENBQUNBLEVBQ25GQSxXQUFXQSxDQUFDQSxlQUFlQSxDQUFDQSxZQUFZQSxFQUFFQSxnQkFBZ0JBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDakZBLGtCQUFDQTtBQUFEQSxDQTVCQSxBQTRCQ0EsSUFBQTtBQUVELEFBQXFCLGlCQUFaLFdBQVcsQ0FBQyIsImZpbGUiOiJwb29sL1N1Yk1lc2hQb29sLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdWJHZW9tZXRyeUJhc2VcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9kYXRhL1N1Ykdlb21ldHJ5QmFzZVwiKTtcclxuaW1wb3J0IExpbmVTdWJHZW9tZXRyeVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2RhdGEvTGluZVN1Ykdlb21ldHJ5XCIpO1xyXG5pbXBvcnQgVHJpYW5nbGVTdWJHZW9tZXRyeVx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9kYXRhL1RyaWFuZ2xlU3ViR2VvbWV0cnlcIik7XHJcbmltcG9ydCBDdXJ2ZVN1Ykdlb21ldHJ5XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZGF0YS9DdXJ2ZVN1Ykdlb21ldHJ5XCIpO1xyXG5cclxuaW1wb3J0IElTdWJNZXNoQ2xhc3NcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL0lTdWJNZXNoQ2xhc3NcIik7XHJcbmltcG9ydCBMaW5lU3ViTWVzaFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9MaW5lU3ViTWVzaFwiKTtcclxuaW1wb3J0IFRyaWFuZ2xlU3ViTWVzaFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2Jhc2UvVHJpYW5nbGVTdWJNZXNoXCIpO1xyXG5pbXBvcnQgQ3VydmVTdWJNZXNoXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL0N1cnZlU3ViTWVzaFwiKTtcclxuXHJcbi8qKlxyXG4gKiBAY2xhc3MgYXdheS5wb29sLlN1Yk1lc2hQb29sXHJcbiAqL1xyXG5jbGFzcyBTdWJNZXNoUG9vbFxyXG57XHJcblx0cHJpdmF0ZSBzdGF0aWMgc3ViTWVzaENsYXNzUG9vbDpPYmplY3QgPSBuZXcgT2JqZWN0KCk7XHJcblxyXG5cdC8qKlxyXG5cdCAqXHJcblx0ICogQHBhcmFtIHN1Yk1lc2hDbGFzc1xyXG5cdCAqL1xyXG5cdHB1YmxpYyBzdGF0aWMgYWRkU3ViTWVzaENsYXNzKHN1Yk1lc2hDbGFzczpJU3ViTWVzaENsYXNzLCBzdWJHZW9tZXRyeVR5cGU6c3RyaW5nKTpzdHJpbmdcclxuXHR7XHJcblx0XHRTdWJNZXNoUG9vbC5zdWJNZXNoQ2xhc3NQb29sW3N1Ykdlb21ldHJ5VHlwZV0gPSBzdWJNZXNoQ2xhc3M7XHJcblxyXG5cdFx0cmV0dXJuIHN1Ykdlb21ldHJ5VHlwZTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqXHJcblx0ICogQHBhcmFtIHN1Ykdlb21ldHJ5XHJcblx0ICovXHJcblx0cHVibGljIHN0YXRpYyBnZXRTdWJNZXNoQ2xhc3Moc3ViR2VvbWV0cnk6U3ViR2VvbWV0cnlCYXNlKTpJU3ViTWVzaENsYXNzXHJcblx0e1xyXG5cdFx0cmV0dXJuIFN1Yk1lc2hQb29sLnN1Yk1lc2hDbGFzc1Bvb2xbc3ViR2VvbWV0cnkuc3ViR2VvbWV0cnlUeXBlXTtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyBzdGF0aWMgZGVmYXVsdFN1Yk1lc2hUeXBlcyA9XHJcblx0XHRbU3ViTWVzaFBvb2wuYWRkU3ViTWVzaENsYXNzKExpbmVTdWJNZXNoLCBMaW5lU3ViR2VvbWV0cnkuU1VCX0dFT01FVFJZX1RZUEUpLFxyXG5cdFx0U3ViTWVzaFBvb2wuYWRkU3ViTWVzaENsYXNzKFRyaWFuZ2xlU3ViTWVzaCwgVHJpYW5nbGVTdWJHZW9tZXRyeS5TVUJfR0VPTUVUUllfVFlQRSksXHJcblx0XHRTdWJNZXNoUG9vbC5hZGRTdWJNZXNoQ2xhc3MoQ3VydmVTdWJNZXNoLCBDdXJ2ZVN1Ykdlb21ldHJ5LlNVQl9HRU9NRVRSWV9UWVBFKV07XHJcbn1cclxuXHJcbmV4cG9ydCA9IFN1Yk1lc2hQb29sOyJdfQ==
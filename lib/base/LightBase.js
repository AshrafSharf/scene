var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AbstractMethodError = require("awayjs-core/lib/errors/AbstractMethodError");
var DisplayObjectContainer = require("awayjs-display/lib/containers/DisplayObjectContainer");
var LightEvent = require("awayjs-display/lib/events/LightEvent");
var LightBase = (function (_super) {
    __extends(LightBase, _super);
    function LightBase() {
        _super.call(this);
        this._color = 0xffffff;
        this._colorR = 1;
        this._colorG = 1;
        this._colorB = 1;
        this._ambientColor = 0xffffff;
        this._ambient = 0;
        this._iAmbientR = 0;
        this._iAmbientG = 0;
        this._iAmbientB = 0;
        this._specular = 1;
        this._iSpecularR = 1;
        this._iSpecularG = 1;
        this._iSpecularB = 1;
        this._diffuse = 1;
        this._iDiffuseR = 1;
        this._iDiffuseG = 1;
        this._iDiffuseB = 1;
        this._castsShadows = false;
    }
    Object.defineProperty(LightBase.prototype, "castsShadows", {
        get: function () {
            return this._castsShadows;
        },
        set: function (value) {
            if (this._castsShadows == value)
                return;
            this._castsShadows = value;
            if (value) {
                if (this._shadowMapper == null)
                    this._shadowMapper = this.pCreateShadowMapper();
                this._shadowMapper.light = this;
            }
            else {
                this._shadowMapper.dispose();
                this._shadowMapper = null;
            }
            //*/
            this.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));
        },
        enumerable: true,
        configurable: true
    });
    LightBase.prototype.pCreateShadowMapper = function () {
        throw new AbstractMethodError();
    };
    Object.defineProperty(LightBase.prototype, "specular", {
        get: function () {
            return this._specular;
        },
        set: function (value) {
            if (value < 0)
                value = 0;
            this._specular = value;
            this.updateSpecular();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightBase.prototype, "diffuse", {
        get: function () {
            return this._diffuse;
        },
        set: function (value) {
            if (value < 0)
                value = 0;
            this._diffuse = value;
            this.updateDiffuse();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightBase.prototype, "color", {
        get: function () {
            return this._color;
        },
        set: function (value) {
            this._color = value;
            this._colorR = ((this._color >> 16) & 0xff) / 0xff;
            this._colorG = ((this._color >> 8) & 0xff) / 0xff;
            this._colorB = (this._color & 0xff) / 0xff;
            this.updateDiffuse();
            this.updateSpecular();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightBase.prototype, "ambient", {
        get: function () {
            return this._ambient;
        },
        set: function (value) {
            if (value < 0)
                value = 0;
            else if (value > 1)
                value = 1;
            this._ambient = value;
            this.updateAmbient();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightBase.prototype, "ambientColor", {
        get: function () {
            return this._ambientColor;
        },
        set: function (value) {
            this._ambientColor = value;
            this.updateAmbient();
        },
        enumerable: true,
        configurable: true
    });
    LightBase.prototype.updateAmbient = function () {
        this._iAmbientR = ((this._ambientColor >> 16) & 0xff) / 0xff * this._ambient;
        this._iAmbientG = ((this._ambientColor >> 8) & 0xff) / 0xff * this._ambient;
        this._iAmbientB = (this._ambientColor & 0xff) / 0xff * this._ambient;
    };
    LightBase.prototype.iGetObjectProjectionMatrix = function (entity, camera, target) {
        if (target === void 0) { target = null; }
        throw new AbstractMethodError();
    };
    Object.defineProperty(LightBase.prototype, "assetType", {
        //@override
        get: function () {
            return LightBase.assetType;
        },
        enumerable: true,
        configurable: true
    });
    LightBase.prototype.updateSpecular = function () {
        this._iSpecularR = this._colorR * this._specular;
        this._iSpecularG = this._colorG * this._specular;
        this._iSpecularB = this._colorB * this._specular;
    };
    LightBase.prototype.updateDiffuse = function () {
        this._iDiffuseR = this._colorR * this._diffuse;
        this._iDiffuseG = this._colorG * this._diffuse;
        this._iDiffuseB = this._colorB * this._diffuse;
    };
    Object.defineProperty(LightBase.prototype, "shadowMapper", {
        get: function () {
            return this._shadowMapper;
        },
        set: function (value) {
            this._shadowMapper = value;
            this._shadowMapper.light = this;
        },
        enumerable: true,
        configurable: true
    });
    LightBase.assetType = "[asset Light]";
    return LightBase;
})(DisplayObjectContainer);
module.exports = LightBase;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL0xpZ2h0QmFzZS50cyJdLCJuYW1lcyI6WyJMaWdodEJhc2UiLCJMaWdodEJhc2UuY29uc3RydWN0b3IiLCJMaWdodEJhc2UuY2FzdHNTaGFkb3dzIiwiTGlnaHRCYXNlLnBDcmVhdGVTaGFkb3dNYXBwZXIiLCJMaWdodEJhc2Uuc3BlY3VsYXIiLCJMaWdodEJhc2UuZGlmZnVzZSIsIkxpZ2h0QmFzZS5jb2xvciIsIkxpZ2h0QmFzZS5hbWJpZW50IiwiTGlnaHRCYXNlLmFtYmllbnRDb2xvciIsIkxpZ2h0QmFzZS51cGRhdGVBbWJpZW50IiwiTGlnaHRCYXNlLmlHZXRPYmplY3RQcm9qZWN0aW9uTWF0cml4IiwiTGlnaHRCYXNlLmFzc2V0VHlwZSIsIkxpZ2h0QmFzZS51cGRhdGVTcGVjdWxhciIsIkxpZ2h0QmFzZS51cGRhdGVEaWZmdXNlIiwiTGlnaHRCYXNlLnNoYWRvd01hcHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBTyxtQkFBbUIsV0FBWSw0Q0FBNEMsQ0FBQyxDQUFDO0FBRXBGLElBQU8sc0JBQXNCLFdBQVcsc0RBQXNELENBQUMsQ0FBQztBQUdoRyxJQUFPLFVBQVUsV0FBYyxzQ0FBc0MsQ0FBQyxDQUFDO0FBR3ZFLElBQU0sU0FBUztJQUFTQSxVQUFsQkEsU0FBU0EsVUFBK0JBO0lBNkI3Q0EsU0E3QktBLFNBQVNBO1FBK0JiQyxpQkFBT0EsQ0FBQ0E7UUEzQkRBLFdBQU1BLEdBQVVBLFFBQVFBLENBQUNBO1FBQ3pCQSxZQUFPQSxHQUFVQSxDQUFDQSxDQUFDQTtRQUNuQkEsWUFBT0EsR0FBVUEsQ0FBQ0EsQ0FBQ0E7UUFDbkJBLFlBQU9BLEdBQVVBLENBQUNBLENBQUNBO1FBRW5CQSxrQkFBYUEsR0FBVUEsUUFBUUEsQ0FBQ0E7UUFDaENBLGFBQVFBLEdBQVVBLENBQUNBLENBQUNBO1FBQ3JCQSxlQUFVQSxHQUFVQSxDQUFDQSxDQUFDQTtRQUN0QkEsZUFBVUEsR0FBVUEsQ0FBQ0EsQ0FB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LENBQUNBLFdBQVdBLEdBQUdBLElBQUlBLENBQUNBLE9BQU9BLEdBQUNBLElBQUlBLENBQUNBLFNBQVNBLENBQUNBO1FBQy9DQSxJQUFJQSxDQUFDQSxXQUFXQSxHQUFHQSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFDQSxJQUFJQSxDQUFDQSxTQUFTQSxDQUFDQTtJQUNoREEsQ0FBQ0E7SUFFT1osaUNBQWFBLEdBQXJCQTtRQUVDYSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxJQUFJQSxDQUFDQSxPQUFPQSxHQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQTtRQUM3Q0EsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsSUFBSUEsQ0FBQ0EsT0FBT0EsR0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDN0NBLElBQUlBLENBQUNBLFVBQVVBLEdBQUdBLElBQUlBLENBQUNBLE9BQU9BLEdBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBO0lBQzlDQSxDQUFDQTtJQUVEYixzQkFBV0EsbUNBQVlBO2FBQXZCQTtZQUVDYyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxhQUFhQSxDQUFDQTtRQUMzQkEsQ0FBQ0E7YUFFRGQsVUFBd0JBLEtBQXNCQTtZQUU3Q2MsSUFBSUEsQ0FBQ0EsYUFBYUEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDM0JBLElBQUlBLENBQUNBLGFBQWFBLENBQUNBLEtBQUtBLEdBQUdBLElBQUlBLENBQUNBO1FBQ2pDQSxDQUFDQTs7O09BTkFkO0lBeEthQSxtQkFBU0EsR0FBVUEsZUFBZUEsQ0FBQ0E7SUErS2xEQSxnQkFBQ0E7QUFBREEsQ0FqTEEsQUFpTENBLEVBakx1QixzQkFBc0IsRUFpTDdDO0FBRUQsQUFBbUIsaUJBQVYsU0FBUyxDQUFDIiwiZmlsZSI6ImJhc2UvTGlnaHRCYXNlLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYXRyaXgzRFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvZ2VvbS9NYXRyaXgzRFwiKTtcbmltcG9ydCBBYnN0cmFjdE1ldGhvZEVycm9yXHRcdD0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9lcnJvcnMvQWJzdHJhY3RNZXRob2RFcnJvclwiKTtcblxuaW1wb3J0IERpc3BsYXlPYmplY3RDb250YWluZXJcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9jb250YWluZXJzL0Rpc3BsYXlPYmplY3RDb250YWluZXJcIik7XG5pbXBvcnQgQ2FtZXJhXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9DYW1lcmFcIik7XG5pbXBvcnQgSUVudGl0eVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZW50aXRpZXMvSUVudGl0eVwiKTtcbmltcG9ydCBMaWdodEV2ZW50XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZXZlbnRzL0xpZ2h0RXZlbnRcIik7XG5pbXBvcnQgU2hhZG93TWFwcGVyQmFzZVx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9tYXRlcmlhbHMvc2hhZG93bWFwcGVycy9TaGFkb3dNYXBwZXJCYXNlXCIpO1xuXG5jbGFzcyBMaWdodEJhc2UgZXh0ZW5kcyBEaXNwbGF5T2JqZWN0Q29udGFpbmVyXG57XG5cdHB1YmxpYyBzdGF0aWMgYXNzZXRUeXBlOnN0cmluZyA9IFwiW2Fzc2V0IExpZ2h0XVwiO1xuXG5cdHByaXZhdGUgX2NvbG9yOm51bWJlciA9IDB4ZmZmZmZmO1xuXHRwcml2YXRlIF9jb2xvclI6bnVtYmVyID0gMTtcblx0cHJpdmF0ZSBfY29sb3JHOm51bWJlciA9IDE7XG5cdHByaXZhdGUgX2NvbG9yQjpudW1iZXIgPSAxO1xuXG5cdHByaXZhdGUgX2FtYmllbnRDb2xvcjpudW1iZXIgPSAweGZmZmZmZjtcblx0cHJpdmF0ZSBfYW1iaWVudDpudW1iZXIgPSAwO1xuXHRwdWJsaWMgX2lBbWJpZW50UjpudW1iZXIgPSAwO1xuXHRwdWJsaWMgX2lBbWJpZW50RzpudW1iZXIgPSAwO1xuXHRwdWJsaWMgX2lBbWJpZW50QjpudW1iZXIgPSAwO1xuXG5cdHByaXZhdGUgX3NwZWN1bGFyOm51bWJlciA9IDE7XG5cdHB1YmxpYyBfaVNwZWN1bGFyUjpudW1iZXIgPSAxO1xuXHRwdWJsaWMgX2lTcGVjdWxhckc6bnVtYmVyID0gMTtcblx0cHVibGljIF9pU3BlY3VsYXJCOm51bWJlciA9IDE7XG5cblx0cHJpdmF0ZSBfZGlmZnVzZTpudW1iZXIgPSAxO1xuXHRwdWJsaWMgX2lEaWZmdXNlUjpudW1iZXIgPSAxO1xuXHRwdWJsaWMgX2lEaWZmdXNlRzpudW1iZXIgPSAxO1xuXHRwdWJsaWMgX2lEaWZmdXNlQjpudW1iZXIgPSAxO1xuXG5cdHByaXZhdGUgX2Nhc3RzU2hhZG93czpib29sZWFuID0gZmFsc2U7XG5cblx0cHJpdmF0ZSBfc2hhZG93TWFwcGVyOlNoYWRvd01hcHBlckJhc2U7XG5cblx0Y29uc3RydWN0b3IoKVxuXHR7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdHB1YmxpYyBnZXQgY2FzdHNTaGFkb3dzKCk6Ym9vbGVhblxuXHR7XG5cdFx0cmV0dXJuIHRoaXMuX2Nhc3RzU2hhZG93cztcblx0fVxuXG5cdHB1YmxpYyBzZXQgY2FzdHNTaGFkb3dzKHZhbHVlOmJvb2xlYW4pXG5cdHtcblx0XHRpZiAodGhpcy5fY2FzdHNTaGFkb3dzID09IHZhbHVlKVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0dGhpcy5fY2FzdHNTaGFkb3dzID0gdmFsdWU7XG5cblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdGlmICh0aGlzLl9zaGFkb3dNYXBwZXIgPT0gbnVsbClcblx0XHRcdFx0dGhpcy5fc2hhZG93TWFwcGVyID0gdGhpcy5wQ3JlYXRlU2hhZG93TWFwcGVyKCk7XG5cblx0XHRcdHRoaXMuX3NoYWRvd01hcHBlci5saWdodCA9IHRoaXM7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuX3NoYWRvd01hcHBlci5kaXNwb3NlKCk7XG5cdFx0XHR0aGlzLl9zaGFkb3dNYXBwZXIgPSBudWxsO1xuXHRcdH1cblx0XHQvLyovXG5cdFx0dGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBMaWdodEV2ZW50KExpZ2h0RXZlbnQuQ0FTVFNfU0hBRE9XX0NIQU5HRSkpO1xuXHR9XG5cblx0cHVibGljIHBDcmVhdGVTaGFkb3dNYXBwZXIoKTpTaGFkb3dNYXBwZXJCYXNlXG5cdHtcblx0XHR0aHJvdyBuZXcgQWJzdHJhY3RNZXRob2RFcnJvcigpO1xuXHR9XG5cblx0cHVibGljIGdldCBzcGVjdWxhcigpOm51bWJlclxuXHR7XG5cdFx0cmV0dXJuIHRoaXMuX3NwZWN1bGFyO1xuXHR9XG5cblx0cHVibGljIHNldCBzcGVjdWxhcih2YWx1ZTpudW1iZXIpXG5cdHtcblx0XHRpZiAodmFsdWUgPCAwKVxuXHRcdFx0dmFsdWUgPSAwO1xuXG5cdFx0dGhpcy5fc3BlY3VsYXIgPSB2YWx1ZTtcblx0XHR0aGlzLnVwZGF0ZVNwZWN1bGFyKCk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0IGRpZmZ1c2UoKTpudW1iZXJcblx0e1xuXHRcdHJldHVybiB0aGlzLl9kaWZmdXNlO1xuXHR9XG5cblx0cHVibGljIHNldCBkaWZmdXNlKHZhbHVlOm51bWJlcilcblx0e1xuXHRcdGlmICh2YWx1ZSA8IDApXG5cdFx0XHR2YWx1ZSA9IDA7XG5cblx0XHR0aGlzLl9kaWZmdXNlID0gdmFsdWU7XG5cdFx0dGhpcy51cGRhdGVEaWZmdXNlKCk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0IGNvbG9yKCk6bnVtYmVyXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fY29sb3I7XG5cdH1cblxuXHRwdWJsaWMgc2V0IGNvbG9yKHZhbHVlOm51bWJlcilcblx0e1xuXHRcdHRoaXMuX2NvbG9yID0gdmFsdWU7XG5cdFx0dGhpcy5fY29sb3JSID0gKCh0aGlzLl9jb2xvciA+PiAxNikgJiAweGZmKS8weGZmO1xuXHRcdHRoaXMuX2NvbG9yRyA9ICgodGhpcy5fY29sb3IgPj4gOCkgJiAweGZmKS8weGZmO1xuXHRcdHRoaXMuX2NvbG9yQiA9ICh0aGlzLl9jb2xvciAmIDB4ZmYpLzB4ZmY7XG5cblx0XHR0aGlzLnVwZGF0ZURpZmZ1c2UoKTtcblx0XHR0aGlzLnVwZGF0ZVNwZWN1bGFyKCk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0IGFtYmllbnQoKTpudW1iZXJcblx0e1xuXHRcdHJldHVybiB0aGlzLl9hbWJpZW50O1xuXHR9XG5cblx0cHVibGljIHNldCBhbWJpZW50KHZhbHVlOm51bWJlcilcblx0e1xuXHRcdGlmICh2YWx1ZSA8IDApXG5cdFx0XHR2YWx1ZSA9IDA7XG5cdFx0ZWxzZSBpZiAodmFsdWUgPiAxKVxuXHRcdFx0dmFsdWUgPSAxO1xuXG5cdFx0dGhpcy5fYW1iaWVudCA9IHZhbHVlO1xuXHRcdHRoaXMudXBkYXRlQW1iaWVudCgpO1xuXHR9XG5cblx0cHVibGljIGdldCBhbWJpZW50Q29sb3IoKTpudW1iZXJcblx0e1xuXHRcdHJldHVybiB0aGlzLl9hbWJpZW50Q29sb3I7XG5cdH1cblxuXHRwdWJsaWMgc2V0IGFtYmllbnRDb2xvcih2YWx1ZTpudW1iZXIpXG5cdHtcblx0XHR0aGlzLl9hbWJpZW50Q29sb3IgPSB2YWx1ZTtcblx0XHR0aGlzLnVwZGF0ZUFtYmllbnQoKTtcblx0fVxuXG5cdHByaXZhdGUgdXBkYXRlQW1iaWVudCgpXG5cdHtcblx0XHR0aGlzLl9pQW1iaWVudFIgPSAoKHRoaXMuX2FtYmllbnRDb2xvciA+PiAxNikgJiAweGZmKS8weGZmKnRoaXMuX2FtYmllbnQ7XG5cdFx0dGhpcy5faUFtYmllbnRHID0gKCh0aGlzLl9hbWJpZW50Q29sb3IgPj4gOCkgJiAweGZmKS8weGZmKnRoaXMuX2FtYmllbnQ7XG5cdFx0dGhpcy5faUFtYmllbnRCID0gKHRoaXMuX2FtYmllbnRDb2xvciAmIDB4ZmYpLzB4ZmYqdGhpcy5fYW1iaWVudDtcblx0fVxuXG5cdHB1YmxpYyBpR2V0T2JqZWN0UHJvamVjdGlvbk1hdHJpeChlbnRpdHk6SUVudGl0eSwgY2FtZXJhOkNhbWVyYSwgdGFyZ2V0Ok1hdHJpeDNEID0gbnVsbCk6TWF0cml4M0Rcblx0e1xuXHRcdHRocm93IG5ldyBBYnN0cmFjdE1ldGhvZEVycm9yKCk7XG5cdH1cblxuXHQvL0BvdmVycmlkZVxuXHRwdWJsaWMgZ2V0IGFzc2V0VHlwZSgpOnN0cmluZ1xuXHR7XG5cdFx0cmV0dXJuIExpZ2h0QmFzZS5hc3NldFR5cGU7XG5cdH1cblxuXHRwcml2YXRlIHVwZGF0ZVNwZWN1bGFyKClcblx0e1xuXHRcdHRoaXMuX2lTcGVjdWxhclIgPSB0aGlzLl9jb2xvclIqdGhpcy5fc3BlY3VsYXI7XG5cdFx0dGhpcy5faVNwZWN1bGFyRyA9IHRoaXMuX2NvbG9yRyp0aGlzLl9zcGVjdWxhcjtcblx0XHR0aGlzLl9pU3BlY3VsYXJCID0gdGhpcy5fY29sb3JCKnRoaXMuX3NwZWN1bGFyO1xuXHR9XG5cblx0cHJpdmF0ZSB1cGRhdGVEaWZmdXNlKClcblx0e1xuXHRcdHRoaXMuX2lEaWZmdXNlUiA9IHRoaXMuX2NvbG9yUip0aGlzLl9kaWZmdXNlO1xuXHRcdHRoaXMuX2lEaWZmdXNlRyA9IHRoaXMuX2NvbG9yRyp0aGlzLl9kaWZmdXNlO1xuXHRcdHRoaXMuX2lEaWZmdXNlQiA9IHRoaXMuX2NvbG9yQip0aGlzLl9kaWZmdXNlO1xuXHR9XG5cblx0cHVibGljIGdldCBzaGFkb3dNYXBwZXIoKTpTaGFkb3dNYXBwZXJCYXNlXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fc2hhZG93TWFwcGVyO1xuXHR9XG5cblx0cHVibGljIHNldCBzaGFkb3dNYXBwZXIodmFsdWU6U2hhZG93TWFwcGVyQmFzZSlcblx0e1xuXHRcdHRoaXMuX3NoYWRvd01hcHBlciA9IHZhbHVlO1xuXHRcdHRoaXMuX3NoYWRvd01hcHBlci5saWdodCA9IHRoaXM7XG5cdH1cbn1cblxuZXhwb3J0ID0gTGlnaHRCYXNlOyJdfQ==
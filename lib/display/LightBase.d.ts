import { Matrix3D } from "@awayjs/core/lib/geom/Matrix3D";
import { DisplayObjectContainer } from "../display/DisplayObjectContainer";
import { IEntity } from "../display/IEntity";
import { ShadowMapperBase } from "../materials/shadowmappers/ShadowMapperBase";
export declare class LightBase extends DisplayObjectContainer {
    private _color;
    private _colorR;
    private _colorG;
    private _colorB;
    private _ambientColor;
    private _ambient;
    _iAmbientR: number;
    _iAmbientG: number;
    _iAmbientB: number;
    private _specular;
    _iSpecularR: number;
    _iSpecularG: number;
    _iSpecularB: number;
    private _diffuse;
    _iDiffuseR: number;
    _iDiffuseG: number;
    _iDiffuseB: number;
    private _shadowsEnabled;
    private _shadowMapper;
    constructor();
    shadowsEnabled: boolean;
    pCreateShadowMapper(): ShadowMapperBase;
    specular: number;
    diffuse: number;
    color: number;
    ambient: number;
    ambientColor: number;
    private updateAmbient();
    iGetObjectProjectionMatrix(entity: IEntity, cameraTransform: Matrix3D, target?: Matrix3D): Matrix3D;
    private updateSpecular();
    private updateDiffuse();
    shadowMapper: ShadowMapperBase;
}

{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "MovieClip",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "evalScript",
    "addScriptForExecution",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "numChildren",
    "child",
    "removeChildAt",
    "getChildAt",
    "console",
    "log",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "command_index_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "source_child_sessionIDS",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "command_length_stream",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "unregisterScriptObject",
    "isAsset",
    "freeFromScript",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "doit",
    "childID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "firstMaskID",
    "mask",
    "masks",
    "mouseEnabled",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/entities/MovieClip",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "Event",
    "MouseEvent",
    "FrameScriptManager",
    "timeline",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "reset",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "add_script_to_queue",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "executePostConstructCommands",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "mc",
    "script",
    "_queued_mcs",
    "_queued_scripts",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_sceneGraphDepths",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "container",
    "_container",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ISceneGraphNodeClass",
    "awayjs-display/lib/pool/ITextureVO",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "SceneGraphNodePool",
    "sceneGraphNodeClass",
    "_sceneGraphNodePool",
    "_sceneGraphNodeClass",
    "displayObjectContainer",
    "sceneGraphNode",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gCAAA,SAAAjB,EAAAkB,EAAAJ,SCEMK,qDAAqD,SAASnB,EAAQkB,EAAOJ,SAE7EM,iDAAiD,SAASpB,EAAQkB,EAAOJ,SAEzEO,8CAA8C,SAASrB,EAAQkB,EAAOJ,SAEtEQ,0CAA0C,SAAStB,EAAQkB,EAAOJ,SAElES,wDAAwD,SAASvB,EAAQkB,EAAOJ,GACtF,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCdtB,IAAOG,GAASjC,EAAc,oCDoB9B,ICfMkC,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAApB,KAAAU,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cDkBJM,IClBP,WAEC,MAAOb,MAAKc,cDmBNC,WAAY,KACZC,aAAc,MCNdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDUJM,ICVP,WAEC,MAAOJ,GAAkBS,WDWnBH,WAAY,KACZC,aAAc,MCzCPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmChCf,GAA2BJ,QAAlBoB,IDeNU,oCAAoCC,YAAYC,yCAAyC,SAAS9C,EAAQkB,EAAOJ,GAIpH,GEzDMiC,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEuB7B,GAAAJ,QAAdiC,OF2DHG,4CAA4C,SAASlD,EAAQkB,EAAOJ,GAC1E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GG/EtB,IAAOqB,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAIrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CHiFrC,IG1EMuD,GAAgB,SAAApB,GAASX,EAAzB+B,EAAgBpB,EAgGrB,SAhGKoB,GAgGOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EA9FC/B,MAAAgC,aAAsB,CACtBhC,MAAAiC,UAAoB,IAMpBjC,MAAAkC,eAAyB,KAEzBlC,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAoGjBpC,MAAAqC,UAAmB,EAd1BrC,MAAKsC,WAAatC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAId,GAAiB1B,KAAKuC,qBAAuB,GAAIb,EAE3J1B,MAAKyC,QAAUzC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAIb,GAAiB3B,KAAKuC,qBAAuB,GAAIZ,EAExJ3B,MAAKgC,aAAehC,KAAKsC,WAAWI,MAvFrC/B,OAAAC,eAAWkB,EAAAvB,UAAA,aH6EJM,IG7EP,WAEC,MAAOiB,GAAiBZ,WH8ElBH,WAAY,KACZC,aAAc,MG5ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,eH+EJM,IG/EP,WAEC,MAAOb,MAAKgC,cHgFNjB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,iBHiFJM,IGjFP,WAEC,MAAOb,MAAKkC,gBHkFNS,IG/EP,SAAyBC,GAExB,GAAI5C,KAAKkC,gBAAkBU,EAC1B,MAED5C,MAAKkC,eAAiBU,CAEtB,IAAIA,EACH5C,KAAKiC,UAAY,MH8EZlB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH+EJM,IG/EP,WAEC,MAAOb,MAAKmC,SHgFNpB,WAAY,KACZC,aAAc,MG3ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHiFJM,IGjFP,WAEC,MAAOb,MAAKoC,SHkFNrB,WAAY,KACZC,aAAc,MG7ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,aHmFJM,IGnFP,WAEC,MAAOb,MAAKsC,YHoFNvB,WAAY,KACZC,aAAc,MG/ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHqFJM,IGrFP,WAEC,MAAOb,MAAKyC,SHsFN1B,WAAY,KACZC,aAAc,MG/ErBL,QAAAC,eAAWkB,EAAAvB,UAAA,OHqFJM,IGrFP,WAEC,GAAIb,KAAKiC,UACRjC,KAAK6C,OAAO7C,KAAK8C,KAElB,OAAO9C,MAAK8C,MHqFN/B,WAAY,KACZC,aAAc,MGrEdc,GAAAvB,UAAAwC,qBAAP,WAEC,MAAO/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cAazBF,GAAAvB,UAAAyC,QAAR,SAAgBC,EAAUC,GAEzB,GAAIC,GAAiBC,KAAKC,OAAOJ,EAAIjD,KAAKsD,MAAQtD,KAAKuD,YACvD,IAAIC,GAAiBJ,KAAKC,OAAOH,EAAIlD,KAAKyD,MAAQzD,KAAK0D,YAGvD,IAAGP,EAAU,GAAKA,EAAUnD,KAAKqC,WAAamB,EAAU,GAAKA,EAAUxD,KAAKqC,UAAW,OAAQ,CAE/F,OAAQc,GAAUK,EAAUxD,KAAKqC,UAE1BP,GAAAvB,UAAAoD,UAAR,WH4DO,GGxDFC,GAAyB5D,KAAK4D,UAAU/C,IAAIb,KAAKgC,aACrD,IAAI6B,GAAgB7D,KAAK4D,UAAUE,UACnC9D,MAAKsD,KAAOS,OAAOC,SACnBhE,MAAKiE,MAAQF,OAAOC,SACpBhE,MAAKyD,KAAOM,OAAOC,SACnBhE,MAAKkE,MAAQH,OAAOC,SACpB,KAAI,GAAIG,GAAW,EAAGA,EAAIP,EAAUrE,OAAQ4E,GAAG,EAC/C,CACC,GAAIlB,GAAWW,EAAUO,EACzB,IAAIjB,GAAWU,EAAUO,EAAI,EAE7B,IAAGlB,EAAIjD,KAAKsD,KAAMtD,KAAKsD,KAAOL,CAC9B,IAAGA,EAAIjD,KAAKiE,KAAMjE,KAAKiE,KAAOhB,CAC9B,IAAGC,EAAIlD,KAAKyD,KAAMzD,KAAKyD,KAAOP,CAC9B,IAAGA,EAAIlD,KAAKkE,KAAMlE,KAAKkE,KAAOhB,EAG/B,GAAIkB,GAAepE,KAAKiE,KAAOjE,KAAKsD,IACpC,IAAIe,GAAgBrE,KAAKkE,KAAOlE,KAAKyD,IH2D/B,IGvDFa,GAAsB,EAC1BtE,MAAKqC,UAAYe,KAAKmB,KAAKnB,KAAKoB,KAAKxE,KAAKyE,aAC1CzE,MAAKqC,UAAYe,KAAKsB,IAAI1E,KAAKqC,UAAWiC,EAC1C,IAAIK,GAAkB3E,KAAKqC,UAAYrC,KAAKqC,SAC5C,IAAIuC,GAAmBR,EAAMpE,KAAKqC,SAClC,IAAIwC,GAAoBR,EAAOrE,KAAKqC,SAEpCrC,MAAKuD,YAAc,EAAEqB,CACrB5E,MAAK0D,YAAc,EAAEmB,CAErB,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJtF,MAAKuF,MAAQ,GAAIC,OAAqBb,EAEtC,KAAI,GAAIR,GAAW,EAAGA,EAAInE,KAAKgC,aAAcmC,GAAG,EAAG,CAClDW,EAAMX,EAAI,CACVY,GAAMZ,EAAI,CACVa,GAAMb,EAAI,CAEVc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHmDrB,IGhDL4B,GAAcrC,KAAKsB,IAAIO,EAAIE,EAAIE,GAAIrF,KAAKsD,IAC5C,IAAIoC,GAAetC,KAAKuC,IAAIV,EAAIE,EAAIE,GAAIrF,KAAKsD,IAC7C,IAAIsC,GAAaxC,KAAKsB,IAAIQ,EAAIE,EAAIE,GAAItF,KAAKyD,IAC3C,IAAIoC,GAAgBzC,KAAKuC,IAAIT,EAAIE,EAAIE,GAAItF,KAAKyD,IAE9C,IAAIqC,GAAqB1C,KAAKC,MAAMoC,EAAOzF,KAAKuD,YAChD,IAAIwC,GAAqB3C,KAAKC,MAAMuC,EAAM5F,KAAK0D,YAE/C,IAAIsC,GAAqB5C,KAAKC,MAAMqC,EAAQ1F,KAAKuD,YACjD,IAAI0C,GAAqB7C,KAAKC,MAAMwC,EAAS7F,KAAK0D,YAGlD,KAAK,GAAI1E,GAAa8G,EAAa9G,GAAKgH,EAAahH,IACrD,CACC,IAAK,GAAIkH,GAAaH,EAAaG,GAAKD,EAAaC,IACrD,CACC,GAAIC,GAAenH,EAAIkH,EAAIlG,KAAKqC,SAChC,IAAI+D,GAAsBpG,KAAKuF,MAAMY,EACrC,IAAGC,GAAS,KACZ,CACCA,EAAQ,GAAIZ,MACZxF,MAAKuF,MAAMY,GAASC,EAGrBA,EAAMC,KAAKvB,EAAKC,EAAKC,MAKlBlD,GAAAvB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GACvC,GAAI1C,GAAgB7D,KAAK4D,UAAUE,UACnC,IAAI0C,GAAkBxG,KAAKyG,OAAO3C,UAElC,IAAIF,GAAyB5D,KAAK4D,UAAU/C,IAAIb,KAAKgC,aACrD,IAAIyE,GAAsBzG,KAAKyG,OAAO5F,IAAIb,KAAKgC,aAE/C,IAAI8C,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJ,IAAGtF,KAAKyE,YAAc,IAAI,CAGzB,GAAIzE,KAAKuF,OAAS,KAAM,CACvBvF,KAAK2D,YAEN,GAAI+C,GAAc1G,KAAKgD,QAAQC,EAAGC,EAClC,IAAIwD,IAAS,EAAG,MAAO,MAEvB,IAAIN,GAAsBpG,KAAKuF,MAAMmB,EACrC,IAAIN,GAAS,KAAM,MAAO,MAG1B,KAAK,GAAIjC,GAAW,EAAGA,EAAIiC,EAAM7G,OAAQ4E,GAAK,EAAG,CAChDW,EAAMsB,EAAMjC,EACZY,GAAMqB,EAAMjC,EAAI,EAChBa,GAAMoB,EAAMjC,EAAI,EAEhBc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHoClB,IG/BR8C,GAAY1B,EAAKhC,CACrB,IAAI2D,GAAY1B,EAAKhC,CHiCT,IG9BR2D,GAAYzB,EAAKF,CACrB,IAAI4B,KAAc3B,EAAKF,EHgCX,IG5BR8B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EAAG,QAEbJ,GAAKxB,EAAKlC,CACV2D,GAAKxB,EAAKlC,CACV2D,GAAKvB,EAAKF,CACV0B,KAAOzB,EAAKF,EAEZ4B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEbJ,GAAKtB,EAAKpC,CACV2D,GAAKtB,EAAKpC,CACV2D,GAAK3B,EAAKI,CACVwB,KAAO7B,EAAKI,EAEZ0B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEb,IAAIC,GAAgBP,EAAO3B,EAAM0B,EAEjC,IAAIQ,GAAU,EAAG,CAEhB,GAAIC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAapE,EAAIgC,CACrB,IAAIqC,GAAapE,EAAIgC,CAErB,IAAIqC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CH2B1B,IGvBXG,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIxH,GAAWyH,EAAKA,EAAKC,CAEzB,IAAIC,GAAYhE,EAAUkB,EAAMjB,EAAS,EACzC,IAAI5D,EAAI,GAAK2H,IAAO,EAAG,CACtB,aACM,IAAI3H,EAAI,GAAK2H,GAAM,EAAG,CAC5B,UAGF,MAAO,MAER,MAAO,OAIR,IAAI,GAAIzD,GAAW,EAAGA,EAAInE,KAAKgC,aAAcmC,GAAG,EAChD,CACCW,EAAMX,EAAI,CACVY,GAAMZ,EAAI,CACVa,GAAMb,EAAI,CAEVc,GAAKrB,EAAUkB,EAAMjB,EACrBqB,GAAKtB,EAAUkB,EAAMjB,EAAS,EAC9BsB,GAAKvB,EAAUmB,EAAMlB,EACrBuB,GAAKxB,EAAUmB,EAAMlB,EAAS,EAC9BwB,GAAKzB,EAAUoB,EAAMnB,EACrByB,GAAK1B,EAAUoB,EAAMnB,EAAS,EHqBrB,IGhBL8C,GAAY1B,EAAKhC,CACrB,IAAI2D,GAAY1B,EAAKhC,CHkBZ,IGfL2D,GAAYzB,EAAKF,CACrB,IAAI4B,KAAc3B,EAAKF,EHiBd,IGbL8B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EAAG,QAEbJ,GAAKxB,EAAKlC,CACV2D,GAAKxB,EAAKlC,CACV2D,GAAKvB,EAAKF,CACV0B,KAAOzB,EAAKF,EAEZ4B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEbJ,GAAKtB,EAAKpC,CACV2D,GAAKtB,EAAKpC,CACV2D,GAAK3B,EAAKI,CACVwB,KAAO7B,EAAKI,EAEZ0B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEb,IAAIC,GAAgBP,EAAO3B,EAAM0B,EAEjC,IAAIQ,GAAU,EAAG,CAEhB,GAAIC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAapE,EAAIgC,CACrB,IAAIqC,GAAapE,EAAIgC,CAErB,IAAIqC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CHY7B,IGRRG,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIxH,GAAWyH,EAAKA,EAAKC,CAEzB,IAAIC,GAAYhE,EAAUkB,EAAMjB,EAAS,EACzC,IAAI5D,EAAI,GAAK2H,IAAO,EAAG,CACtB,aACM,IAAI3H,EAAI,GAAK2H,GAAM,EAAG,CAC5B,UAGF,MAAO,MAER,MAAO,OASD9F,GAAAvB,UAAAsH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAU9H,KAAKsC,WAClB,MAED,IAAIwF,YAAkBpG,GAAkB,CACvC1B,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAAgCwF,MAC/B,IAAIA,EAAQ,CAClB9H,KAAKsC,WAAWK,IAAImF,EAAQC,OACtB,CACN/H,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAIZ,GAAiB1B,KAAKuC,qBAG7CvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC,IAAI1C,KAAKkC,eACRlC,KAAKiI,qBAAqBjI,KAAK8C,KAEhC9C,MAAKkI,mBAELlI,MAAKiI,qBAAqBjI,KAAKsC,WAE/BtC,MAAKmI,eAAenI,KAAKsC,WAAW8F,IAAM,MASpCtG,GAAAvB,UAAA8H,UAAP,SAAiBP,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,GAAU9H,KAAKyC,QAClB,MAED,IAAIqF,YAAkBnG,GAAkB,CACvC3B,KAAKgI,sBAAsBhI,KAAKyC,QAChCzC,MAAKyC,QAA6BqF,MAC5B,IAAIA,EAAQ,CAClB9H,KAAKyC,QAAQE,IAAImF,EAAQC,OACnB,CACN/H,KAAKgI,sBAAsBhI,KAAKyC,QAChCzC,MAAKyC,QAAU,GAAId,GAAiB3B,KAAKuC,qBAG1CvC,KAAKiI,qBAAqBjI,KAAKyC,QAE/BzC,MAAKmI,eAAenI,KAAKyC,QAAQ2F,IAAM,MAUjCtG,GAAAvB,UAAAsC,OAAP,SAAciF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAK/H,KAAKkC,eAAgB,CACzB,GAAI4F,GAAU9H,KAAK8C,KAClB,MAED,IAAIgF,YAAkBnG,GAAkB,CACvC3B,KAAKgI,sBAAsBhI,KAAK8C,KAChC9C,MAAK8C,KAA0BgF,MACzB,IAAIA,EAAQ,CAClB,IAAK9H,KAAK8C,KACT9C,KAAK8C,KAAO,GAAInB,GAAiB3B,KAAKuC,oBAEvCvC,MAAK8C,KAAKH,IAAImF,EAAQC,OAChB,IAAI/H,KAAK8C,KAAM,CACrB9C,KAAKgI,sBAAsBhI,KAAK8C,KAChC9C,MAAK8C,KAAO,IACZ,aAEK,CACN9C,KAAK8C,KAAOjB,EAAiByG,YAAYtI,KAAKuI,UAAWvI,KAAK8C,KAAM9C,KAAKuC,oBAAqBvC,KAAKgC,cAGpGhC,KAAKiI,qBAAqBjI,KAAK8C,KAE/B9C,MAAKmI,eAAenI,KAAK8C,KAAKsF,IAAM,MAO9BtG,GAAAvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAWrB,SAChBjB,MAAKsC,WAAa,IAElBtC,MAAKyC,QAAQxB,SACbjB,MAAKyC,QAAU,IAEf,IAAIzC,KAAK8C,KAAM,CACd9C,KAAK8C,KAAK7B,SACVjB,MAAK8C,KAAO,MASPhB,GAAAvB,UAAAiI,MAAP,WAEC,GAAIA,GAAyB,GAAI1G,GAAiB9B,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBiG,QAAU,KAG/GA,GAAMC,cAAgB,KAEtB,IAAIzI,KAAK0I,QACRF,EAAMG,WAAW3I,KAAK0I,QAAQF,QAE/B,IAAIxI,KAAK4I,IACRJ,EAAM3F,OAAO7C,KAAK4I,IAAIJ,QAGvBA,GAAMC,cAAgBzI,KAAKkC,cAE3B,OAAOsG,GAGD1G,GAAAvB,UAAAsI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjClH,EAAiBmH,SAASF,EAAQC,EAAQ/I,KAAK4I,IAAK5I,KAAK4I,IAAIlG,OAYvDZ,GAAAvB,UAAA0I,MAAP,SAAaA,GAEZpH,EAAiBoH,MAAMA,EAAOjJ,KAAK4D,UAAW5D,KAAKgC,cAG7CF,GAAAvB,UAAA2I,oBAAP,SAA2BC,GAE1BtH,EAAiBqH,oBAAoBC,EAAWnJ,KAAK4D,UAAW,KAAM,KAAM5D,KAAK4D,UAAUlB,OAGrFZ,GAAAvB,UAAA6I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBI,mBAAmBzJ,KAAMsJ,EAAUC,EAAoBC,GAnkBjE1H,GAAAZ,UAAmB,0BAqkBlC,OAAAY,IAvkB+BF,EAykB/BnC,GAA0BJ,QAAjByC,IHvCN4H,8CAA8CtI,UAAUuI,8CAA8CvI,UAAUwI,0CAA0C,0CAA0CC,4CAA4C,8CAA8CC,wCAAwC,SAASvL,EAAQkB,EAAOJ,GACjW,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GIpjBtB,IAAOyB,GAAgBvD,EAAa,2CAEpC,IAAOwL,GAAWxL,EAAc,sCJ+jBhC,IIjjBMyL,GAAY,SAAAtJ,GAASX,EAArBiK,EAAYtJ,EA8BjB,SA9BKsJ,GA8BOC,EAA8BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1D5I,EAAApB,KAAAU,KAEAA,MAAKmK,aAAeD,CACpBlK,MAAKoK,aAAeH,CACpBjK,MAAKsJ,SAAWA,EAzBjB3I,OAAAC,eAAWoJ,EAAAzJ,UAAA,aJyjBJM,IIzjBP,WAEC,MAAOmJ,GAAa9I,WJ0jBdH,WAAY,KACZC,aAAc,MIrjBrBL,QAAAC,eAAWoJ,EAAAzJ,UAAA,eJ2jBJM,II3jBP,WAEC,MAAOb,MAAKoK,cJ4jBNrJ,WAAY,KACZC,aAAc,MIxiBdgJ,GAAAzJ,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CAgK,GAAA9I,UAAmB,sBAEnB8I,GAAAK,WAAyBvI,CA0CxC,OAAAkI,IA9C2BD,EAgD3BtK,GAAsBJ,QAAb2K,IJgjBNvI,2CAA2C,2CAA2C6I,sCAAsC,wCAAwCC,yCAAyC,SAAShM,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKtnBtB,IAAOmK,GAAGjM,EAAiB,2BAC3B,IAAOkM,GAAclM,EAAc,sCACnC,IAAOmM,GAAMnM,EAAgB,8BAC7B,IAAOoM,GAAUpM,EAAe,kCAChC,IAAOqM,GAAQrM,EAAgB,gCAC/B,IAAOsM,GAAatM,EAAc,qCAClC,IAAOuM,GAAKvM,EAAgB,6BAE5B,IAAOwM,GAAQxM,EAAgB,gCAC/B,IAAOiC,GAASjC,EAAe,oCAC/B,IAAOyM,GAAmBzM,EAAa,6CAKvC,IAAO0M,GAAU1M,EAAe,uCAIhC,IAAO+C,GAAa/C,EAAc,wCAElC,IAAO2M,GAAe3M,EAAc,0CAEpC,IAAO4M,GAAS5M,EAAe,oCAI/B,IAAO6M,GAAkB7M,EAAa,6CAItC,IAAO8M,GAAkB9M,EAAa,+CACtC,IAAO+M,GAAU/M,EAAe,uCL0uBhC,IKlmBMgN,GAAa,SAAA7K,GAASX,EAAtBwL,EAAa7K,EAixClB,SAjxCK6K,KAAN,GAAAC,GAAAxL,IAmxCEU,GAAApB,KAAAU,KAhxCOA,MAAAyL,cAA6B,GAAIjG,MAQjCxF,MAAA0L,kBAA4B,IAE5B1L,MAAA2L,qBAA+B,IAMhC3L,MAAA4L,iBAA4B,GAAIhB,EAG7B5K,MAAA6L,UAAmB,CACnB7L,MAAA8L,QAA0B,IAQ5B9L,MAAA+L,UAAqB,GAAInB,EAIzB5K,MAAAgM,uBAAkC,GAAIpB,EAEtC5K,MAAAiM,eAA0B,GAAIlB,EAE9B/K,MAAAkM,oBAA8B,IAC/BlM,MAAAmM,qBAA+B,IAC9BnM,MAAAoM,sBAAgC,IACjCpM,MAAAqM,uBAAiC,IAchCrM,MAAAsM,WAAoB,CACpBtM,MAAAuM,WAAoB,CACpBvM,MAAAwM,WAAoB,CACpBxM,MAAAyM,QAAmB,GAAI1B,EACvB/K,MAAA0M,OAAkB,GAAI9B,EAMtB5K,MAAA2M,SAAkB,CAMlB3M,MAAA4M,OAAgB,CAChB5M,MAAA6M,OAAgB,CAChB7M,MAAA8M,OAAgB,CAChB9M,MAAA+M,QAAiB,CACjB/M,MAAAgN,QAAiB,CACjBhN,MAAAiN,QAAiB,CACjBjN,MAAAkN,GAAY,CACZlN,MAAAmN,GAAY,CACZnN,MAAAoN,GAAY,CACZpN,MAAAqN,OAAkB,GAAItC,EACtB/K,MAAAsN,YAAuB,GAAIvC,EAC3B/K,MAAAuN,mBAA8B,GAAI3C,EAClC5K,MAAAwN,WAAqB,IAErBxN,MAAAyN,KAAgB,GAAI1C,EACpB/K,MAAA0N,KAAgB,GAAI3C,EACpB/K,MAAA2N,KAAgB,GAAI5C,EACpB/K,MAAA4N,KAAgB,GAAI7C,EAGrB/K,MAAA6N,kBAA4B,KAU5B7N,MAAA8N,cAAmC,GAAItI,MACtCxF,MAAA+N,aAAiC,GAAIvI,MAMlCxF,MAAAgO,sBAAuC,GAAIvD,EAG3CzK,MAAAiO,uBAAiC,KAwCrCjO,MAAAkO,cAAuB5M,EAAcC,kBAkJrCvB,MAAAmO,aAAuB,IAyVvBnO,MAAAoO,gBAAyBlD,EAAgBmD,OAqpBzCrO,MAAKsO,uCAAyC,SAACC,GAA6B,MAAA/C,GAAKgD,8BAA8BD,GAC/GvO,MAAKyO,iCAAmC,SAACF,GAAgB,MAAA/C,GAAKkD,wBAAwBH,GAC5FvO,MAAK2O,qBAAuB,GAAInJ,OAAgB,EAEhDxF,MAAK2O,qBAAqB,GAAK3O,KAAKyN,IACpCzN,MAAK2O,qBAAqB,GAAK3O,KAAK0N,IACpC1N,MAAK2O,qBAAqB,GAAK3O,KAAK2N,IACpC3N,MAAK2O,qBAAqB,GAAK3O,KAAK4N,IAGpC5N,MAAK4O,WAAa,GAAIzD,GAAUnL,KAEhCA,MAAK+L,UAAU8C,UAEf7O,MAAK0M,OAAOoC,YAAY,GAAI,EAAG,EAG/B9O,MAAK+O,YAAc9D,EAAW+D,iBAlrC/BrO,OAAAC,eAAW2K,EAAAhL,UAAA,WL6jBJM,IK7jBP,WAEC,MAAOb,MAAKiP,UL8jBNtM,IK3jBP,SAAmBC,GAElB5C,KAAKiP,SAAWrM,GL4jBV7B,WAAY,KACZC,aAAc,MK1jBlBL,QAAAC,eAAW2K,EAAAhL,UAAA,yBL6jBPM,IK7jBJ,WAEI,MAAOb,MAAKiO,wBL8jBZtL,IK3jBJ,SAAiCC,GAE7B5C,KAAKiO,uBAAyBrL,CAC9B5C,MAAKkP,mCL4jBLnO,WAAY,KACZC,aAAc,MKzjBlBL,QAAAC,eAAW2K,EAAAhL,UAAA,wBL4jBPM,IK5jBJ,WAEI,GAAIb,KAAKmP,2BACLnP,KAAKoP,6BAET,OAAOpP,MAAKgO,uBL4jBZjN,WAAY,KACZC,aAAc,MK/iBrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLwjBJM,IKxjBP,WAEO,MAAOb,MAAKqP,iBAAiBC,iBLyjB7B3M,IKtjBJ,SAAiBC,GAEb5C,KAAKqP,iBAAiBC,gBAAkB1M,GLujBxC7B,WAAY,KACZC,aAAc,MKrjBlBL,QAAAC,eAAW2K,EAAAhL,UAAA,kBLwjBPM,IKxjBJ,WAEI,MAAOb,MAAKqP,kBLyjBZ1M,IKtjBJ,SAA0BC,GAGtB,GAAI5C,KAAKqP,iBACLrP,KAAKqP,iBAAiBE,oBAAoB,SAAUvP,KAAKyO,iCAG7DzO,MAAKwP,oBAAoB5M,EAEzB,IAAIA,EACAA,EAAM6M,iBAAiB,SAAUzP,KAAKyO,mCLojB1C1N,WAAY,KACZC,aAAc,MKrhBrBL,QAAAC,eAAW2K,EAAAhL,UAAA,cL2hBJM,IK3hBP,WAEC,MAAOb,MAAK+O,aL4hBNpM,IKzhBP,SAAsBC,GAErB,GAAI5C,KAAK+O,aAAenM,EACvB,MAED5C,MAAK+O,YAAcnM,CAEnB5C,MAAK0P,oBAEL,IAAIC,GAAa3P,KAAK+N,aAAaxO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+N,aAAa/O,GAAG4Q,gBLuhBhB7O,WAAY,KACZC,aAAc,MK3crBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLwdJM,IKxdP,WAEC,MAAOb,MAAK6P,SAASC,MAAM9P,KAAK+P,QLyd1BpN,IKtdP,SAAiBqN,GAEhB,GAAIhQ,KAAKiQ,QAAUD,EAClB,MAEDhQ,MAAKiQ,OAASD,CAEdhQ,MAAKkQ,WAAWF,EAAIhQ,KAAK6P,SAASC,QLqd5B/O,WAAY,KACZC,aAAc,MKhdrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULsdJM,IKtdP,WAECb,KAAKyM,QAAQxJ,EAAIjD,KAAKmQ,SACtBnQ,MAAKyM,QAAQvJ,EAAIlD,KAAKoQ,SACtBpQ,MAAKyM,QAAQlG,EAAIvG,KAAKqQ,SAEtB,OAAOrQ,MAAKyM,SLsdN9J,IKndP,SAAkBC,GAEjB5C,KAAKmQ,UAAYvN,EAAMK,CACvBjD,MAAKoQ,UAAYxN,EAAMM,CACvBlD,MAAKqQ,UAAYzN,EAAM2D,GLodjBxF,WAAY,KACZC,aAAc,MKlXrBL,QAAAC,eAAW2K,EAAAhL,UAAA,UL+cJM,IK/cP,WAEC,MAAOb,MAAK6P,SAASxL,OAAOrE,KAAKsQ,QLgd3B3N,IK7cP,SAAkBqN,GAEjB,GAAIhQ,KAAKuQ,SAAWP,EACnB,MAEDhQ,MAAKuQ,QAAUP,CAEfhQ,MAAKwQ,WAAWR,EAAIhQ,KAAK6P,SAASxL,SL4c5BtD,WAAY,KACZC,aAAc,MKlcrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL6cJM,IK7cP,WAEC,GAAIb,KAAKyQ,SACR,MAAOzQ,MAAKyQ,SAASC,cAAc1Q,KAEpC,OAAO,IL6cDe,WAAY,KACZC,aAAc,MKxcrBL,QAAAC,eAAW2K,EAAAhL,UAAA,yBL8cJM,IK9cP,WAEC,GAAIb,KAAK2Q,4BAA6B,CACrC3Q,KAAKgM,uBAAuB4E,SAAS5Q,KAAK6Q,eAC1C7Q,MAAKgM,uBAAuB8E,QAC5B9Q,MAAK2Q,4BAA8B,MAEpC,MAAO3Q,MAAKgM,wBL+cNjL,WAAY,KACZC,aAAc,MK1crBL,QAAAC,eAAW2K,EAAAhL,UAAA,mBLgdJM,IKhdP,WAEC,MAAOb,MAAK6N,mBLidNlL,IK9cP,SAA2BC,GAE1B,GAAI5C,KAAK6N,mBAAqBjL,EAC7B,MAED5C,MAAK6N,kBAAoBjL,CAEzB,IAAIA,EAAO,CACV5C,KAAK4L,iBAAiBiD,UACtB7O,MAAKiM,eAAe8E,MAAM,EAAG,EAAG,GAGjC/Q,KAAKgR,6BL4cCjQ,WAAY,KACZC,aAAc,MKvcrBL,QAAAC,eAAW2K,EAAAhL,UAAA,YL6cJM,IK7cP,WAEC,MAAOb,MAAKiR,YL8cNlQ,WAAY,KACZC,aAAc,MK/brBL,QAAAC,eAAW2K,EAAAhL,UAAA,cL+cJM,IK/cP,WAEC,MAAOb,MAAKkR,aLgdNnQ,WAAY,KACZC,aAAc,MK7ZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,gBLgbJM,IKhbP,WAEC,MAAOb,MAAKoM,uBLibNzJ,IK9aP,SAAwBC,GAEvB,GAAI5C,KAAKoM,uBAAyBxJ,EACjC,MAED5C,MAAKoM,sBAAwBxJ,GL8avB7B,WAAY,KACZC,aAAc,MKparBL,QAAAC,eAAW2K,EAAAhL,UAAA,UL8aJM,IK9aP,WAEC,MAAOb,MAAKmR,SL+aNpQ,WAAY,KACZC,aAAc,MKtarBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULgbJM,IKhbP,WAEC,MAAOb,MAAKoR,SLibNrQ,WAAY,KACZC,aAAc,MKrarBL,QAAAC,eAAW2K,EAAAhL,UAAA,QLkbJM,IKlbP,WAEO,MAAOb,MAAKqR,QLmbZ1O,IKhbJ,SAAgBC,GAEZ5C,KAAKqR,OAASzO,GLibd7B,WAAY,KACZC,aAAc,MK5ZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,UL6aJM,IK7aP,WAEC,MAAOb,MAAKyQ,UL8aN1P,WAAY,KACZC,aAAc,MKzarBL,QAAAC,eAAW2K,EAAAhL,UAAA,aL+aJM,IK/aP,WAEC,MAAOb,MAAKsR,oBLgbN3O,IK7aP,SAAqBC,GAEpB,GAAI5C,KAAKsR,oBAAsB1O,EAC9B,MAED5C,MAAKsR,mBAAqB1O,CAE1B5C,MAAKuR,0BAA0BvR,KAAKyQ,SAAUzQ,KAAKyQ,SAASe,oBAAsB,KAAMxR,KAAKyR,UL4avF1Q,WAAY,KACZC,aAAc,MKvarBL,QAAAC,eAAW2K,EAAAhL,UAAA,mBL6aJM,IK7aP,WAEC,MAAOb,MAAK0R,mBL8aN/O,IK3aP,SAA2BC,GAE1B5C,KAAK0R,kBAAoB9O,GL4anB7B,WAAY,KACZC,aAAc,MKvarBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL6aJM,IK7aP,WAEC,MAAOb,MAAKqN,QL8aN1K,IK1aP,SAAiBgP,GAEhB,GAAI3R,KAAKqN,OAAOpK,GAAK0O,EAAM1O,GAAKjD,KAAKqN,OAAOnK,GAAKyO,EAAMzO,GAAKlD,KAAKqN,OAAO9G,GAAKoL,EAAMpL,EAClF,MAEDvG,MAAKqN,OAAOpK,EAAI0O,EAAM1O,CACtBjD,MAAKqN,OAAOnK,EAAIyO,EAAMzO,CACtBlD,MAAKqN,OAAO9G,EAAIoL,EAAMpL,CAEtBvG,MAAK4R,mBLyaC7Q,WAAY,KACZC,aAAc,MK7YrBL,QAAAC,eAAW2K,EAAAhL,UAAA,QL0aJM,IK1aP,WAEC,MAAOb,MAAK6R,OL2aN9Q,WAAY,KACZC,aAAc,MKxZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLkaJM,IKlaP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAKsM,WAAW3B,EAAWqH,oBLka5BrP,IK/ZP,SAAqBqN,GAEpB,GAAIhQ,KAAKmQ,WAAaH,EACrB,MAEDhQ,MAAKsM,WAAa0D,EAAIrF,EAAWsH,kBAEjCjS,MAAKkS,sBL8ZCnR,WAAY,KACZC,aAAc,MKrZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aL+ZJM,IK/ZP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAKuM,WAAW5B,EAAWqH,oBL+Z5BrP,IK5ZP,SAAqBqN,GAEpB,GAAIhQ,KAAKoQ,WAAaJ,EACrB,MAEDhQ,MAAKuM,WAAayD,EAAIrF,EAAWsH,kBAEjCjS,MAAKkS,sBL2ZCnR,WAAY,KACZC,aAAc,MKlZrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aL4ZJM,IK5ZP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAKwM,WAAW7B,EAAWqH,oBL4Z5BrP,IKzZP,SAAqBqN,GAEpB,GAAIhQ,KAAKqQ,WAAaL,EACrB,MAEDhQ,MAAKwM,WAAawD,EAAIrF,EAAWsH,kBAEjCjS,MAAKkS,sBLwZCnR,WAAY,KACZC,aAAc,MK1VrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULqWJM,IKrWP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAK+M,SLqWNpK,IKlWP,SAAkBqN,GAGjBhQ,KAAKmS,OAAS,IAEdnS,MAAKoS,WAAWpC,ILkWVjP,WAAY,KACZC,aAAc,MKxVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULmWJM,IKnWP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAKgN,SLmWNrK,IKhWP,SAAkBqN,GAGjBhQ,KAAKuQ,QAAU,IAEfvQ,MAAKwQ,WAAWR,ILgWVjP,WAAY,KACZC,aAAc,MKrVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,ULiWJM,IKjWP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAKiN,SLiWNtK,IK9VP,SAAkBqN,GAGjBhQ,KAAKiQ,OAAS,IAEdjQ,MAAKkQ,WAAWF,IL8VVjP,WAAY,KACZC,aAAc,MKxVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL+VJM,IK/VP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAK4M,QL+VNjK,IK5VP,SAAiBqN,GAEhB,GAAIhQ,KAAKqS,OAASrC,EACjB,MAEDhQ,MAAK4M,OAASoD,CAEdhQ,MAAKsS,kBL2VCvR,WAAY,KACZC,aAAc,MKrVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SL4VJM,IK5VP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAK6M,QL4VNlK,IKzVP,SAAiBqN,GAEhB,GAAIhQ,KAAKuS,OAASvC,EACjB,MAEDhQ,MAAK6M,OAASmD,CAEdhQ,MAAKsS,kBLwVCvR,WAAY,KACZC,aAAc,MKlVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLyVJM,IKzVP,WAEC,GAAIb,KAAK8R,eACR9R,KAAK+R,gBAEN,OAAO/R,MAAK8M,QLyVNnK,IKtVP,SAAiBqN,GAEhB,GAAIhQ,KAAKwS,OAASxC,EACjB,MAEDhQ,MAAK8M,OAASkD,CAEdhQ,MAAKsS,kBLqVCvR,WAAY,KACZC,aAAc,MKhVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLsVJM,IKtVP,WAEC,MAAOb,MAAKyR,SLuVN1Q,WAAY,KACZC,aAAc,MKlVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,iBLwVJM,IKxVP,WAEC,GAAIb,KAAKyS,oBAAqB,CAC7B,IAAKzS,KAAKwN,YAAcxN,KAAKkO,eAAiB5M,EAAcE,YAAa,CACxExB,KAAKiM,eAAiBjM,KAAK6Q,eAAe6B,gBAAgB1S,KAAKsN,iBAEzD,CACNtN,KAAK6Q,eAAe8B,aAAa,EAAG3S,KAAKiM,gBAG1CjM,KAAKyS,oBAAsB,MAE5B,MAAOzS,MAAKiM,gBLwVNlL,WAAY,KACZC,aAAc,MKtVrBL,QAAAC,eAAW2K,EAAAhL,UAAA,kBLyVJM,IKzVP,WAEC,GAAIb,KAAK4S,sBACR5S,KAAK6S,uBAEN,OAAO7S,MAAK4L,kBLyVN7K,WAAY,KACZC,aAAc,MK5TrBL,QAAAC,eAAW2K,EAAAhL,UAAA,wBLkUJM,IKlUP,WAEC,MAAOb,MAAK8S,uBLmUN/R,WAAY,KACZC,aAAc,MK9TrBL,QAAAC,eAAW2K,EAAAhL,UAAA,gBLoUJM,IKpUP,WAEC,MAAOb,MAAK+S,eLqUNpQ,IKlUP,SAAwBC,GAEvB,GAAIA,GAAS5C,KAAK+S,cACjB,MAED/S,MAAK+S,cAAgBnQ,CAErB,IAAI+M,GAAa3P,KAAK+N,aAAaxO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+N,aAAa/O,GAAGgU,aAAehT,KAAK+S,eLiUpChS,WAAY,KACZC,aAAc,MKzRrBL,QAAAC,eAAW2K,EAAAhL,UAAA,aLkUJM,IKlUP,WAEC,MAAOb,MAAK4O,YLmUN7N,WAAY,KACZC,aAAc,MK5TrBL,QAAAC,eAAW2K,EAAAhL,UAAA,WLoUJM,IKpUP,WAEC,MAAOb,MAAKkM,qBLqUNvJ,IKlUP,SAAmBC,GAElB,GAAI5C,KAAKkM,qBAAuBtJ,EAC/B,MAED5C,MAAKkM,oBAAsBtJ,CAE3B5C,MAAKiT,2BAA2BjT,KAAKyQ,SAAUzQ,KAAKyQ,SAASyC,cAAgB,OLiUvEnS,WAAY,KACZC,aAAc,MKrTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,SLkUJM,IKlUP,WAEC,MAAOb,MAAK6P,SAASzL,MAAMpE,KAAKmT,QLmU1BxQ,IKhUP,SAAiBqN,GAEhB,GAAIhQ,KAAKmS,QAAUnC,EAClB,MAEDhQ,MAAKmS,OAASnC,CAEdhQ,MAAKoS,WAAWpC,EAAIhQ,KAAK6P,SAASzL,QL+T5BrD,WAAY,KACZC,aAAc,MKnTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KLgUJM,IKhUP,WAEC,MAAOb,MAAKkN,ILiUNvK,IK9TP,SAAaqN,GAEZ,GAAIhQ,KAAKkN,IAAM8C,EACd,MAEDhQ,MAAKkN,GAAKlN,KAAK+L,UAAUqH,QAAQ,IAAMpD,CAEvChQ,MAAKqT,sBL6TCtS,WAAY,KACZC,aAAc,MKjTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KL8TJM,IK9TP,WAEC,MAAOb,MAAKmN,IL+TNxK,IK5TP,SAAaqN,GAEZ,GAAIhQ,KAAKmN,IAAM6C,EACd,MAEDhQ,MAAKmN,GAAKnN,KAAK+L,UAAUqH,QAAQ,IAAMpD,CAEvChQ,MAAKqT,sBL2TCtS,WAAY,KACZC,aAAc,MKtSrBL,QAAAC,eAAW2K,EAAAhL,UAAA,KL4TJM,IK5TP,WAEC,MAAOb,MAAKoN,IL6TNzK,IK1TP,SAAaqN,GAEZ,GAAIhQ,KAAKoN,IAAM4C,EACd,MAEDhQ,MAAKoN,GAAKpN,KAAK+L,UAAUqH,QAAQ,IAAMpD,CAEvChQ,MAAKqT,sBLyTCtS,WAAY,KACZC,aAAc,MKpTrBL,QAAAC,eAAW2K,EAAAhL,UAAA,WL0TJM,IK1TP,WAEC,MAAOb,MAAK2M,UL2TNhK,IKxTP,SAAmBC,GAElB5C,KAAK2M,SAAW/J,GLyTV7B,WAAY,KACZC,aAAc,MKtRduK,GAAAhL,UAAAkP,iBAAP,SAAwB6D,EAAaC,GAEpC7S,EAAAH,UAAMkP,iBAAgBnQ,KAAAU,KAACsT,EAAMC,EAE7B,QAAQD,GACP,IAAKjI,GAAmBmI,iBACvBxT,KAAKyT,yBAA2B,IAChC,MACD,KAAKpI,GAAmBqI,iBACvB1T,KAAK2T,yBAA2B,IAChC,MACD,KAAKtI,GAAmBuI,aACvB5T,KAAK6T,qBAAuB,IAC5B,MACD,KAAKxI,GAAmByI,cACvB9T,KAAK+T,sBAAwB,IAC7B,MACD,KAAK1I,GAAmB2I,cACvBhU,KAAKiU,sBAAwB,IAC7B,MACD,KAAK5I,GAAmB6I,uBACvBlU,KAAKmU,+BAAiC,IACtC,QAOI5I,GAAAhL,UAAAiI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEZ,IAAKA,EACJA,EAAc,GAAI7I,EAEnB6I,GAAYzC,MAAQ3R,KAAK2R,KACzByC,GAAYC,WAAarU,KAAKqU,UAC9BD,GAAYE,KAAOtU,KAAKsU,IAExBF,GAAYvI,SAAW7L,KAAK6L,QAC5BuI,GAAYtI,QAAU9L,KAAK8L,QAAS9L,KAAK8L,QAAQyI,SAAW,IAE5D,IAAIvU,KAAKiP,SACRmF,EAAYI,QAAUxU,KAAKiP,SAASzG,MAAM4L,EAE3C,IAAIpU,KAAK4O,WAAW6F,eACnBL,EAAYjL,UAAUsL,eAAiBzU,KAAK4O,WAAW6F,eAAejM,OAEvE,OAAO4L,GAMD7I,GAAAhL,UAAAU,QAAP,WAEC,GAAIjB,KAAK0U,OACR1U,KAAK0U,OAAOC,YAAY3U,KAEzB,OAAOA,KAAK8N,cAAcvO,OACzBS,KAAK8N,cAAc,GAAG7M,UAMjBsK,GAAAhL,UAAAqU,aAAP,WAEC5U,KAAKiB,UA2BCsK,GAAAhL,UAAAsU,UAAP,SAAiBC,GAEhB,MAAO9U,MAAK+U,QAqBNxJ,GAAAhL,UAAAyU,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAO9U,MAAK+U,QAGNxJ,GAAAhL,UAAAsP,OAAP,SAAciF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAI9U,KAAKiV,eACRjV,KAAKiV,eAAeC,YAGrB,IAAIlV,KAAK0L,kBAAmB,CAC3B1L,KAAKmV,mBAGL,IAAInV,KAAKmS,QAAU,KAClBnS,KAAKoS,WAAWpS,KAAKmS,OAAOnS,KAAKoV,YAAYhR,MAE9C,IAAIpE,KAAKuQ,SAAW,KACnBvQ,KAAKwQ,WAAWxQ,KAAKuQ,QAAQvQ,KAAKoV,YAAY/Q,OAE/C,IAAIrE,KAAKiQ,QAAU,KAClBjQ,KAAKkQ,WAAWlQ,KAAKiQ,OAAOjQ,KAAKoV,YAAYtF,OAG/C,GAAIgF,GAAyB,MAAQA,GAAyB9U,KAC7D,MAAOA,MAAKoV,WAEb,IAAIN,GAAyB9U,KAAKyQ,SACjC,MAAOzQ,MAAKqU,WAAWgB,aAAarV,KAAKoV,iBAEzC,OAAON,GAAsBQ,sBAAsBD,aAAarV,KAAK6Q,eAAewE,aAAarV,KAAKoV,cAGjG7J,GAAAhL,UAAAgV,UAAP,SAAiBT,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAI9U,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErB,IAAIlV,KAAK2L,qBACR3L,KAAKwV,sBAEN,OAAOxV,MAAKyV,eAoBNlK,GAAAhL,UAAAmV,cAAP,SAAqBC,GAEpB,GAAIC,GAAe5V,KAAKsV,sBAAsB5C,gBAAgB,GAAI3H,GAAS4K,EAAM1S,EAAG0S,EAAMzS,EAAG,GAC7F,OAAO,IAAI4H,GAAM8K,EAAI3S,EAAG2S,EAAI1S,GAqBtBqI,GAAAhL,UAAAsV,gBAAP,SAAuBC,GAEtB,MAAO9V,MAAKsV,sBAAsB5C,gBAAgBoD,GAW5CvK,GAAAhL,UAAAwV,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAInG,QACrB,KAAIoG,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAIpL,GAAMmL,EAAOhT,EAAEgT,EAAO/S,EAC9C,IAAIiT,GAAmB,GAAIrL,GAAMmL,EAAOhT,EAAEgT,EAAO/S,EAAE+S,EAAO5R,OAC1D,IAAI+R,GAAiB,GAAItL,GAAMmL,EAAOhT,EAAEgT,EAAO7R,MAAM6R,EAAO/S,EAC5D,IAAImT,GAAoB,GAAIvL,GAAMmL,EAAOhT,EAAEgT,EAAO7R,MAAM6R,EAAO/S,EAAE+S,EAAO5R,OAExE6R,GAAUlW,KAAK0V,cAAcM,EAAIM,cAAcJ,GAC/CC,GAAanW,KAAK0V,cAAcM,EAAIM,cAAcH,GAClDC,GAAWpW,KAAK0V,cAAcM,EAAIM,cAAcF,GAChDC,GAAcrW,KAAK0V,cAAcM,EAAIM,cAAcD,GAEnD,IAAIE,GAAUvW,KAAK6P,QACnB,KAAI0G,EAAK,MAAO,MAGhB,IAAGL,EAAQjT,GAAKsT,EAAI9Q,MAAQyQ,EAAQjT,GAAKsT,EAAI9Q,MAAQyQ,EAAQhT,GAAKqT,EAAI3Q,KAAOsQ,EAAQhT,GAAKqT,EAAI1Q,OAAQ,MAAO,KAC7G,IAAGsQ,EAAWlT,GAAKsT,EAAI9Q,MAAQ0Q,EAAWlT,GAAKsT,EAAI9Q,MAAQ0Q,EAAWjT,GAAKqT,EAAI3Q,KAAOuQ,EAAWjT,GAAKqT,EAAI1Q,OAAQ,MAAO,KACzH,IAAGuQ,EAASnT,GAAKsT,EAAI9Q,MAAQ2Q,EAASnT,GAAKsT,EAAI9Q,MAAQ2Q,EAASlT,GAAKqT,EAAI3Q,KAAOwQ,EAASlT,GAAKqT,EAAI1Q,OAAQ,MAAO,KACjH,IAAGwQ,EAAYpT,GAAKsT,EAAI9Q,MAAQ4Q,EAAYpT,GAAKsT,EAAI9Q,MAAQ4Q,EAAYnT,GAAKqT,EAAI3Q,KAAOyQ,EAAYnT,GAAKqT,EAAI1Q,OAAQ,MAAO,KLgQvH,IK7PF2Q,GAAaJ,EAASlT,EAAIgT,EAAQhT,CACtC,IAAIuT,KAAeL,EAASnT,EAAIiT,EAAQjT,EAExC,IAAIyT,GAAaL,EAAYnT,EAAIkT,EAASlT,CAC1C,IAAIyT,KAAeN,EAAYpT,EAAImT,EAASnT,EAE5C,IAAI2T,GAAaT,EAAWjT,EAAImT,EAAYnT,CAC5C,IAAI2T,KAAeV,EAAWlT,EAAIoT,EAAYpT,EAE9C,IAAI6T,GAAaZ,EAAQhT,EAAIiT,EAAWjT,CACxC,IAAI6T,KAAeb,EAAQjT,EAAIkT,EAAWlT,EAE1C,IAAI+T,GAAaT,EAAI9Q,KAAOyQ,EAAQjT,CACpC,IAAIgU,GAAaV,EAAI3Q,IAAMsQ,EAAQhT,CACnC,IAAIgU,GAAaX,EAAI9Q,KAAO2Q,EAASnT,CACrC,IAAIkU,GAAaZ,EAAI3Q,IAAMwQ,EAASlT,CACpC,IAAIkU,GAAab,EAAI9Q,KAAO4Q,EAAYpT,CACxC,IAAIoU,GAAad,EAAI3Q,IAAMyQ,EAAYnT,CACvC,IAAIoU,GAAaf,EAAI9Q,KAAO0Q,EAAWlT,CACvC,IAAIsU,GAAahB,EAAI3Q,IAAMuQ,EAAWjT,CAEtC,IAAIsU,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAI7Q,MAAQwQ,EAAQjT,CAC1BgU,GAAMV,EAAI3Q,IAAMsQ,EAAQhT,CACxBgU,GAAMX,EAAI7Q,MAAQ0Q,EAASnT,CAC3BkU,GAAMZ,EAAI3Q,IAAMwQ,EAASlT,CACzBkU,GAAMb,EAAI7Q,MAAQ2Q,EAAYpT,CAC9BoU,GAAMd,EAAI3Q,IAAMyQ,EAAYnT,CAC5BoU,GAAMf,EAAI7Q,MAAQyQ,EAAWlT,CAC7BsU,GAAMhB,EAAI3Q,IAAMuQ,EAAWjT,CAE3BsU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAI9Q,KAAOyQ,EAAQjT,CACzBgU,GAAMV,EAAI1Q,OAASqQ,EAAQhT,CAC3BgU,GAAMX,EAAI9Q,KAAO2Q,EAASnT,CAC1BkU,GAAMZ,EAAI1Q,OAASuQ,EAASlT,CAC5BkU,GAAMb,EAAI9Q,KAAO4Q,EAAYpT,CAC7BoU,GAAMd,EAAI1Q,OAASwQ,EAAYnT,CAC/BoU,GAAMf,EAAI9Q,KAAO0Q,EAAWlT,CAC5BsU,GAAMhB,EAAI1Q,OAASsQ,EAAWjT,CAE9BsU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMT,EAAI7Q,MAAQwQ,EAAQjT,CAC1BgU,GAAMV,EAAI1Q,OAASqQ,EAAQhT,CAC3BgU,GAAMX,EAAI7Q,MAAQ0Q,EAASnT,CAC3BkU,GAAMZ,EAAI1Q,OAASuQ,EAASlT,CAC5BkU,GAAMb,EAAI7Q,MAAQ2Q,EAAYpT,CAC9BoU,GAAMd,EAAI1Q,OAASwQ,EAAYnT,CAC/BoU,GAAMf,EAAI7Q,MAAQyQ,EAAWlT,CAC7BsU,GAAMhB,EAAI1Q,OAASsQ,EAAWjT,CAE9BsU,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDpM,GAAAhL,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAU0U,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,MAElE,MAAO,OASDtM,GAAAhL,UAAAuX,OAAP,SAAcC,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAASjN,EAASsN,WAElBL,GAAOM,WAERJ,GAAQH,EAAOQ,SAASvY,KAAKqU,WAAWyB,SACxCoC,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAM5Y,OAAS,IAAM,CACxB4Y,EAAMlV,EAAI+U,EAAO9U,CACjBiV,GAAMjV,EAAI8U,EAAO/U,CACjBkV,GAAM5R,EAAI,CACV4R,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMvN,EAAc4N,kBAEpBL,GAAI,GAAKD,EAAMlV,CACfmV,GAAI,GAAKD,EAAMjV,CACfkV,GAAI,GAAKD,EAAM5R,CACf6R,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMhV,CACfmV,GAAI,GAAKH,EAAM/U,CACfkV,GAAI,GAAKH,EAAM1R,CACf6R,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMjV,CACfmV,GAAI,GAAKF,EAAMhV,CACfkV,GAAI,IAAMF,EAAM3R,CAChB6R,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAI9N,EACrB8N,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjC7Y,MAAKmQ,UAAYyI,EAAI3V,EAAE0H,EAAWqH,kBAClChS,MAAKoQ,UAAYwI,EAAI1V,EAAEyH,EAAWqH,kBAClChS,MAAKqQ,UAAYuI,EAAIrS,EAAEoE,EAAWqH,mBA0B5BzG,GAAAhL,UAAA+V,cAAP,SAAqBX,GAEpB,GAAIC,GAAe5V,KAAK6Q,eAAe6B,gBAAgB,GAAI3H,GAAS4K,EAAM1S,EAAG0S,EAAMzS,EAAG,GACtF,OAAO,IAAI4H,GAAM8K,EAAI3S,EAAG2S,EAAI1S,GA4BtBqI,GAAAhL,UAAAuY,gBAAP,SAAuBhD,GAEtB,MAAO9V,MAAK6Q,eAAe6B,gBAAgBoD,GAWrCvK,GAAAhL,UAAAwY,OAAP,SAAcpS,EAAWC,EAAWoS,GAEnC,GAAIhZ,KAAKkN,IAAMvG,GAAM3G,KAAKmN,IAAMvG,GAAM5G,KAAKoN,IAAM4L,EAChD,MAEDhZ,MAAKiD,EAAI0D,CACT3G,MAAKkD,EAAI0D,CACT5G,MAAKuG,EAAIyS,EAUHzN,GAAAhL,UAAA0Y,UAAP,SAAiBtS,EAAWC,EAAWoS,GAEtC,GAAIrS,GAAM,GAAKC,GAAM,GAAKoS,GAAM,EAC/B,MAEDhZ,MAAKqN,OAAOpK,GAAK0D,CACjB3G,MAAKqN,OAAOnK,GAAK0D,CACjB5G,MAAKqN,OAAO9G,GAAKyS,CAEjBhZ,MAAK4R,kBAQCrG,GAAAhL,UAAA2Y,MAAP,SAAaC,GAEZnZ,KAAKoZ,OAAOrO,EAASsO,OAAQF,GAGvB5N,GAAAhL,UAAA+Y,oBAAP,WAECtZ,KAAKuZ,QAAQ,IACb,IAAGvZ,KAAKqU,WACPrU,KAAKqU,WAAWxF,UACjB,IAAG7O,KAAKyU,eACPzU,KAAKyU,eAAe+E,OAErBxZ,MAAKgR,4BAKCzF,GAAAhL,UAAAkZ,wBAAP,SAA+BC,GAE9B,GAAI1Z,KAAKoO,iBAAmBlD,EAAgByO,aAAc,CACzD,GAAIC,GAAwBF,EAAO7I,eAAegI,WAClD,IAAI5P,GAAiB2Q,EAAM,EAC3BA,GAAM,GAAK5Z,KAAK6Z,aAChB5Q,GAAMhG,EAAIjD,KAAKmT,MACflK,GAAM/F,EAAIlD,KAAKsQ,MACfrH,GAAM1C,EAAIvG,KAAK+P,MACf/P,MAAKuN,mBAAmBuM,UAAUF,EAGlC,KAAK5Z,KAAKwN,YAAcxN,KAAKkO,eAAiB5M,EAAcE,YAC3DxB,KAAKuN,mBAAmBwM,oBAAoB/Z,KAAKqN,OAAOpK,EAAEjD,KAAKmT,QAASnT,KAAKqN,OAAOnK,EAAElD,KAAKsQ,QAAStQ,KAAKqN,OAAO9G,EAAEvG,KAAK+P,OAExH,OAAO/P,MAAKuN,mBAGb,MAAOvN,MAAK6Q,eAQNtF,GAAAhL,UAAAyZ,KAAP,SAAYb,GAEXnZ,KAAKoZ,OAAOrO,EAASkP,OAAQd,GASvB5N,GAAAhL,UAAA6Y,OAAP,SAAcc,EAAef,GAE5B,GAAIT,GAAa,GAAI9N,EACrB8N,GAAEyB,gBAAgBhB,EAAOe,EAEzB,IAAItB,GAAeF,EAAEG,YAAY,EAEjC7Y,MAAKmQ,WAAayI,EAAI3V,EAAE0H,EAAWqH,kBACnChS,MAAKoQ,WAAawI,EAAI1V,EAAEyH,EAAWqH,kBACnChS,MAAKqQ,WAAauI,EAAIrS,EAAEoE,EAAWqH,mBAU7BzG,GAAAhL,UAAA6Z,SAAP,SAAgBnV,EAAWC,EAAW0C,GAErC5H,KAAKmQ,UAAYlL,CACjBjF,MAAKoQ,UAAYlL,CACjBlF,MAAKqQ,UAAYzI,EAMX2D,GAAAhL,UAAAgP,oBAAP,SAA2B+D,EAAaC,GAEvC7S,EAAAH,UAAMgP,oBAAmBjQ,KAAAU,KAACsT,EAAMC,EAEhC,IAAIvT,KAAKqa,iBAAiB/G,EAAMC,GAC/B,MAED,QAAQD,GACP,IAAKjI,GAAmBmI,iBACvBxT,KAAKyT,yBAA2B,KAChC,MAED,KAAKpI,GAAmBqI,iBACvB1T,KAAK2T,yBAA2B,KAChC,MAED,KAAKtI,GAAmBuI,aACvB5T,KAAK6T,qBAAuB,KAE7B,KAAKxI,GAAmByI,cACvB9T,KAAK+T,sBAAwB,KAC7B,QAUIxI,GAAAhL,UAAA+Z,UAAP,SAAiBJ,EAAeK,GAE/B,GAAItX,GAAWiX,EAAKjX,EAAGC,EAAWgX,EAAKhX,EAAGqD,EAAW2T,EAAK3T,CAC1D,IAAIoJ,GAAa4K,EAASnX,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAElDvG,MAAKiD,GAAKA,EAAE0M,CACZ3P,MAAKkD,GAAKA,EAAEyM,CACZ3P,MAAKuG,GAAKA,EAAEoJ,EASNpE,GAAAhL,UAAAia,eAAP,SAAsBN,EAAeK,GAEpC,GAAItX,GAAWiX,EAAKjX,EAAGC,EAAWgX,EAAKhX,EAAGqD,EAAW2T,EAAK3T,CAC1D,IAAIoJ,GAAa4K,EAASnX,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAElDvG,MAAKqU,WAAW0F,mBAAmB9W,EAAE0M,EAAKzM,EAAEyM,EAAKpJ,EAAEoJ,EAEnD3P,MAAK+L,UAAU4G,aAAa,EAAG3S,KAAKyN,KAEpCzN,MAAKiD,EAAIjD,KAAKyN,KAAKxK,CACnBjD,MAAKkD,EAAIlD,KAAKyN,KAAKvK,CACnBlD,MAAKuG,EAAIvG,KAAKyN,KAAKlH,EAQbgF,GAAAhL,UAAAka,IAAP,SAAWtB,GAEVnZ,KAAKoZ,OAAOrO,EAASsN,OAAQc,GAW9BxY,QAAAC,eAAW2K,EAAAhL,UAAA,uBLgLJM,IKhLP,WAEC,MAAOb,MAAK0a,qBLiLN3Z,WAAY,KACZC,aAAc,MK1KrBL,QAAAC,eAAW2K,EAAAhL,UAAA,cLkLJM,IKlLP,WAEC,GAAIb,KAAK2a,eACR3a,KAAK4a,kBAEN,IAAI5a,KAAK6a,YACR7a,KAAK8a,eAEN,OAAO9a,MAAK+L,WLiLNpJ,IK9KP,SAAsBqN,GAErB,IAAK,GAAIhR,GAAW,EAAGA,EAAI,GAAIA,IAC9BgB,KAAK+L,UAAUqH,QAAQpU,GAAKgR,EAAIoD,QAAQpU,EAEzCgB,MAAKiD,EAAI+M,EAAIoD,QAAQ,GACrBpT,MAAKkD,EAAI8M,EAAIoD,QAAQ,GACrBpT,MAAKuG,EAAIyJ,EAAIoD,QAAQ,GAErBpT,MAAK8R,eAAiB,IAEtB,KAAK9R,KAAK6N,kBACT7N,KAAKgR,6BL4KAjQ,WAAY,KACZC,aAAc,MKvKrBL,QAAAC,eAAW2K,EAAAhL,UAAA,wBL6KJM,IK7KP,WAEC,IAAKb,KAAK+a,qBACT/a,KAAK+a,qBAAuB,GAAI3P,GAAmBpL,KAEpD,OAAOA,MAAK+a,sBL6KNha,WAAY,KACZC,aAAc,MKxKduK,GAAAhL,UAAAya,WAAP,SAAkBpY,GAEX,GAAI5C,KAAKyQ,SAAU,CACfzQ,KAAKyQ,SAASlB,oBAAoBlE,EAAmB4P,+BAAgCjb,KAAKsO,wCAGpGtO,KAAKyQ,SAAW7N,CAEV,IAAIA,EAAO,CAChB5C,KAAKkb,6BAA6BtY,EAAMuY,eAAiBvY,EAAMyJ,uBAC/DrM,MAAKiT,2BAA2BrQ,EAAMsQ,cACtClT,MAAKuR,0BAA0B3O,EAAM4O,oBAAqB5O,EAAM6O,QACvD7O,GAAM6M,iBAAiBpE,EAAmB4P,+BAAgCjb,KAAKsO,4CAClF,CACNtO,KAAKkb,6BAA6B,KAClClb,MAAKiT,2BAA2B,KAChCjT,MAAKuR,0BAA0B,KAAM,MAGhCvR,KAAKkP,kCAML3D,GAAAhL,UAAAyQ,0BAAP,WAEC,GAAIhR,KAAK4S,sBACR,MAED5S,MAAK4S,uBAAyB5S,KAAK6N,iBACnC7N,MAAK2Q,6BAA+B3Q,KAAK6N,iBACzC7N,MAAKyS,qBAAuBzS,KAAK6N,iBAEjC,IAAI7N,KAAKob,SACRpb,KAAKqb,qBAEN,IAAIrb,KAAKyQ,SACRzQ,KAAKyQ,SAASf,oBAEf,KAAK1P,KAAKsb,uBACTtb,KAAKsb,uBAAyB,GAAIjQ,GAAmBA,EAAmB6I,uBAAwBlU,KAEjGA,MAAKub,cAAcvb,KAAKsb,wBAMlB/P,GAAAhL,UAAA2a,6BAAP,SAAoCtY,GAEnC5C,KAAKqM,uBAAyBzJ,CAG9B,IAAI5C,KAAKqM,wBAA0BrM,KAAKyQ,WAAazQ,KAAK0R,kBACzD1R,KAAK0R,kBAAqB1R,KAAKyQ,SAASiB,kBAMnCnG,GAAAhL,UAAAgR,0BAAP,SAAiCiK,EAAqBC,GAErD,GAAIC,GAAuB1b,KAAKyR,SAAWgK,CAE3C,IAAIC,GAAgB1b,KAAKyR,QACxBzR,KAAKyR,QAAQkK,cAAc,GAAIrQ,GAAWA,EAAWsQ,mBAAoB5b,MAE1E,IAAIA,KAAKyR,SAAWzR,KAAK0a,oBAAqB,CAE7C1a,KAAKyR,QAAQoK,sBAAsB7b,KAAK0a,oBAGxC,IAAI1a,KAAKiR,WACRjR,KAAK8b,mBAAmB9b,KAAK0a,qBAI/B1a,KAAK0a,oBAAsB1a,KAAKsR,oBAAsBkK,CAGtD,IAAIE,EACH1b,KAAKyR,QAAUgK,CAEhB,IAAIzb,KAAKyR,SAAWzR,KAAK0a,oBAAqB,CAE7C1a,KAAKyR,QAAQsK,oBAAoB/b,KAAK0a,oBAGtC,IAAI1a,KAAKiR,WACRjR,KAAKgc,iBAAiBhc,KAAK0a;CAG7B,GAAIgB,GAAgB1b,KAAKyR,QACxBzR,KAAKyR,QAAQkK,cAAc,GAAIrQ,GAAWA,EAAW2Q,eAAgBjc,MAEtE,IAAI0b,EAAc,CACjB,IAAK1b,KAAK6N,kBACT7N,KAAKgR,2BAENhR,MAAKub,cAAcvb,KAAKkc,gBAAkBlc,KAAKkc,cAAgB,GAAI7Q,GAAmBA,EAAmB2I,cAAehU,SAOnHuL,GAAAhL,UAAA0S,2BAAP,SAAkCrQ,GAEjC5C,KAAKmM,qBAAuBnM,KAAKkM,qBAAuBtJ,EAMlD2I,GAAAhL,UAAAqa,iBAAP,WAEC,GAAI5a,KAAK8R,eACR9R,KAAK+R,gBAEN/R,MAAKyN,KAAKxK,EAAIjD,KAAKkN,EACnBlN,MAAKyN,KAAKvK,EAAIlD,KAAKmN,EACnBnN,MAAKyN,KAAKlH,EAAIvG,KAAKoN,EAEnBpN,MAAK0N,KAAKzK,EAAIjD,KAAKsM,UACnBtM,MAAK0N,KAAKxK,EAAIlD,KAAKuM,UACnBvM,MAAK0N,KAAKnH,EAAIvG,KAAKwM,UAEnBxM,MAAK2N,KAAK1K,EAAIjD,KAAK4M,MACnB5M,MAAK2N,KAAKzK,EAAIlD,KAAK6M,MACnB7M,MAAK2N,KAAKpH,EAAIvG,KAAK8M,MAEnB9M,MAAK4N,KAAK3K,EAAIjD,KAAK+M,OACnB/M,MAAK4N,KAAK1K,EAAIlD,KAAKgN,OACnBhN,MAAK4N,KAAKrH,EAAIvG,KAAKiN,OAEnBjN,MAAK+L,UAAU+N,UAAU9Z,KAAK2O,qBAE9B3O,MAAK2a,eAAiB,MAGhBpP,GAAAhL,UAAAua,cAAP,WAEC,IAAK9a,KAAKwN,WAAY,CACrBxN,KAAKsN,YAAYrK,EAAIjD,KAAKqN,OAAOpK,EAAEjD,KAAK+M,OACxC/M,MAAKsN,YAAYpK,EAAIlD,KAAKqN,OAAOnK,EAAElD,KAAKgN,OACxChN,MAAKsN,YAAY/G,EAAIvG,KAAKqN,OAAO9G,EAAEvG,KAAKiN,OACxCjN,MAAK+L,UAAUgO,oBAAoB/Z,KAAKsN,YAAYrK,GAAIjD,KAAKsN,YAAYpK,GAAIlD,KAAKsN,YAAY/G,EAC9F,IAAIvG,KAAKkO,eAAiB5M,EAAcE,YACvCxB,KAAK+L,UAAUoQ,kBAAkBnc,KAAKqN,OAAOpK,EAAGjD,KAAKqN,OAAOnK,EAAGlD,KAAKqN,OAAO9G,GAG7EvG,KAAK6a,YAAc,MAMbtP,GAAAhL,UAAAsS,sBAAP,WAEC,GAAI7S,KAAKoc,aACRpc,KAAKoc,aAAaC,kBAEnB,IAAIrc,KAAKyQ,WAAazQ,KAAKyQ,SAAS6L,SAAU,CAC7Ctc,KAAK4L,iBAAiBgF,SAAS5Q,KAAKyQ,SAASI,eAC7C7Q,MAAK4L,iBAAiB2Q,QAAQvc,KAAKqU,gBAC7B,CACNrU,KAAK4L,iBAAiBgF,SAAS5Q,KAAKqU,YAGrCrU,KAAKwc,eAAiB,KACtBxc,MAAKyc,eAAiB,KACtBzc,MAAK0c,WAAa,KAClB1c,MAAK2c,YAAc,KACnB3c,MAAK4S,sBAAwB,MAGvBrH,GAAAhL,UAAAqc,gBAAP,SAAuBC,GAEtB7c,KAAK8N,cAAczH,KAAKwW,EAExB,OAAOA,GAIDtR,GAAAhL,UAAAuc,mBAAP,SAA0BD,GAEzB,GAAI1W,GAAenG,KAAK8N,cAAciP,QAAQF,EAE9C7c,MAAK8N,cAAckP,OAAO7W,EAAO,EAEjC,OAAO0W,GAYDtR,GAAAhL,UAAA6I,gBAAP,SAAuBI,EAAkCyT,GAExD,MAAO,OAMD1R,GAAAhL,UAAA2c,iBAAP,WAEC,GAAIld,KAAKoc,aACRpc,KAAKoc,aAAae,QL0Hb,IKvHFxN,GAAa3P,KAAKyL,cAAclM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAK2b,cAAc3b,KAAKyL,cAAczM,GAEvCgB,MAAKyL,cAAclM,OAAS,EAMtBgM,GAAAhL,UAAA2S,YAAP,WAEC,MAAOlT,MAAKmM,qBAMNZ,GAAAhL,UAAA6c,iBAAP,WAEC,MAAOpd,MAAKqM,wBAA0BrM,KAAKoM,sBAMrCb,GAAAhL,UAAA8c,WAAP,SAAkBza,GAEjB,GAAI5C,KAAKyR,SAAW7O,EACnB,MAED5C,MAAKuR,0BAA0BvR,KAAKyQ,SAAUzQ,KAAKyQ,SAASe,oBAAsB,KAAM5O,GAGlF2I,GAAAhL,UAAA+c,eAAP,SAAsBC,IAUdhS,GAAAhL,UAAAid,mBAAR,WAEC,GAAIxd,KAAK2a,eACR,MAED3a,MAAK2a,eAAiB,IAEtB,KAAK3a,KAAK6N,kBACT7N,KAAKgR,4BAMAzF,GAAAhL,UAAA8a,oBAAP,WAEC,GAAI1L,GAAa3P,KAAK+N,aAAaxO,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+N,aAAa/O,GAAGqc,sBAMf9P,GAAAhL,UAAAqR,gBAAR,WAEC5R,KAAKwN,WAAcxN,KAAKqN,OAAOpK,GAAK,GAAOjD,KAAKqN,OAAOnK,GAAK,GAAOlD,KAAKqN,OAAO9G,GAAK,CAEpF,IAAIvG,KAAK6a,YACR,MAED7a,MAAK6a,YAAc,IAEnB7a,MAAKwd,qBAMEjS,GAAAhL,UAAA8S,mBAAR,WAEC,GAAIrT,KAAKwc,eACR,MAEDxc,MAAKwc,eAAiB,IAEtB,KAAKxc,KAAK6N,kBACT7N,KAAKgR,2BAEN,KAAKhR,KAAKwN,WACTxN,KAAK4R,iBAEN5R,MAAKub,cAAcvb,KAAKyd,mBAAqBzd,KAAKyd,iBAAmB,GAAIpS,GAAmBA,EAAmBmI,iBAAkBxT,QAM1HuL,GAAAhL,UAAA2R,mBAAR,SAA2BwL,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAE1B,GAAIA,EACH1d,KAAKwd,oBAEN,IAAIxd,KAAKyc,eACR,MAEDzc,MAAKyc,eAAiB,IAEtBzc,MAAKub,cAAcvb,KAAK2d,mBAAqB3d,KAAK2d,iBAAmB,GAAItS,GAAmBA,EAAmBqI,iBAAkB1T,QAM1HuL,GAAAhL,UAAA+R,eAAR,SAAuBoL,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEtB,GAAIA,EACH1d,KAAKwd,oBAEN,IAAIxd,KAAK0c,WACR,MAED1c,MAAK0c,WAAa,IAElB1c,MAAKub,cAAcvb,KAAK4d,eAAiB5d,KAAK4d,aAAe,GAAIvS,GAAmBA,EAAmBuI,aAAc5T,QAM9GuL,GAAAhL,UAAAsd,gBAAR,SAAwBH,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEvB,GAAIA,EACH1d,KAAKwd,oBAEN,IAAIxd,KAAK2c,YACR,MAED3c,MAAK2c,YAAc,IAEnB3c,MAAKub,cAAcvb,KAAK8d,gBAAkB9d,KAAK8d,cAAgB,GAAIzS,GAAmBA,EAAmByI,cAAe9T,QAIlHuL,GAAAhL,UAAAwd,gBAAP,SAAuBC,GAEtBhe,KAAK+N,aAAa1H,KAAK2X,EAEvB,OAAOA,GAIDzS,GAAAhL,UAAA0d,mBAAP,SAA0BD,GAEzB,GAAI7X,GAAenG,KAAK+N,aAAagP,QAAQiB,EAE7Che,MAAK+N,aAAaiP,OAAO7W,EAAO,EAEhC,OAAO6X,GAGDzS,GAAAhL,UAAAyb,iBAAP,SAAwBR,GAEvB,KAAM,IAAIxQ,GAGJO,GAAAhL,UAAAub,mBAAP,SAA0BN,GAEzB,KAAM,IAAIxQ,GAGJO,GAAAhL,UAAAmP,mBAAP,WAEC1P,KAAK0L,kBAAoB,IACzB1L,MAAK2L,qBAAuB,IAE5B,IAAI3L,KAAKob,SACRpb,KAAKqb,qBAEN,IAAIrb,KAAKyQ,SACRzQ,KAAKyQ,SAASf,qBAGTnE,GAAAhL,UAAA4U,kBAAP,WAECnV,KAAK0L,kBAAoB,KAEzB,IAAI1L,KAAKoV,aAAe,KACvBpV,KAAKoV,YAAc,GAAI5K,GAGlBe,GAAAhL,UAAAiV,qBAAP,WAECxV,KAAK2L,qBAAuB,KAE5B,IAAI3L,KAAKyV,gBAAkB,KAC1BzV,KAAKyV,eAAiB,GAAI/K,GAGzBa,GAAAhL,UAAA6O,4BAAA,WAEI,GAAIpP,KAAKiO,wBAA0BjO,KAAKyQ,SAAU,CAC9CzQ,KAAKgO,sBAAsB4C,SAAS5Q,KAAKyQ,SAASyN,qBAClD,IAAIle,KAAKqP,iBACLrP,KAAKgO,sBAAsBuO,QAAQvc,KAAKqP,sBACzC,CACH,GAAIrP,KAAKqP,iBACLrP,KAAKgO,sBAAsB4C,SAAS5Q,KAAKqP,sBAEzCrP,MAAKgO,sBAAsBwL,QAGnCxZ,KAAKmP,2BAA6B,MAItC5D,GAAAhL,UAAAiP,oBAAA,SAAoB5M,GAEhB5C,KAAKqP,iBAAmBzM,CACxB5C,MAAKkP,kCAGT3D,GAAAhL,UAAA2O,gCAAA,WAEIlP,KAAKmP,2BAA6B,IAElC,KAAKnP,KAAKme,6BACNne,KAAKme,6BAA+B,GAAI9S,GAAmBA,EAAmB4P,+BAAgCjb,KAElHA,MAAK2b,cAAc3b,KAAKme,8BAGpB5S,GAAAhL,UAAAiO,8BAAR,SAAsCD,GAElCvO,KAAKkP,kCAGD3D,GAAAhL,UAAAmO,wBAAR,SAAgCH,GAE5BvO,KAAKkP,kCAGJ3D,GAAAhL,UAAAgb,cAAR,SAAsBhN,GAGrBvO,KAAKyL,cAAcpF,KAAKkI,GAGjBhD,GAAAhL,UAAAwR,eAAR,WAEC/R,KAAK8R,eAAiB,KAEtB,IAAIsM,GAA2Bpe,KAAK+L,UAAU8M,WAC9C,IAAID,EAEJA,GAAMwF,EAAS,EAEf,IAAIpe,KAAKsM,YAAcsM,EAAI3V,GAAKjD,KAAKuM,YAAcqM,EAAI1V,GAAKlD,KAAKwM,YAAcoM,EAAIrS,EAAG,CACrFvG,KAAKsM,WAAasM,EAAI3V,CACtBjD,MAAKuM,WAAaqM,EAAI1V,CACtBlD,MAAKwM,WAAaoM,EAAIrS,CAEtBvG,MAAKkS,mBAAmB,OAGzB0G,EAAMwF,EAAS,EAEf,IAAIpe,KAAK4M,QAAUgM,EAAI3V,GAAKjD,KAAK6M,QAAU+L,EAAI1V,GAAKlD,KAAK8M,QAAU8L,EAAIrS,EAAG,CACzEvG,KAAK4M,OAASgM,EAAI3V,CAClBjD,MAAK6M,OAAS+L,EAAI1V,CAClBlD,MAAK8M,OAAS8L,EAAIrS,CAElBvG,MAAKsS,eAAe,OAGrBsG,EAAMwF,EAAS,EAEfpe,MAAKmS,OAAS,IACdnS,MAAKuQ,QAAU,IACfvQ,MAAKiQ,OAAS,IAEd,IAAIjQ,KAAK+M,SAAW6L,EAAI3V,GAAKjD,KAAKgN,SAAW4L,EAAI1V,GAAKlD,KAAKiN,SAAW2L,EAAIrS,EAAG,CAC5EvG,KAAK+M,QAAU6L,EAAI3V,CACnBjD,MAAKgN,QAAU4L,EAAI1V,CACnBlD,MAAKiN,QAAU2L,EAAIrS,CAEnBvG,MAAK6d,gBAAgB,QAIftS,GAAAhL,UAAA6R,WAAR,SAAmBpC,GAElB,GAAIhQ,KAAKmT,QAAUnD,EAClB,MAEDhQ,MAAK+M,QAAUiD,CAEfhQ,MAAK6d,kBAGEtS,GAAAhL,UAAAiQ,WAAR,SAAmBR,GAElB,GAAIhQ,KAAKsQ,QAAUN,EAClB,MAEDhQ,MAAKgN,QAAUgD,CAEfhQ,MAAK6d,kBAGEtS,GAAAhL,UAAA2P,WAAR,SAAmBF,GAElB,GAAIhQ,KAAK+P,QAAUC,EAClB,MAEDhQ,MAAKiN,QAAU+C,CAEfhQ,MAAK6d,kBAEP,OAAAtS,IA5hF4B/K,EA8hF5Bf,GAAuBJ,QAAdkM,ILoBN8S,6CAA6Cjd,UAAUkd,2BAA2Bld,UAAUmd,sCAAsCnd,UAAUod,kCAAkCpd,UAAUqd,gCAAgCrd,UAAUsd,qCAAqCtd,UAAUud,6BAA6Bvd,UAAUwd,8BAA8Bxd,UAAUyd,gCAAgCzd,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwCyd,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,+CAA+C,+CAA+CC,uCAAuC,uCAAuCC,6CAA6C,+CAA+CC,oCAAoC,SAAS7gB,EAAQkB,EAAOJ,GACzjC,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM9tFtB,IAAOG,GAASjC,EAAc,oCAG9B,IAAO8gB,GAAa9gB,EAAa,0CN6uFjC,IM7tFM+gB,GAAQ,SAAA5e,GAASX,EAAjBuf,EAAQ5e,EAsBb,SAtBK4e,KAwBJ5e,EAAApB,KAAAU,KAEAA,MAAKuf,eAAiB,GAAI/Z,OApB3B7E,OAAAC,eAAW0e,EAAA/e,UAAA,aNiuFJM,IMjuFP,WAEC,MAAOye,GAASpe,WNkuFVH,WAAY,KACZC,aAAc,MM7tFrBL,QAAAC,eAAW0e,EAAA/e,UAAA,iBNmuFJM,IMnuFP,WAEC,MAAOb,MAAKuf,gBNouFNxe,WAAY,KACZC,aAAc,MMxtFdse,GAAA/e,UAAA2I,oBAAP,SAA2BC,GAE1B,GAAIwG,GAAa3P,KAAKuf,eAAehgB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKuf,eAAevgB,GAAGkK,oBAAoBC,GAOtCmW,GAAA/e,UAAAif,eAAP,SAAsBvV,GAErBjK,KAAKuf,eAAelZ,KAAK4D,EAEzBA,GAAYwV,eAAiBzf,IAE7B,IAAIA,KAAKqa,iBAAiBgF,EAAcK,oBACvC1f,KAAK2b,cAAc,GAAI0D,GAAcA,EAAcK,mBAAoBzV,GAExEjK,MAAK2f,kBAAkB1V,GAOjBqV,GAAA/e,UAAAqf,kBAAP,SAAyB3V,GAExBjK,KAAKuf,eAAevC,OAAOhd,KAAKuf,eAAexC,QAAQ9S,GAAc,EAErEA,GAAYwV,eAAiB,IAE7B,IAAIzf,KAAKqa,iBAAiBgF,EAAcQ,sBACvC7f,KAAK2b,cAAc,GAAI0D,GAAcA,EAAcQ,qBAAsB5V,GAE1EjK,MAAK2f,kBAAkB1V,GAOjBqV,GAAA/e,UAAAiI,MAAP,WAEC,GAAIA,GAAiB,GAAI8W,EACzB,IAAI3P,GAAa3P,KAAKuf,eAAehgB,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCwJ,EAAMgX,eAAexf,KAAKuf,eAAevgB,GAAGwJ,QAE7C,OAAOA,GAOD8W,GAAA/e,UAAA0I,MAAP,SAAaA,GAEZ,GAAI6W,GAAqB9f,KAAKuf,eAAehgB,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8gB,IAAe9gB,EACzCgB,KAAKuf,eAAevgB,GAAGiK,MAAMA,GAMxBqW,GAAA/e,UAAAU,QAAP,WAEC,GAAI6e,GAAqB9f,KAAKuf,eAAehgB,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8gB,IAAe9gB,EAAG,CAC5C,GAAI+gB,GAA0B/f,KAAKuf,eAAe,EAClDvf,MAAK4f,kBAAkBG,EACvBA,GAAQ9e,WASHqe,GAAA/e,UAAAsI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAI+W,GAAqB9f,KAAKuf,eAAehgB,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI8gB,IAAe9gB,EACzCgB,KAAKuf,eAAevgB,GAAG6J,QAAQC,EAAQC,GAGlCuW,GAAA/e,UAAAof,kBAAP,SAAyBI,GAExB,GAAI/f,KAAKqa,iBAAiBgF,EAAcW,gBACvChgB,KAAK2b,cAAc,GAAI0D,GAAcA,EAAcW,eAAgBD,IA1HvDT,GAAApe,UAAmB,kBA4HlC,OAAAoe,IA9HuB9e,EAgILf,GAAAJ,QAATigB,INssFNne,oCAAoCC,UAAU6e,0CAA0C,4CAA4CC,2CAA2C,SAAS3hB,EAAQkB,EAAOJ,SAEpM8gB,wCAAwC,SAAS5hB,EAAQkB,EAAOJ,SAEhE+gB,4CAA4C,SAAS7hB,EAAQkB,EAAOJ,SAEpEghB,yCAAyC,SAAS9hB,EAAQkB,EAAOJ,SAEjEihB,oCAAoC,SAAS/hB,EAAQkB,EAAOJ,SAE5DkhB,qCAAqC,SAAShiB,EAAQkB,EAAOJ,GACnE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GOz2FtB,IAAO2K,GAAmBzM,EAAY,6CAEtC,IAAOiiB,GAAsBjiB,EAAW,uDAGxC,IAAOkiB,GAAUliB,EAAc,uCAG/B,IAAMmiB,GAAS,SAAAhgB,GAASX,EAAlB2gB,EAAShgB,EA6Bd,SA7BKggB,KA+BJhgB,EAAApB,KAAAU,KA3BOA,MAAA2gB,OAAgB,QAChB3gB,MAAA4gB,QAAiB,CACjB5gB,MAAA6gB,QAAiB,CACjB7gB,MAAA8gB,QAAiB,CAEjB9gB,MAAA+gB,cAAuB,QACvB/gB,MAAAghB,SAAkB,CACnBhhB,MAAAihB,WAAoB,CACpBjhB,MAAAkhB,WAAoB,CACpBlhB,MAAAmhB,WAAoB,CAEnBnhB,MAAAohB,UAAmB,CACpBphB,MAAAqhB,YAAqB,CACrBrhB,MAAAshB,YAAqB,CACrBthB,MAAAuhB,YAAqB,CAEpBvhB,MAAAwhB,SAAkB,CACnBxhB,MAAAyhB,WAAoB,CACpBzhB,MAAA0hB,WAAoB,CACpB1hB,MAAA2hB,WAAoB,CAEnB3hB,MAAA4hB,cAAwB,MAShCjhB,OAAAC,eAAW8f,EAAAngB,UAAA,gBP41FJM,IO51FP,WAEC,MAAOb,MAAK4hB,eP61FNjf,IO11FP,SAAwBC,GAEvB,GAAI5C,KAAK4hB,eAAiBhf,EACzB,MAED5C,MAAK4hB,cAAgBhf,CAErB,IAAIA,EAAO,CACV,GAAI5C,KAAK6hB,eAAiB,KACzB7hB,KAAK6hB,cAAgB7hB,KAAK8hB,qBAE3B9hB,MAAK6hB,cAAcE,MAAQ/hB,SACrB,CACNA,KAAK6hB,cAAc5gB,SACnBjB,MAAK6hB,cAAgB,KAGtB7hB,KAAK2b,cAAc,GAAI8E,GAAWA,EAAWuB,uBPy1FvCjhB,WAAY,KACZC,aAAc,MOv1Fd0f,GAAAngB,UAAAuhB,oBAAP,WAEC,KAAM,IAAI9W,GAGXrK,QAAAC,eAAW8f,EAAAngB,UAAA,YPw1FJM,IOx1FP,WAEC,MAAOb,MAAKohB,WPy1FNze,IOt1FP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAET5C,MAAKohB,UAAYxe,CACjB5C,MAAKiiB,kBPs1FClhB,WAAY,KACZC,aAAc,MOp1FrBL,QAAAC,eAAW8f,EAAAngB,UAAA,WPu1FJM,IOv1FP,WAEC,MAAOb,MAAKwhB,UPw1FN7e,IOr1FP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAET5C,MAAKwhB,SAAW5e,CAChB5C,MAAKkiB,iBPq1FCnhB,WAAY,KACZC,aAAc,MOn1FrBL,QAAAC,eAAW8f,EAAAngB,UAAA,SPs1FJM,IOt1FP,WAEC,MAAOb,MAAK2gB,QPu1FNhe,IOp1FP,SAAiBC,GAEhB5C,KAAK2gB,OAAS/d,CACd5C,MAAK4gB,SAAY5gB,KAAK2gB,QAAU,GAAM,KAAM,GAC5C3gB,MAAK6gB,SAAY7gB,KAAK2gB,QAAU,EAAK,KAAM,GAC3C3gB,MAAK8gB,SAAW9gB,KAAK2gB,OAAS,KAAM,GAEpC3gB,MAAKkiB,eACLliB,MAAKiiB,kBPo1FClhB,WAAY,KACZC,aAAc,MOl1FrBL,QAAAC,eAAW8f,EAAAngB,UAAA,WPq1FJM,IOr1FP,WAEC,MAAOb,MAAKghB,UPs1FNre,IOn1FP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET5C,MAAKghB,SAAWpe,CAChB5C,MAAKmiB,iBPm1FCphB,WAAY,KACZC,aAAc,MOj1FrBL,QAAAC,eAAW8f,EAAAngB,UAAA,gBPo1FJM,IOp1FP,WAEC,MAAOb,MAAK+gB,ePq1FNpe,IOl1FP,SAAwBC,GAEvB5C,KAAK+gB,cAAgBne,CACrB5C,MAAKmiB,iBPm1FCphB,WAAY,KACZC,aAAc,MOj1Fb0f,GAAAngB,UAAA4hB,cAAR,WAECniB,KAAKihB,YAAejhB,KAAK+gB,eAAiB,GAAM,KAAM,IAAK/gB,KAAKghB,QAChEhhB,MAAKkhB,YAAelhB,KAAK+gB,eAAiB,EAAK,KAAM,IAAK/gB,KAAKghB,QAC/DhhB,MAAKmhB,YAAcnhB,KAAK+gB,cAAgB,KAAM,IAAK/gB,KAAKghB,SAGlDN,GAAAngB,UAAA6hB,2BAAP,SAAkCC,EAAgB3I,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI/M,GAIXrK,QAAAC,eAAW8f,EAAAngB,UAAA,aPi1FJM,IOj1FP,WAEC,MAAO6f,GAAUxf,WPk1FXH,WAAY,KACZC,aAAc,MOh1Fb0f,GAAAngB,UAAA0hB,eAAR,WAECjiB,KAAKqhB,YAAcrhB,KAAK4gB,QAAQ5gB,KAAKohB,SACrCphB,MAAKshB,YAActhB,KAAK6gB,QAAQ7gB,KAAKohB,SACrCphB,MAAKuhB,YAAcvhB,KAAK8gB,QAAQ9gB,KAAKohB,UAG9BV,GAAAngB,UAAA2hB,cAAR,WAECliB,KAAKyhB,WAAazhB,KAAK4gB,QAAQ5gB,KAAKwhB,QACpCxhB,MAAK0hB,WAAa1hB,KAAK6gB,QAAQ7gB,KAAKwhB,QACpCxhB,MAAK2hB,WAAa3hB,KAAK8gB,QAAQ9gB,KAAKwhB,SAGrC7gB,QAAAC,eAAW8f,EAAAngB,UAAA,gBP+0FJM,IO/0FP,WAEC,MAAOb,MAAK6hB,ePg1FNlf,IO70FP,SAAwBC,GAEvB5C,KAAK6hB,cAAgBjf,CACrB5C,MAAK6hB,cAAcE,MAAQ/hB,MP80FrBe,WAAY,KACZC,aAAc,MO5/FP0f,GAAAxf,UAAmB,eA+KlC,OAAAwf,IAjLwBF,EAmLxB/gB,GAAmBJ,QAAVqhB,IPk1FNrC,6CAA6Cjd,UAAUkhB,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,2CAA2C,SAASjkB,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQlhGtB,IAAOoiB,GAAclkB,EAAc,4CACnC,IAAOmkB,GAAenkB,EAAc,6CAEpC,IAAOokB,GAAgBpkB,EAAc,8CAErC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4CRqhGrC,IQ9gGMqkB,GAAe,SAAAliB,GAASX,EAAxB6iB,EAAeliB,EAyDpB,SAzDKkiB,GAyDO7gB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAyD7BhC,MAAKsC,WAAa,GAAImgB,GAAeI,aAAc,EAAG9gB,GA/CvDpB,OAAAC,eAAWgiB,EAAAriB,UAAA,aRghGJM,IQhhGP,WAEC,MAAO+hB,GAAgB1hB,WRihGjBH,WAAY,KACZC,aAAc,MQ5gGrBL,QAAAC,eAAWgiB,EAAAriB,UAAA,aRkhGJM,IQlhGP,WAEC,MAAOb,MAAKsC,YRmhGNvB,WAAY,KACZC,aAAc,MQ9gGrBL,QAAAC,eAAWgiB,EAAAriB,UAAA,aRohGJM,IQphGP,WAEC,MAAOb,MAAK8iB,YRqhGN/hB,WAAY,KACZC,aAAc,MQhhGrBL,QAAAC,eAAWgiB,EAAAriB,UAAA,URshGJM,IQthGP,WAEC,IAAKb,KAAK+iB,QACT/iB,KAAKgjB,UAAUhjB,KAAK+iB,QAErB,OAAO/iB,MAAK+iB,SRshGNhiB,WAAY,KACZC,aAAc,MQjhGrBL,QAAAC,eAAWgiB,EAAAriB,UAAA,eRuhGJM,IQvhGP,WAEC,MAAOb,MAAKgC,cRwhGNjB,WAAY,KACZC,aAAc,MQ5gGd4hB,GAAAriB,UAAAwC,qBAAP,WAEC,MAAsB/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cASzC4gB,GAAAriB,UAAAsH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkB2a,GAAgB,CACrCziB,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAA8BwF,MAC7B,IAAIA,EAAQ,CAClB,GAAI9I,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIvC,GAAyB,GAAIif,cAAa/a,EAAOvI,OAAO,EAC5D,IAAImJ,GAAsB,GAAIua,aAAYnb,EAAOvI,OAEjD,OAAOP,EAAI8I,EAAOvI,OAAQ,CACzB,GAAI4G,EAAM,EAAI,EAAG,CAChBvC,EAAUuC,GAAS2B,EAAO9I,EAAI,EAC9B4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAC9B4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,OAC5B,CACN4E,EAAUuC,GAAS2B,EAAO9I,EAC1B4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,EAClC4E,GAAUuC,EAAQ,GAAK2B,EAAO9I,EAAI,GAGnCmH,GAAS,CAET,MAAMD,GAAK,EAAG,CACb,GAAIrH,GAAWsH,EAAM,EAAI,CACzBuC,GAAQ/F,KAAK9D,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpDkH,GAAI,CACJlH,IAAK,GAIPgB,KAAKsC,WAAWK,IAAIiB,EAAWmE,EAAO,EAEtC/H,MAAK2I,WAAWD,EAASX,OACnB,CACN/H,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAImgB,GAAeI,aAAc,EAAG7iB,KAAKuC,qBAG5DvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC1C,MAAKkI,mBAELlI,MAAKiI,qBAAqBjI,KAAKsC,WAE/BtC,MAAKmI,eAAenI,KAAKsC,WAAW8F,IAAM,MASpCwa,GAAAriB,UAAA2iB,aAAP,SAAoBpb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkB6a,GAAkB,CACvC3iB,KAAK8iB,WAAgChb,MAC/B,IAAIA,EAAQ,CAClB,IAAK9H,KAAK8iB,WACT9iB,KAAK8iB,WAAa,GAAIH,GAAiB3iB,KAAKuC,oBAE7C,IAAIvD,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIgd,GAAyB,GAAIN,cAAa/a,EAAOvI,OAAO,EAE5D,OAAOP,EAAI8I,EAAOvI,OAAQ,CACzB4jB,EAAUhd,GAAU/C,KAAKC,MAAM,GAAI8C,EAAQ,IAAO,GAAK2B,EAAO9I,GAAK8I,EAAO9I,EAE1E,MAAMkH,GAAK,EAAG,CACbA,EAAI,CACJlH,KAGDmH,IAGDnG,KAAK8iB,WAAWngB,IAAIwgB,EAAWpb,EAAO,OAChC,IAAI/H,KAAK8iB,WAAY,CAC3B9iB,KAAK8iB,WAAW7hB,SAChBjB,MAAK8iB,WAAa,KAGnB9iB,KAAKiI,qBAAqBjI,KAAK8iB,WAE/B9iB,MAAKmI,eAAenI,KAAK8iB,WAAW1a,IAAM,MAUpCwa,GAAAriB,UAAAyiB,UAAP,SAAiBlb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAU9H,KAAK+iB,QAClB,MAED,IAAIjb,YAAkB4a,GAAiB,CACtC1iB,KAAKgI,sBAAsBhI,KAAK+iB,QAChC/iB,MAAK+iB,QAA4Bjb,MAC3B,CACN,IAAK9H,KAAK+iB,QACT/iB,KAAK+iB,QAAU,GAAIL,GAAgB1iB,KAAKuC,oBAGzC,IAAIvD,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,GAAe,CACnB,IAAIid,GAAoB,GAAIC,YAAWvb,EAAOvI,OAAO,EAErD,OAAOP,EAAI8I,EAAOvI,OAAQ,CACzB,GAAI4G,EAAM,EAAI,EAAG,CAChBid,EAAOjd,GAAS2B,EAAO9I,EAAI,EAC3BokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,EAC/BokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,EAC/BokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,OACzB,CACNokB,EAAOjd,GAAS2B,EAAO9I,EACvBokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,EAC/BokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,EAC/BokB,GAAOjd,EAAQ,GAAK2B,EAAO9I,EAAI,GAIhC,KAAMkH,GAAK,EAAG,CACbA,EAAI,CACJlH,IAAK,EAGNmH,GAAS,EAGVnG,KAAK+iB,QAAQpgB,IAAImF,EAAQC,EAAO,QAE3B,CAEN/H,KAAK+iB,QAAUlhB,EAAiByhB,eAAetjB,KAAKuI,UAAWvI,KAAK+iB,QAAS/iB,KAAKuC,oBAAqBvC,KAAKgC,cAG7GhC,KAAKiI,qBAAqBjI,KAAK+iB,QAE/B/iB,MAAKmI,eAAenI,KAAK+iB,QAAQ3a,IAAM,MAMjCwa,GAAAriB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAa,IAClBtC,MAAK8iB,WAAa,IAClB9iB,MAAK+iB,QAAU,KAOTH,GAAAriB,UAAAiI,MAAP,WAEC,GAAIA,GAAwB,GAAIoa,GAAgB5iB,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBiG,QAAU,KAE7GA,GAAMG,WAAW3I,KAAKuI,UAAUC,QAEhCA,GAAMX,aAAa7H,KAAKsC,WAAWkG,QACnCA,GAAM0a,aAAaljB,KAAK8iB,WAAWta,QACnCA,GAAMwa,UAAUhjB,KAAK+iB,QAAQva,QAE7B,OAAOA,GAGDoa,GAAAriB,UAAA6I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBka,kBAAkBvjB,KAAMsJ,EAAUC,EAAoBC,GArQhEoZ,GAAA1hB,UAAmB,yBAuQlC,OAAA0hB,IAzQ8BhhB,EA2QLnC,GAAAJ,QAAhBujB,IR89FNY,4CAA4CpiB,UAAUqiB,6CAA6CriB,UAAUsiB,8CAA8CtiB,UAAUwI,0CAA0C,0CAA0CC,4CAA4C,8CAA8C8Z,uCAAuC,SAASplB,EAAQkB,EAAOJ,GACrZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GS3vGtB,IAAOuiB,GAAerkB,EAAa,0CAEnC,IAAOwL,GAAWxL,EAAc,sCTswGhC,ISxvGMqlB,GAAW,SAAAljB,GAASX,EAApB6jB,EAAWljB,EA8BhB,SA9BKkjB,GA8BO3Z,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzD5I,EAAApB,KAAAU,KAEAA,MAAKmK,aAAeD,CACpBlK,MAAKoK,aAAeH,CACpBjK,MAAKsJ,SAAWA,EAzBjB3I,OAAAC,eAAWgjB,EAAArjB,UAAA,aTgwGJM,IShwGP,WAEC,MAAO+iB,GAAY1iB,WTiwGbH,WAAY,KACZC,aAAc,MS5vGrBL,QAAAC,eAAWgjB,EAAArjB,UAAA,eTkwGJM,ISlwGP,WAEC,MAAOb,MAAKoK,cTmwGNrJ,WAAY,KACZC,aAAc,MS/uGd4iB,GAAArjB,UAAAU,QAAP,WAECjB,KAAKsJ,SAAW,IAEhB5I,GAAAH,UAAMU,QAAO3B,KAAAU,MA5CA4jB,GAAA1iB,UAAmB,qBAEnB0iB,GAAAvZ,WAAyBuY,CA4CxC,OAAAgB,IAhD0B7Z,EAkD1BtK,GAAqBJ,QAAZukB,ITsvGNpB,0CAA0C,0CAA0ClY,sCAAsC,wCAAwCuZ,sCAAsC,SAAStlB,EAAQkB,EAAOJ,GACnO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GU/zGtB,IAAOyjB,GAAevlB,EAAa,yCVm6GnC,IU5zGMwlB,GAAU,SAAArjB,GAASX,EAAnBgkB,EAAUrjB,EAAhB,SAAMqjB,KAAmBrjB,EAAAsjB,MAAAhkB,KAAAikB,WAyBxBtjB,OAAAC,eAAWmjB,EAAAxjB,UAAA,SVyzGJM,IUzzGP,WAEC,MAAOb,MAAKkkB,QV0zGNnjB,WAAY,KACZC,aAAc,MUpzGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,eV2zGJM,IU3zGP,WAEC,MAAOb,MAAKmkB,cV4zGNpjB,WAAY,KACZC,aAAc,MUjzGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,cV6zGJM,IU7zGP,WAEC,MAAOb,MAAKokB,aV8zGNrjB,WAAY,KACZC,aAAc,MU5yGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,WV+zGJM,IU/zGP,WAEC,MAAOb,MAAKqkB,UVg0GNtjB,WAAY,KACZC,aAAc,MUnzGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,eVi0GJM,IUj0GP,WAEC,MAAOb,MAAKskB,cVk0GNvjB,WAAY,KACZC,aAAc,MU9yGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,UVm0GJM,IUn0GP,WAEC,MAAOb,MAAKukB,SVo0GNxjB,WAAY,KACZC,aAAc,MUpzGrBL,QAAAC,eAAWmjB,EAAAxjB,UAAA,OVq0GJM,IUr0GP,WAEC,MAAOb,MAAKwkB,MVs0GNzjB,WAAY,KACZC,aAAc,MUr0GtB,OAAA+iB,IAnIyBD,EAqILrkB,GAAAJ,QAAX0kB,IVy0GNU,yCAAyCrjB,YAAY0d,2CAA2C,SAASvgB,EAAQkB,EAAOJ,GWrjH3H,GAAM6L,GAAe,WAArB,QAAMA,MAKSA,EAAAmD,QAAiB,SAKjBnD,GAAAyO,aAAsB,aAKtBzO,GAAAwZ,gBAAyB,gBACxC,OAAAxZ,KAEyBzL,GAAAJ,QAAhB6L,OXujHHtB,2CAA2C,SAASrL,EAAQkB,EAAOJ,GACzE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GY3kHtB,IAAOskB,GAAgBpmB,EAAc,8CACrC,IAAOyM,GAAmBzM,EAAa,6CAGvC,IAAOiC,GAASjC,EAAe,oCAG/B,IAAOqmB,GAAgBrmB,EAAc,6CZ6kHrC,IYpkHMqD,GAAe,SAAAlB,GAASX,EAAxB6B,EAAelB,EA4CpB,SA5CKkB,GA4COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KA5COA,MAAA6kB,eAAuC,GAAIrf,MAI3CxF,MAAA8kB,aAAsB,CAMvB9kB,MAAAmI,eAAwB,GAAIxH,OAC5BX,MAAA+kB,iBAA0B,GAAIpkB,OAmCpCX,MAAKuC,oBAAsBR,EAjC5BpB,OAAAC,eAAWgB,EAAArB,UAAA,sBZokHJM,IYpkHP,WAEC,MAAOb,MAAKuC,qBZqkHNxB,WAAY,KACZC,aAAc,MYhkHrBL,QAAAC,eAAWgB,EAAArB,UAAA,WZskHJM,IYtkHP,WAEC,MAAOb,MAAKuI,WZukHNxH,WAAY,KACZC,aAAc,MYlkHrBL,QAAAC,eAAWgB,EAAArB,UAAA,eZwkHJM,IYxkHP,WAEC,MAAOb,MAAK8kB,cZykHN/jB,WAAY,KACZC,aAAc,MYvkHrBL,QAAAC,eAAWgB,EAAArB,UAAA,eZ0kHJM,IY1kHP,WAEC,KAAM,IAAImK,IZ2kHJjK,WAAY,KACZC,aAAc,MY3jHdY,GAAArB,UAAAykB,WAAP,WAEC,GAAIrV,GAAa3P,KAAK6kB,eAAetlB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK6kB,eAAe7lB,GAAGgmB,aAMlBpjB,GAAArB,UAAAU,QAAP,WAEC,MAAOjB,KAAK6kB,eAAetlB,OAC1BS,KAAK6kB,eAAe,GAAG5jB,SAExBjB,MAAKuI,UAAUtH,SACfjB,MAAKuI,UAAY,KAWX3G,GAAArB,UAAAoI,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkB6c,GAAkB,CACvC,GAAI3kB,KAAKuI,UACRvI,KAAKilB,sBAENjlB,MAAKuI,UAA+BT,MAC9B,IAAIA,EAAQ,CAClB,IAAK9H,KAAKuI,UACTvI,KAAKuI,UAAY,GAAIoc,EAEtB3kB,MAAKuI,UAAU5F,IAAImF,EAAQC,OACrB,IAAI/H,KAAKuI,UAAW,CAC1BvI,KAAKuI,UAAUtH,SACfjB,MAAKuI,UAAY,IAEjBvI,MAAKilB,uBAGN,GAAIjlB,KAAKuI,UAAW,CACnBvI,KAAK8kB,aAAe9kB,KAAKuI,UAAU7F,KAEnC1C,MAAKklB,0BACC,CACNllB,KAAK8kB,aAAe,GAOfljB,GAAArB,UAAA2H,kBAAP,WAEC,GAAIlI,KAAKyf,eACRzf,KAAKyf,eAAeE,kBAAkB3f,MAcjC4B,GAAArB,UAAAiI,MAAP,WAEC,KAAM,IAAIwC,GAGJpJ,GAAArB,UAAA2I,oBAAP,SAA2BC,IASpBvH,GAAArB,UAAA0I,MAAP,SAAaA,IAKNrH,GAAArB,UAAAsI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3BnH,GAAArB,UAAAwC,qBAAP,WAEC,KAAM,IAAIiI,GAGJpJ,GAAArB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GAEvC,KAAM,IAAIyE,GAGHpJ,GAAArB,UAAA2kB,oBAAR,WAEC,IAAKllB,KAAKmlB,gBACTnlB,KAAKmlB,gBAAkB,GAAIP,GAAiBA,EAAiBQ,gBAAiBplB,KAAKuI,UAEpFvI,MAAK2b,cAAc3b,KAAKmlB,iBAGjBvjB,GAAArB,UAAA0kB,qBAAR,WAECjlB,KAAK2b,cAAc,GAAIiJ,GAAiBA,EAAiBS,iBAAkBrlB,KAAKuI,YAG1E3G,GAAArB,UAAA0H,qBAAP,SAA4Bqd,GAE3B,IAAKA,GAAkBtlB,KAAKmI,eAAemd,EAAeld,IACzD,MAEDpI,MAAKmI,eAAemd,EAAeld,IAAM,IAEzC,KAAKpI,KAAK+kB,iBAAiBO,EAAeld,IACzCpI,KAAK+kB,iBAAiBO,EAAeld,IAAM,GAAIwc,GAAiBA,EAAiBW,iBAAkBD,EAEpGtlB,MAAK2b,cAAc3b,KAAK+kB,iBAAiBO,EAAeld,KAIlDxG,GAAArB,UAAAyH,sBAAP,SAA6Bsd,GAE5B,IAAKA,EACJ,MAEDA,GAAerkB,SAEfjB,MAAK2b,cAAc,GAAIiJ,GAAiBA,EAAiBY,kBAAmBF,GAE5EtlB,MAAKmI,eAAemd,EAAeld,IAAM,IACzCpI,MAAK+kB,iBAAiBO,EAAeld,IAAM,KAGrCxG,GAAArB,UAAAklB,mBAAP,SAA0BC,GAEzB1lB,KAAK6kB,eAAexe,KAAKqf,EAEzB,OAAOA,GAGD9jB,GAAArB,UAAAolB,sBAAP,SAA6BD,GAE5B1lB,KAAK6kB,eAAe7H,OAAOhd,KAAK6kB,eAAe9H,QAAQ2I,GAAgB,EAEvE,OAAOA,GAGD9jB,GAAArB,UAAA6I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,KAAM,IAAIwB,GAEZ,OAAApJ,IA9N8BpB,EAgO9Bf,GAAyBJ,QAAhBuC,IZqgHNgkB,8CAA8CxkB,UAAUid,6CAA6Cjd,UAAUD,oCAAoCC,UAAUykB,6CAA6C,+CAA+Cvb,uCAAuC,SAAS/L,EAAQkB,EAAOJ,GAC3T,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GazvHtB,IAAOG,GAASjC,EAAe,oCbqwH/B,IapvHMwL,GAAW,SAAArJ,GAASX,EAApBgK,EAAWrJ,EAwFhB,SAxFKqJ,KA0FJrJ,EAAApB,KAAAU,KApFMA,MAAA8lB,QAAiB,CAGhB9lB,MAAA+lB,aAAkC,GAAIvgB,OAY9C7E,OAAAC,eAAWmJ,EAAAxJ,UAAA,YbmvHJM,IanvHP,WAEC,MAAOb,MAAKmK,aAAa6b,UbovHnBjlB,WAAY,KACZC,aAAc,Ma/uHrBL,QAAAC,eAAWmJ,EAAAxJ,UAAA,YbqvHJM,IarvHP,WAEC,MAAOb,MAAKimB,WAAajmB,KAAKmK,aAAab,UbsvHrC3G,IanvHP,SAAoBC,GAEnB,GAAI5C,KAAKsJ,SACRtJ,KAAKsJ,SAAS4c,aAAalmB,KAE5BA,MAAKimB,UAAYrjB,CAEjB,IAAI5C,KAAKsJ,SACRtJ,KAAKsJ,SAAS6c,UAAUnmB,ObkvHnBe,WAAY,KACZC,aAAc,Ma7uHrBL,QAAAC,eAAWmJ,EAAAxJ,UAAA,kBbmvHJM,IanvHP,WAEC,MAAOb,MAAKmK,aAAa0G,gBbovHnB9P,WAAY,KACZC,aAAc,Ma/uHrBL,QAAAC,eAAWmJ,EAAAxJ,UAAA,cbqvHJM,IarvHP,WAEC,MAAOb,MAAKmK,cbsvHNpJ,WAAY,KACZC,aAAc,MajvHrBL,QAAAC,eAAWmJ,EAAAxJ,UAAA,ebuvHJM,IavvHP,WAEC,MAAOb,MAAKomB,cAAgBpmB,KAAKmK,aAAakc,abwvHxC1jB,IarvHP,SAAuBC,GAEtB5C,KAAKomB,aAAexjB,GbsvHd7B,WAAY,KACZC,aAAc,MalvHrBL,QAAAC,eAAWmJ,EAAAxJ,UAAA,kBbwvHJM,IaxvHP,WAEC,MAAOb,MAAKsmB,iBAAmBtmB,KAAKmK,aAAa+T,sBbyvH3Cvb,IatvHP,SAA0BC,GAEzB5C,KAAKsmB,gBAAkB1jB,GbuvHjB7B,WAAY,KACZC,aAAc,Ma3uHd+I,GAAAxJ,UAAAU,QAAP,WAECjB,KAAKsJ,SAAW,IAEhB,IAAIqG,GAAa3P,KAAK+lB,aAAaxmB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+lB,aAAa/mB,GAAGiC,SAEtBjB,MAAK+lB,aAAe,GAAIvgB,OAQlBuE,GAAAxJ,UAAAkZ,wBAAP,SAA+BC,GAE9B,MAAO1Z,MAAKmK,aAAasP,wBAAwBC,GAG3C3P,GAAAxJ,UAAAqc,gBAAP,SAAuBC,GAEtB7c,KAAK+lB,aAAa1f,KAAKwW,EAEvB,OAAOA,GAID9S,GAAAxJ,UAAAuc,mBAAP,SAA0BD,GAEzB,GAAI1W,GAAenG,KAAK+lB,aAAahJ,QAAQF,EAE7C7c,MAAK+lB,aAAa/I,OAAO7W,EAAO,EAEhC,OAAO0W,GAGD9S,GAAAxJ,UAAAgmB,+BAAP,WAEC,GAAI5W,GAAa3P,KAAK+lB,aAAaxmB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+lB,aAAa/mB,GAAGwnB,qBAGhBzc,GAAAxJ,UAAAkmB,sBAAP,WAEC,MAAOzmB,MAAKimB,UAEd,OAAAlc,IAjJ0BvJ,EAmJ1Bf,GAAqBJ,QAAZ0K,IbiuHN5I,oCAAoCC,YAAYslB,oCAAoC,SAASnoB,EAAQkB,EAAOJ,Gcz4H/G,GAAOsnB,GAASpoB,EAAgB,wCAGhC,IAAOkM,GAAclM,EAAe,sCACpC,IAAOqM,GAAQrM,EAAiB,gCAIhC,IAAMqoB,GAAQ,WA2Cb,QA3CKA,KAyCE5mB,KAAA6mB,aAAoB,CAI1B7mB,MAAK8mB,mBAEL9mB,MAAK+mB,uBACL/mB,MAAKgnB,UACLhnB,MAAKinB,gBACLjnB,MAAKknB,4BAGCN,EAAArmB,UAAA4mB,KAAP,WAEC,GAAInnB,KAAKonB,uBAAuB,MAAQpnB,KAAKqnB,cAAc,MAAQrnB,KAAKsnB,oBAAoB,KAC3F,MACDtnB,MAAKunB,uBACLvnB,MAAKwnB,2BACL,IAAIC,GAAU,CACd,IAAIC,GAAG,CACP,IAAIC,GAAI,CACR,IAAIC,GAAa,CACjB,IAAIC,GAAqB,CACzB,KAAIH,EAAG,EAAGA,EAAG1nB,KAAK6mB,aAAca,IAAK,CACpC,GAAII,GAAS9nB,KAAKsnB,mBAAmB,EAErC,KAAItnB,KAAKqnB,aAAaK,GAAM,IAAM,EACjCG,EAAqBD,CAEtB5nB,MAAKunB,qBAAqBK,GAAcH,CACxCznB,MAAKwnB,yBAAyBI,KAAgBC,CAE9C,KAAIF,EAAI,EAAGA,EAAIG,EAAUH,IAAM,CAC9B3nB,KAAK8mB,iBAAiBW,KAAaC,IAK/Bd,GAAArmB,UAAAwnB,gBAAP,SAAuBC,GAEtB,GAAGhoB,KAAKinB,cAAce,IAAiB,KACtC,MAAO,EACR,UAAWhoB,MAAKinB,cAAce,IAAmB,SAChD,MAAOhoB,MAAKinB,cAAce,OACvB,CACH,KAAM,IAAI9oB,OAAM,oDAEjB,MAAO,GAED0nB,GAAArmB,UAAA0nB,gBAAP,SAAuBrlB,EAAcolB,GAEpChoB,KAAKinB,cAAce,GAAkBplB,EAG9BgkB,GAAArmB,UAAA2nB,aAAR,SAAqBC,EAAcC,EAAgBC,GAClD,GAAItL,GAAUoL,EAAIG,UAAUD,GAAY,GAAGE,OAAOH,EAClD,OAAQrL,IAAW,EAAMA,GAAWsL,GAAY,GAAMtL,EAIhD6J,GAAArmB,UAAAioB,4BAAP,SAAmCC,EAAqBC,GAEvD,GAAG1oB,KAAKinB,cAAcyB,IAAe,KAAK,CACzC,GAAG1oB,KAAKknB,yBAAyBwB,IAAe,KAAK,CACpD1oB,KAAKinB,cAAcyB,GAAgBD,EAAUjU,QAAQmU,WAAW3oB,KAAKinB,cAAcyB,GACnF1oB,MAAKknB,yBAAyBwB,GAAc,KAE7CD,EAAUG,sBAAsB5oB,KAAKinB,cAAcyB,KAIrD/nB,QAAAC,eAAWgmB,EAAArmB,UAAA,ad80HJM,Ic90HP,WAEC,MAAOb,MAAK8mB,iBAAiBvnB,Qd+0HvBwB,WAAY,KACZC,aAAc,Mc50Hd4lB,GAAArmB,UAAAsoB,2BAAP,SAAkCzgB,GAEjC,MAAOpI,MAAK+mB,qBAAqB3e,GAG3Bwe,GAAArmB,UAAAuoB,8BAAP,SAAqCC,GAEpC,MAAO/oB,MAAK8mB,iBAAiBiC,GAGvBnC,GAAArmB,UAAAyoB,mBAAP,WAEC,MAAOhpB,MAAK+mB,qBAENH,GAAArmB,UAAA0oB,0BAAP,SAAiC7gB,GAEhC,MAAOpI,MAAK+mB,qBAAqB3e,GAAII,QAG/Boe,GAAArmB,UAAA2oB,uBAAP,SAA8B3oB,GAE7B,GAAI6H,GAAKpI,KAAK+mB,qBAAqBxnB,MACnCS,MAAK+mB,qBAAqB3e,GAAM7H,EAE1BqmB,GAAArmB,UAAA4oB,YAAP,SAAmBV,EAAqBW,GAEvC,GAAIC,GAAyBrpB,KAAKgnB,QAAQoC,EAC1C,IAAGC,GAAiB,EACnBZ,EAAUa,kBAAkBtpB,KAAKunB,qBAAqB8B,GAKjDzC,GAAArmB,UAAAgpB,UAAP,SAAiBd,EAAqB7lB,Gdo0H/B,Gcj0HF4mB,GAAoBf,EAAUa,iBAClC,IAAIG,GAA8BhB,EAAUiB,wBAC5C,IAAIC,GAA6B3pB,KAAK8mB,iBAAiBlkB,EAEvD,IAAIgnB,GAAW5pB,KAAKunB,qBAAqBoC,EACzC,IAAGH,GAAY5mB,EAAM,CAEpB,OAED,GAAG6mB,EAAqB,GAAGE,EAAoB,CAE9ClB,EAAUoB,sBAAsBjnB,EAChC5C,MAAK8pB,mBAAmBrB,EACxB,QAGD,GAAGmB,GAAYhnB,EAAM,CAEpB5C,KAAKwoB,4BAA4BC,EAAWkB,GAG7C,GAAGF,GAAsBE,EAAqB,CAE7C,OAKD,GAAII,GAAuB/pB,KAAKwnB,yBAAyBmC,Ed6zHnD,IczzHFK,GAAwBL,EAAsBF,CAClD,IAAIQ,GAAoBF,EAAkBN,Cd2zHpC,IcxzHFS,GAA2BH,CAE/B,IAAG,IAAkBE,EAAU,CAC9BC,EAAoBT,EAAqB,EAE1C,GAAIU,KACJ,IAAInrB,GAAWypB,EAAU2B,WACzB,IAAIC,EAEJ,IAAGH,GAAqBP,EAAoB,CAG3C,MAAM3qB,IAAK,CAEVypB,EAAU6B,cAActrB,GAEzBypB,EAAUoB,sBAAsBjnB,EAChC5C,MAAK8pB,mBAAmBrB,EAAW,MACnC,QAGD,MAAMzpB,IAAI,CACTqrB,EAAQ5B,EAAU8B,WAAWvrB,EAC7B,IAAGirB,EAAS,CAGXxB,EAAU9T,YAAY0V,EACtBG,SAAQC,IAAI,cAET,CAEHN,EAAkB1B,EAAUiC,cAAcL,IAAQA,GdwzH9C,GcnzHFM,KACJ,IAAIC,GAAW,CACf,IAAIzmB,EACJ,KAAIA,EAAE+lB,EAAoB/lB,GAAGwlB,EAAqBxlB,IAAI,CACrD,GAAI0mB,GAAyB7qB,KAAKonB,sBAAsBjjB,EACxD,IAAIkjB,GAAoBrnB,KAAKqnB,aAAaljB,EAE1C,KAAKkjB,EAAe,IAAM,EAAE,CdozHf,GclzHRyD,GAAc9qB,KAAK+qB,qBAAqBF,EAC5C,IAAIlb,GAAM3P,KAAK+qB,qBAAqBF,IACpC,KAAI,GAAI7rB,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAI,OAC3BmrB,GAAmBnqB,KAAKgrB,oBAAoBF,EAAY9rB,GAAK,QAItE,IAAIqoB,EAAe,IAAI,EAAE,CACxB,GAAIyD,GAAc9qB,KAAK+qB,qBAAqBF,EAC5C,IAAIlb,GAAM3P,KAAK+qB,qBAAqBF,IACpC,KAAI,GAAI7rB,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAI,CAClC,GAAI+Y,GAAuB0Q,EAAUQ,0BAA0BjpB,KAAKirB,iBAAiBH,EAAY,EAAI9rB,EAAE,GACvG+Y,GAAO,eAAiB+S,EAAc9rB,CACtCmrB,GAAmBnqB,KAAKirB,iBAAiBH,EAAY,EAAI9rB,EAAE,EAAI,GAAK,OAAU+Y,GAIhF,IAAIsP,EAAe,IAAI,EACtBsD,EAAeC,KAAcC,EdmzHzB,Gc/yHFK,KACJ,KAAK,GAAIC,KAAOhB,GAAmB,CAClCe,EAAwCf,EAAkBgB,GAAM,gBAAgBA,EdozH3E,Gc9yHFC,KACJpsB,GAAIypB,EAAU2B,WACd,OAAMprB,IAAI,CACTqrB,EAAM5B,EAAU8B,WAAWvrB,EAC3B,IAAGksB,EAAwBb,EAAM,iBAAiB,KAAK,CACtD5B,EAAU6B,cAActrB,OAErB,OACImrB,GAAkBe,EAAwBb,EAAM,uBAChDa,GAAwBb,EAAM,iBAGvC,IAAK,GAAIc,KAAOhB,GAAmB,CAClCE,EAAMF,EAAkBgB,EACxB,IAAGd,EAAM,CACR5B,EAAU4C,gBAAgBhB,EAAOiB,SAASH,KdkzHtC,Gc7yHFN,GAAyB,CAC7B,KAAI1mB,EAAE,EAAEA,EAAEwmB,EAAeprB,OAAQ4E,IAAI,CACpC0mB,EAAkBF,EAAexmB,EACjCnE,MAAKurB,cAAc9C,EAAWzoB,KAAK+qB,qBAAqBF,GAAoB7qB,KAAKwrB,sBAAsBX,IAExGpC,EAAUiB,yBAAyBC,EAI7B/C,GAAArmB,UAAAupB,mBAAP,SAA0BrB,EAAqBgD,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,KAE9C,GAAIjC,GAAoBf,EAAUa,iBAClC,IAAIoC,GAAmCjD,EAAUiB,wBACjD,IAAIiC,GAA2B3rB,KAAK8mB,iBAAiB0C,EAErD,IAAG,GAAgBxpB,KAAKunB,qBAAqBoE,IAAoBnC,EAAY,CAC5ExpB,KAAKwoB,4BAA4BC,EAAWkD,GAG7C,GAAGD,GAA2BC,EAAkB,CAC/ClD,EAAUiB,yBAAyBiC,CAEnC,IAAId,GAAkB7qB,KAAKonB,sBAAsBuE,EACjD,IAAItE,GAAarnB,KAAKqnB,aAAasE,EAEnC,KAAItE,EAAe,IAAI,EAAG,CACzB,GAAIroB,GAAWypB,EAAU2B,WACzB,OAAOprB,IAAK,CACX,GAAI+Y,GAAqB0Q,EAAU8B,WAAWvrB,EAC9CypB,GAAU6B,cAActrB,EACxBypB,GAAUjU,QAAQoX,uBAAuB7T,EACzC,IAAIA,EAAO8T,QAAQlF,IAA2B5O,EAAQvD,QACxCuD,EAAQvD,QAAQsX,sBAG3B,KAAKzE,EAAe,IAAI,EAAG,CAC/BrnB,KAAK+rB,wBAAwBtD,EAAWzoB,KAAK+qB,qBAAqBF,GAAoB7qB,KAAKwrB,sBAAsBX,MAGlH,IAAIxD,EAAe,IAAI,EACtBrnB,KAAKgsB,qBAAqBvD,EAAWzoB,KAAK+qB,qBAAqBF,GAAoB7qB,KAAKwrB,sBAAsBX,KAE/G,KAAIxD,EAAe,IAAI,EACtBrnB,KAAKurB,cAAc9C,EAAWzoB,KAAK+qB,qBAAqBF,GAAoB7qB,KAAKwrB,sBAAsBX,OAQnGjE,GAAArmB,UAAAwrB,wBAAP,SAA+BE,EAA2BnB,EAAoBnb,GAE7E,IAAI,GAAI3Q,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAK,CACnC,GAAI+Y,GAAuBkU,EAAgBC,mBAAmBlsB,KAAKgrB,oBAAoBF,EAAc9rB,GAAK,MAE1GitB,GAAgBzX,QAAQoX,uBAAuB7T,EAC/C,IAAGA,EAAO8T,QAAQlF,IAA2B5O,EAAQvD,QACvCuD,EAAQvD,QAAQsX,kBAMzBlF,GAAArmB,UAAAyrB,qBAAP,SAA4BC,EAA2BnB,EAAoBnb,GAE1E,IAAI,GAAI3Q,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAI,CAClC,GAAI+Y,GAAuBkU,EAAgBhD,0BAA0BjpB,KAAKirB,iBAAiBH,EAAY,EAAI9rB,EAAE,GAC7G+Y,GAAO,eAAiB+S,EAAc9rB,CAEtCitB,GAAgBZ,gBAAgBtT,EAAQ/X,KAAKirB,iBAAiBH,EAAY,EAAI9rB,EAAE,EAAI,GAAK,QAKpF4nB,GAAArmB,UAAAgrB,cAAP,SAAqBU,EAA2BnB,EAAoBnb,GAEnE,GAAIwc,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,KAAI,GAAIvtB,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAK,CACnC,GAAIwtB,GAAexsB,KAAKysB,oBAAoB3B,EAAc9rB,EAC1D,IAAI+Y,GAAuBkU,EAAgBhD,0BAA0BuD,EACrE,IAAIzU,EAAOrD,QAAUuX,EAAiB,CACrCM,EAAO,IAEP,IAAIxU,EAAO8T,QAAQlF,GAClB,GAAgB5O,EAAQvD,QAAQkY,oBAC/BH,EAAO,KAETH,GAAkBpsB,KAAK2sB,kCAAkC7B,EAAc9rB,EACvEmtB,GAAYnsB,KAAK4sB,iCAAiC9B,EAAc9rB,EAEhE,KAAI,GAAImB,GAAW,EAAGA,EAAIgsB,EAAWhsB,IAAK,CACzCmsB,EAAatsB,KAAK6sB,qBAAqBT,EAAkBjsB,EACzDksB,GAAoBrsB,KAAK8sB,sBAAsBV,EAAkBjsB,EACjE,QAAOmsB,GACN,IAAK,GACJ,KAED,KAAK,GACJ,GAAIC,EAAM,CACTF,GAAqB,CACrB,IAAIU,GAAsBhV,EAAO1D,YAAc,GAAIzJ,EACnDmiB,GAAW3Z,QAAQ,GAAKpT,KAAKgtB,8BAA8BX,IAC3DU,GAAW3Z,QAAQ,GAAKpT,KAAKgtB,8BAA8BX,IAC3DU,GAAW3Z,QAAQ,GAAKpT,KAAKgtB,8BAA8BX,IAC3DU,GAAW3Z,QAAQ,GAAKpT,KAAKgtB,8BAA8BX,IAC3DU,GAAW3Z,QAAQ,IAAMpT,KAAKgtB,8BAA8BX,IAC5DU,GAAW3Z,QAAQ,IAAMpT,KAAKgtB,8BAA8BX,EAC5DtU,GAAO1D,WAAa0Y,EAErB,KAED,KAAK,GACJ,GAAIR,EAAM,CACTF,GAAqB,CACrB;GAAIY,GAAwBlV,EAAOtD,gBAAkB,GAAIhK,EACzDwiB,GAAOC,cAAgBltB,KAAKmtB,yBAAyBd,IACrDY,GAAOG,gBAAkBptB,KAAKmtB,yBAAyBd,IACvDY,GAAOI,eAAiBrtB,KAAKmtB,yBAAyBd,IACtDY,GAAO3d,gBAAkBtP,KAAKmtB,yBAAyBd,IACvDY,GAAOK,UAAYttB,KAAKmtB,yBAAyBd,IACjDY,GAAOM,YAAcvtB,KAAKmtB,yBAAyBd,IACnDY,GAAOO,WAAaxtB,KAAKmtB,yBAAyBd,IAClDY,GAAOQ,YAAcztB,KAAKmtB,yBAAyBd,EACnDtU,GAAOtD,eAAiBwY,EAEzB,KAED,KAAK,GACJ,GAAIS,GAAmB1tB,KAAK2tB,sBAAsBtB,IAClD,IAAIuB,GAAmB5tB,KAAK2tB,sBAAsBtB,GAAqB,CACvE,IAAIqB,GAAe,GAAKE,IAAgB,EAAG,CAC1C7V,EAAOlM,SAAW2gB,MACZ,CACN,GAAIqB,EACJ,IAAIC,GAA6B,GAAItoB,MACrC,KAAI,GAAIkT,GAAW,EAAGA,EAAIgV,EAAahV,IAAI,CAC1CmV,EAAOC,EAAMpV,GAAKuT,EAAgBhD,0BAA0BjpB,KAAK2tB,sBAAsBtB,KAAuB,EAC9GwB,GAAKE,aAAe,KACpB,IAAGF,EAAKhC,QAAQlF,GACFkH,EAAM1S,cAAgB,MAErCpD,EAAOjM,QAAUgiB,EAElB,KAED,KAAK,GACJ/V,EAAOzD,KAAOtU,KAAKguB,0BAA0B3B,EAC7CJ,GAAgBzX,QAAQyZ,qBAAqBlW,EAC7C,MACD,KAAK,GACJA,EAAOzD,KAAOtU,KAAKguB,0BAA0B3B,EAC7CJ,GAAgBzX,QAAQyZ,qBAAqBlW,EACjCA,GAAQmW,oBACpB,MAED,KAAK,GACJ,GAAI3B,EAAM,CACTxU,EAAOwB,QAAU4U,QAAQ9B,GAE1B,KACD,KAAK,IACJ,GAAIE,EAAM,CACTF,GAAqB,CACrB,IAAIU,GAAsBhV,EAAO1D,YAAc,GAAIzJ,EACnDmiB,GAAW3Z,QAAQ,GAAKpT,KAAKouB,oCAAoC/B,IACjEU,GAAW3Z,QAAQ,GAAKpT,KAAKouB,oCAAoC/B,IACjEU,GAAW3Z,QAAQ,GAAKpT,KAAKouB,oCAAoC/B,IACjEU,GAAW3Z,QAAQ,GAAKpT,KAAKouB,oCAAoC/B,EACjEtU,GAAO1D,WAAa0Y,EAErB,KACD,KAAK,IACJ,GAAIR,EAAM,CACTF,GAAqB,CACrB,IAAIU,GAAsBhV,EAAO1D,YAAc,GAAIzJ,EACnDmiB,GAAW3Z,QAAQ,IAAMpT,KAAKquB,8BAA8BhC,IAC5DU,GAAW3Z,QAAQ,IAAMpT,KAAKquB,8BAA8BhC,EAC5DtU,GAAO1D,WAAa0Y,EAErB,KACD,SACC,UAOP,OAAAnG,KAEkBnnB,GAAAJ,QAATunB,IdkxHNrI,sCAAsCnd,UAAUqd,gCAAgCrd,UAAUktB,wCAAwC,0CAA0CvP,qCAAqC,SAASxgB,EAAQkB,EAAOJ,GexvI5O,GAAOuL,GAAQrM,EAAe,gCAC9B,IAAOsM,GAAatM,EAAa,qCAEjC,IAAOwM,GAAQxM,EAAe,gCf+yI9B,IepvIM4M,GAAS,WA0Md,QA1MKA,GA0MOojB,GApMLvuB,KAAAwuB,UAAqB,GAAIzjB,EAsM/B/K,MAAKyuB,eAAiBF,EAjMvB5tB,OAAAC,eAAWuK,EAAA5K,UAAA,cfkvIJM,IelvIP,WAEC,GAAI6tB,GAAoB7jB,EAAc8jB,WAAW3uB,KAAKyuB,eAAepa,WACrEqa,GAASE,QAET,OAAOF,IfkvID3tB,WAAY,KACZC,aAAc,MejuIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,8Bf2uIJM,Ie3uIP,WAEC,MAAOb,MAAK6uB,6Bf4uIN9tB,WAAY,KACZC,aAAc,Me/tIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,sBf6uIJM,Ie7uIP,WAEC,MAAOb,MAAK8uB,qBf8uIN/tB,WAAY,KACZC,aAAc,MezuIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,cf+uIJM,Ie/uIP,WAEC,GAAI6tB,GAAoB7jB,EAAckkB,MAAM/uB,KAAKyuB,eAAepa,WAChEqa,GAASE,QAET,OAAOF,If+uID3tB,WAAY,KACZC,aAAc,Me1uIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,iBfgvIJM,IehvIP,WAEC,MAAOgK,GAAc8jB,WAAW3uB,KAAKyuB,eAAepa,afivI9CtT,WAAY,KACZC,aAAc,Me5uIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,cfkvIJM,IelvIP,WAEC,GAAI6tB,GAAoB7jB,EAAcmkB,SAAShvB,KAAKyuB,eAAepa,WACnEqa,GAASE,QAET,OAAOF,IfkvID3tB,WAAY,KACZC,aAAc,MettIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,YfquIJM,IeruIP,WAEC,MAAOb,MAAKyuB,eAAepa,YfsuIrB1R,IenuIP,SAAoBqN,GAEnBhQ,KAAKyuB,eAAepa,WAAarE,GfouI3BjP,WAAY,KACZC,aAAc,MentIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,ef0tIJM,Ie1tIP,WAEC,MAAOb,MAAKivB,cf2tINluB,WAAY,KACZC,aAAc,MettIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,Yf4tIJM,Ie5tIP,WAEC,MAAOb,MAAKyuB,eAAepa,WAAWyB,Uf6tIhCnT,Ie1tIP,SAAoBC,GAEnB5C,KAAKyuB,eAAexrB,EAAIL,EAAMK,CAC9BjD,MAAKyuB,eAAevrB,EAAIN,EAAMM,CAC9BlD,MAAKyuB,eAAeloB,EAAI3D,EAAM2D,Gf2tIxBxF,WAAY,KACZC,aAAc,MettIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,ef4tIJM,Ie5tIP,WAEC,MAAOgK,GAAcmkB,SAAShvB,KAAKyuB,eAAepa,af6tI5CtT,WAAY,KACZC,aAAc,MextIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,Yf8tIJM,Ie9tIP,WAEC,MAAO,IAAIkK,GAAS/K,KAAKyuB,eAAete,UAAWnQ,KAAKyuB,eAAere,UAAWpQ,KAAKyuB,eAAepe,Yf+tIhG1N,Ie5tIP,SAAoBC,GAEnB5C,KAAKyuB,eAAete,UAAYvN,EAAMK,CACtCjD,MAAKyuB,eAAere,UAAYxN,EAAMM,CACtClD,MAAKyuB,eAAepe,UAAYzN,EAAM2D,Gf6tIhCxF,WAAY,KACZC,aAAc,MextIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,Sf8tIJM,Ie9tIP,WAEC,MAAO,IAAIkK,GAAS/K,KAAKyuB,eAAetb,OAAQnT,KAAKyuB,eAAene,OAAQtQ,KAAKyuB,eAAe1e,Sf+tI1FpN,Ie5tIP,SAAiBC,GAEhB5C,KAAKyuB,eAAetb,OAASvQ,EAAMK,CACnCjD,MAAKyuB,eAAene,OAAS1N,EAAMM,CACnClD,MAAKyuB,eAAe1e,OAASnN,EAAM2D,Gf6tI7BxF,WAAY,KACZC,aAAc,MextIrBL,QAAAC,eAAWuK,EAAA5K,UAAA,Yf8tIJM,Ie9tIP,WAEC,MAAOgK,GAAckkB,MAAM/uB,KAAKyuB,eAAepa,af+tIzCtT,WAAY,KACZC,aAAc,MetsIdmK,GAAA5K,UAAA2uB,oBAAP,SAA2BC,GAE1B,MAAO,IAAIvkB,GASLO,GAAA5K,UAAA6uB,YAAP,SAAmB7U,GAElBva,KAAKyuB,eAAejU,eAAezP,EAASkP,OAAQM,GAQ9CpP,GAAA5K,UAAA8uB,aAAP,SAAoB9U,GAEnBva,KAAKyuB,eAAejU,eAAezP,EAASkP,QAASM,GAS/CpP,GAAA5K,UAAA+uB,SAAP,SAAgB/U,GAEfva,KAAKyuB,eAAejU,eAAezP,EAASsO,QAASkB,GAQ/CpP,GAAA5K,UAAAgvB,UAAP,SAAiBhV,GAEhBva,KAAKyuB,eAAejU,eAAezP,EAASsO,OAAQkB,GAQ9CpP,GAAA5K,UAAAivB,OAAP,SAAcjV,GAEbva,KAAKyuB,eAAejU,eAAezP,EAASsN,OAAQkC,GAQ9CpP,GAAA5K,UAAAkvB,SAAP,SAAgBlV,GAEfva,KAAKyuB,eAAejU,eAAezP,EAASsN,QAASkC,GAEvD,OAAApP,KAEA1L,GAAmBJ,QAAV8L,If6sINsT,gCAAgCrd,UAAUsd,qCAAqCtd,UAAUyd,gCAAgCzd,YAAYsuB,+CAA+C,SAASnxB,EAAQkB,EAAOJ,GAC/M,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgBtjJtB,IAAOoiB,GAAclkB,EAAc,4CAEnC,IAAOmD,GAAgBnD,EAAc,8CACrC,IAAOoD,GAAgBpD,EAAc,8CAKrC,IAAOqD,GAAerD,EAAc,0CAEpC,IAAOsD,GAAgBtD,EAAc,4ChBsjJrC,IgB/iJMoxB,GAAmB,SAAAjvB,GAASX,EAA5B4vB,EAAmBjvB,EAkOxB,SAlOKivB,GAkOO5tB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAApB,KAAAU,KAAM+B,EAhOC/B,MAAAgC,aAAsB,CACtBhC,MAAA4vB,kBAA4B,IAC5B5vB,MAAA6vB,mBAA6B,IAe7B7vB,MAAA8vB,mBAA6B,IAC7B9vB,MAAA+vB,oBAA8B,IAC9B/vB,MAAAkC,eAAyB,KA+MhClC,MAAKsC,WAAatC,KAAKuC,oBAAwCvC,KAAKuC,oBAAoBC,QAAQ,IAAM,GAAId,GAAiB1B,KAAKuC,qBAAuB,GAAIb,EAE3J1B,MAAKgC,aAAehC,KAAKsC,WAAWI,MA5MrC/B,OAAAC,eAAW+uB,EAAApvB,UAAA,ahBqiJJM,IgBriJP,WAEC,MAAO8uB,GAAoBzuB,WhBsiJrBH,WAAY,KACZC,aAAc,MgBniJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,ehBsiJJM,IgBtiJP,WAEC,MAAOb,MAAKgC,chBuiJNjB,WAAY,KACZC,aAAc,MgBhiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,uBhBwiJJM,IgBxiJP,WAEC,MAAOb,MAAKgwB,sBhByiJNrtB,IgBtiJP,SAA+BC,GAE9B,GAAI5C,KAAKgwB,sBAAwBptB,EAChC,MAED5C,MAAKgwB,qBAAuBptB,GhBsiJtB7B,WAAY,KACZC,aAAc,MgBjiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,mBhBuiJJM,IgBviJP,WAEC,MAAOb,MAAKiwB,kBhBwiJNttB,IgBriJP,SAA2BC,GAE1B,GAAI5C,KAAKiwB,kBAAoBrtB,EAC5B,MAED5C,MAAKiwB,iBAAmBrtB,CAExB,IAAI5C,KAAKkwB,cACRlwB,KAAKkwB,cAAcpsB,WAAa9D,KAAKiwB,gBAEtC,IAAIjwB,KAAKmwB,cACRnwB,KAAKmwB,cAAcrsB,WAAa9D,KAAKiwB,kBhBmiJhClvB,WAAY,KACZC,aAAc,MgB5hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,iBhBoiJJM,IgBpiJP,WAEC,MAAOb,MAAKkC,gBhBqiJNS,IgBliJP,SAAyBC,GAExB,GAAI5C,KAAKkC,gBAAkBU,EAC1B,MAED5C,MAAKkC,eAAiBU,GhBkiJhB7B,WAAY,KACZC,aAAc,MgB5hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,qBhBmiJJM,IgBniJP,WAEC,MAAOb,MAAK8vB,oBhBoiJNntB,IgBjiJP,SAA6BC,GAE5B,GAAI5C,KAAK8vB,oBAAsBltB,EAC9B,MAED5C,MAAK8vB,mBAAqBltB,GhBiiJpB7B,WAAY,KACZC,aAAc,MgB3hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,sBhBkiJJM,IgBliJP,WAEC,MAAOb,MAAK+vB,qBhBmiJNptB,IgBhiJP,SAA8BC,GAE7B,GAAI5C,KAAK+vB,qBAAuBntB,EAC/B,MAED5C,MAAK+vB,oBAAsBntB,GhBgiJrB7B,WAAY,KACZC,aAAc,MgB3hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,ahBiiJJM,IgBjiJP,WAEC,MAAOb,MAAKsC,YhBkiJNvB,WAAY,KACZC,aAAc,MgB7hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,WhBmiJJM,IgBniJP,WAEC,IAAKb,KAAKowB,UAAYpwB,KAAKmI,eAAenI,KAAKowB,SAAShoB,IACvDpI,KAAKqwB,WAAWrwB,KAAKowB,SAEtB,OAAOpwB,MAAKowB,UhBmiJNrvB,WAAY,KACZC,aAAc,MgB9hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,YhBoiJJM,IgBpiJP,WAEC,IAAKb,KAAKswB,WAAatwB,KAAKmI,eAAenI,KAAKswB,UAAUloB,IACzDpI,KAAKuwB,YAAYvwB,KAAKswB,UAEvB,OAAOtwB,MAAKswB,WhBoiJNvvB,WAAY,KACZC,aAAc,MgB/hJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,ehBqiJJM,IgBriJP,WAEC,GAAIb,KAAK4vB,kBACR5vB,KAAKwwB,mBAEN,OAAOxwB,MAAKywB,chBqiJN1vB,WAAY,KACZC,aAAc,MgBhiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,gBhBsiJJM,IgBtiJP,WAEC,GAAIb,KAAK6vB,mBACR7vB,KAAK0wB,oBAEN,OAAO1wB,MAAK2wB,ehBsiJN5vB,WAAY,KACZC,aAAc,MgBjiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,OhBuiJJM,IgBviJP,WAEC,IAAKb,KAAK8C,MAAQ9C,KAAKmI,eAAenI,KAAK8C,KAAKsF,IAC/CpI,KAAK6C,OAAO7C,KAAK8C,KAElB,OAAO9C,MAAK8C,MhBuiJN/B,WAAY,KACZC,aAAc,MgBliJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,gBhBwiJJM,IgBxiJP,WAEC,MAAOb,MAAK4wB,ehByiJN7vB,WAAY,KACZC,aAAc,MgBpiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,gBhB0iJJM,IgB1iJP,WAEC,MAAOb,MAAKkwB,ehB2iJNnvB,WAAY,KACZC,aAAc,MgBtiJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,gBhB4iJJM,IgB5iJP,WAEC,MAAOb,MAAKmwB,ehB6iJNpvB,WAAY,KACZC,aAAc,MgB3iJrBL,QAAAC,eAAW+uB,EAAApvB,UAAA,wBhB8iJJM,IgB9iJP,WAEC,MAAOb,MAAK6wB,uBhB+iJN9vB,WAAY,KACZC,aAAc,MgBjiJd2uB,GAAApvB,UAAAwC,qBAAP,WAEC,MAAO/C,MAAKsC,WAAWzB,IAAIb,KAAKgC,cAI1B2tB,GAAApvB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAUqD,GAEvC,MAAO,MASDopB,GAAApvB,UAAAsH,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAU9H,KAAKsC,WAClB,MAED,IAAIwF,YAAkBpG,GAAkB,CACvC1B,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAAgCwF,MAC/B,IAAIA,EAAQ,CAClB9H,KAAKsC,WAAWK,IAAImF,EAAQC,OACtB,CACN/H,KAAKgI,sBAAsBhI,KAAKsC,WAChCtC,MAAKsC,WAAa,GAAIZ,GAAiB1B,KAAKuC,qBAG7CvC,KAAKgC,aAAehC,KAAKsC,WAAWI,KAEpC,IAAI1C,KAAK8vB,mBACR9vB,KAAKiI,qBAAqBjI,KAAKowB,SAEhC,IAAIpwB,KAAK+vB,oBACR/vB,KAAKiI,qBAAqBjI,KAAKswB,UAEhC,IAAItwB,KAAKkC,eACRlC,KAAKiI,qBAAqBjI,KAAK8C,KAEhC9C,MAAKkI,mBAELlI,MAAKiI,qBAAqBjI,KAAKsC,WAE/BtC,MAAKmI,eAAenI,KAAKsC,WAAW8F,IAAM,MASpCunB,GAAApvB,UAAA8vB,WAAP,SAAkBvoB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAK/H,KAAK8vB,mBAAoB,CAC7B,GAAIhoB,GAAU9H,KAAKowB,SAClB,MAED,IAAItoB,YAAkBpG,GAAkB,CACvC1B,KAAKgI,sBAAsBhI,KAAKowB,SAChCpwB,MAAKowB,SAA8BtoB,MAC7B,IAAIA,EAAQ,CAClB,IAAK9H,KAAKowB,SACTpwB,KAAKowB,SAAW,GAAI1uB,GAAiB1B,KAAKuC,oBAE3CvC,MAAKowB,SAASztB,IAAImF,EAAQC,OACpB,IAAI/H,KAAKowB,SAAU,CACzBpwB,KAAKgI,sBAAsBhI,KAAKowB,SAChCpwB,MAAKowB,SAAW,IAChB,aAEK,CACN,GAAIpwB,KAAK4vB,kBACR5vB,KAAKwwB,mBAENxwB,MAAKowB,SAAWvuB,EAAiBivB,gBAAgB9wB,KAAKuI,UAAWvI,KAAKywB,aAAczwB,KAAKowB,SAAUpwB,KAAKuC,qBAGzGvC,KAAKiI,qBAAqBjI,KAAKowB,SAE/BpwB,MAAKmI,eAAenI,KAAKowB,SAAShoB,IAAM,MASlCunB,GAAApvB,UAAAgwB,YAAP,SAAmBzoB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAK/H,KAAK+vB,oBAAqB,CAC9B,GAAIjoB,GAAU9H,KAAKswB,UAClB,MAED,IAAIxoB,YAAkBpG,GAAkB,CACvC1B,KAAKgI,sBAAsBhI,KAAKswB,UAChCtwB,MAAKswB,UAA+BxoB,MAC9B,IAAIA,EAAQ,CAClB,IAAK9H,KAAKswB,UACTtwB,KAAKswB,UAAY,GAAI5uB,GAAiB1B,KAAKuC,oBAE5CvC,MAAKswB,UAAU3tB,IAAImF,EAAQC,OACrB,IAAI/H,KAAKswB,UAAW,CAC1BtwB,KAAKgI,sBAAsBhI,KAAKswB,UAChCtwB,MAAKswB,UAAY,IACjB,aAEK,CACN,GAAItwB,KAAK6vB,mBACR7vB,KAAK0wB,oBAEN,IAAI1wB,KAAK4vB,kBACR5vB,KAAKwwB,mBAENxwB,MAAKswB,UAAYzuB,EAAiBkvB,iBAAiB/wB,KAAKuI,UAAWvI,KAAK2wB,cAAe3wB,KAAKywB,aAAczwB,KAAKswB,UAAWtwB,KAAKuC,qBAGhIvC,KAAKiI,qBAAqBjI,KAAKswB,UAE/BtwB,MAAKmI,eAAenI,KAAKswB,UAAUloB,IAAM,MASnCunB,GAAApvB,UAAAsC,OAAP,SAAciF,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAK/H,KAAKkC,eAAgB,CACzB,GAAI4F,GAAU9H,KAAK8C,KAClB,MAED,IAAIgF,YAAkBnG,GAAkB,CACvC3B,KAAKgI,sBAAsBhI,KAAK8C,KAChC9C,MAAK8C,KAA0BgF,MACzB,IAAIA,EAAQ,CAClB,IAAK9H,KAAK8C,KACT9C,KAAK8C,KAAO,GAAInB,GAAiB3B,KAAKuC,oBAEvCvC,MAAK8C,KAAKH,IAAImF,EAAQC,OAChB,IAAI/H,KAAK8C,KAAM,CACrB9C,KAAKgI,sBAAsBhI,KAAK8C,KAChC9C,MAAK8C,KAAO,IACZ,aAEK,CACN9C,KAAK8C,KAAOjB,EAAiByG,YAAYtI,KAAKuI,UAAWvI,KAAK8C,KAAM9C,KAAKuC,oBAAqBvC,KAAKgC,cAGpG,GAAIhC,KAAK+vB,oBACR/vB,KAAKiI,qBAAqBjI,KAAKswB,UAEhCtwB,MAAKiI,qBAAqBjI,KAAK8C,KAE/B9C,MAAKmI,eAAenI,KAAK8C,KAAKsF,IAAM,MAS9BunB,GAAApvB,UAAAywB,gBAAP,SAAuBlpB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU9H,KAAK4wB,cAClB,MAED,IAAI9oB,YAAkBnG,GAAkB,CACvC3B,KAAKgI,sBAAsBhI,KAAK4wB,cAChC5wB,MAAK4wB,cAAmC9oB,MAClC,IAAIA,EAAQ,CAClB,IAAK9H,KAAK4wB,cACT5wB,KAAK4wB,cAAgB,GAAIjvB,GAAiB3B,KAAKuC,oBAEhDvC,MAAK4wB,cAAcjuB,IAAImF,EAAQC,OACzB,IAAI/H,KAAK4wB,cAAe,CAC9B5wB,KAAKgI,sBAAsBhI,KAAK4wB,cAChC5wB,MAAK4wB,cAAgB,IACrB,QAGD5wB,KAAKiI,qBAAqBjI,KAAK4wB,cAE/B5wB,MAAKmI,eAAenI,KAAK4wB,cAAcxoB,IAAM,MASvCunB,GAAApvB,UAAA0wB,gBAAP,SAAuBnpB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU9H,KAAKkwB,cAClB,MAED,IAAIpoB,YAAkB2a,GAAgB,CACrCziB,KAAKgI,sBAAsBhI,KAAKkwB,cAChClwB,MAAKkwB,cAAiCpoB,MAChC,IAAIA,EAAQ,CAClB,IAAK9H,KAAKkwB,cACTlwB,KAAKkwB,cAAgB,GAAIzN,GAAeI,aAAc7iB,KAAKiwB,iBAAkBjwB,KAAKuC,oBAEnF,IAAIvC,KAAKgwB,qBAAsB,CAC9B,GAAIhxB,GAAW,CACf,IAAIkyB,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAIzwB,OAErBX,MAAK6wB,sBAAwB,GAAIrrB,MAEjC,OAAOxG,EAAI8I,EAAOvI,OAAQ,CACzB2xB,EAAWppB,EAAO9I,EAGlB,IAAIoyB,EAAIF,IAAa9vB,UAAW,CAC/BgwB,EAAIF,GAAYC,CAChBnxB,MAAK6wB,sBAAsBM,KAAcD,EAI1CppB,EAAO9I,KAAOoyB,EAAIF,IAIpBlxB,KAAKkwB,cAAcvtB,IAAImF,EAAQC,OAEzB,IAAI/H,KAAKkwB,cAAe,CAC9BlwB,KAAKgI,sBAAsBhI,KAAKkwB,cAChClwB,MAAKkwB,cAAgB,IACrB,QAGDlwB,KAAKiI,qBAAqBjI,KAAKkwB,cAE/BlwB,MAAKmI,eAAenI,KAAKkwB,cAAc9nB,IAAM,MASvCunB,GAAApvB,UAAA8wB,gBAAP,SAAuBvpB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAU9H,KAAKmwB,cAClB,MAED,IAAIroB,YAAkB2a,GAAgB,CACrCziB,KAAKgI,sBAAsBhI,KAAKmwB,cAChCnwB,MAAKmwB,cAAiCroB,MAChC,IAAIA,EAAQ,CAClB,IAAK9H,KAAKmwB,cACTnwB,KAAKmwB,cAAgB,GAAI1N,GAAeI,aAAc7iB,KAAKiwB,iBAAkBjwB,KAAKuC,oBAEnFvC,MAAKmwB,cAAcxtB,IAAImF,EAAQC,OAEzB,IAAI/H,KAAKmwB,cAAe,CAC9BnwB,KAAKgI,sBAAsBhI,KAAKmwB,cAChCnwB,MAAKmwB,cAAgB,IACrB,QAGDnwB,KAAKiI,qBAAqBjI,KAAKmwB,cAE/BnwB,MAAKmI,eAAenI,KAAKmwB,cAAc/nB,IAAM,MAMvCunB,GAAApvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsC,WAAWrB,SAChBjB,MAAKsC,WAAa,IAElB,IAAItC,KAAKowB,SAAU,CAClBpwB,KAAKowB,SAASnvB,SACdjB,MAAKowB,SAAW,KAGjB,GAAIpwB,KAAKswB,UAAW,CACnBtwB,KAAKswB,UAAUrvB,SACfjB,MAAKswB,UAAY,KAGlB,GAAItwB,KAAK8C,KAAM,CACd9C,KAAK8C,KAAK7B,SACVjB,MAAK8C,KAAO,KAGb,GAAI9C,KAAK4wB,cAAe,CACvB5wB,KAAK4wB,cAAc3vB,SACnBjB,MAAK4wB,cAAgB,KAGtB,GAAI5wB,KAAKkwB,cAAe,CACvBlwB,KAAKkwB,cAAcjvB,SACnBjB,MAAKkwB,cAAgB,KAGtB,GAAIlwB,KAAKmwB,cAAe,CACvBnwB,KAAKmwB,cAAclvB,SACnBjB,MAAKmwB,cAAgB,KAGtB,GAAInwB,KAAKywB,aAAc,CACtBzwB,KAAKywB,aAAaxvB,SAClBjB,MAAKywB,aAAe,KAGrB,GAAIzwB,KAAK2wB,cAAe,CACvB3wB,KAAK2wB,cAAc1vB,SACnBjB,MAAK2wB,cAAgB,MAYhBhB,GAAApvB,UAAAoI,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7BrH,EAAAH,UAAMoI,WAAUrJ,KAAAU,KAAC8H,EAAQC,EAEzB/H,MAAK4vB,kBAAoB,IACzB5vB,MAAK6vB,mBAAqB,IAE1B,IAAI7vB,KAAK8vB,mBACR9vB,KAAKiI,qBAAqBjI,KAAKowB,SAEhC,IAAIpwB,KAAK+vB,oBACR/vB,KAAKiI,qBAAqBjI,KAAKswB,UAEhC,IAAItwB,KAAKkC,eACRlC,KAAKiI,qBAAqBjI,KAAK8C,MAO1B6sB,GAAApvB,UAAAiI,MAAP,WAEC,GAAIA,GAA4B,GAAImnB,GAAoB3vB,KAAKuC,oBAAqBvC,KAAKuC,oBAAoBiG,QAAU,KAGrHA,GAAM8oB,kBAAoB,KAC1B9oB,GAAM+oB,mBAAqB,KAC3B/oB,GAAMC,cAAgB,KAEtB,IAAIzI,KAAK0I,QACRF,EAAMG,WAAW3I,KAAK0I,QAAQF,QAE/B,IAAIxI,KAAKwxB,QACRhpB,EAAM6nB,WAAWrwB,KAAKwxB,QAAQhpB,QAE/B,IAAIxI,KAAK4I,IACRJ,EAAM3F,OAAO7C,KAAK4I,IAAIJ,QAEvB,IAAIxI,KAAKyxB,SACRjpB,EAAM+nB,YAAYvwB,KAAKyxB,SAASjpB,QAEjC,IAAIxI,KAAK0xB,aACRlpB,EAAMwoB,gBAAgBhxB,KAAK0xB,aAAalpB,QAEzCA,GAAMmpB,gBAAkB3xB,KAAKiwB,gBAE7B,IAAIjwB,KAAK4xB,aACRppB,EAAMyoB,gBAAgBjxB,KAAK4xB,aAAappB,QAEzC,IAAIxI,KAAK6xB,aACRrpB,EAAM6oB,gBAAgBrxB,KAAK6xB,aAAarpB,QAGzCA,GAAM8oB,kBAAoBtxB,KAAK8vB,kBAC/BtnB,GAAM+oB,mBAAqBvxB,KAAK+vB,mBAChCvnB,GAAMC,cAAgBzI,KAAKkC,cAE3B,OAAOsG,GAGDmnB,GAAApvB,UAAAsI,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjClH,EAAiBmH,SAASF,EAAQC,EAAQ/I,KAAK4I,IAAK5I,KAAK4I,IAAIlG,OAOvDitB,GAAApvB,UAAA0I,MAAP,SAAaA,GAEZpH,EAAiBoH,MAAMA,EAAOjJ,KAAK4D,UAAW5D,KAAKgC,cAG7C2tB,GAAApvB,UAAA2I,oBAAP,SAA2BC,GAE1BtH,EAAiBqH,oBAAoBC,EAAWnJ,KAAK4D,UAAW5D,KAAKwxB,QAASxxB,KAAKyxB,SAAUzxB,KAAKgC,cAM3F2tB,GAAApvB,UAAAmwB,mBAAR,WAEC1wB,KAAK2wB,cAAgB9uB,EAAiBiwB,qBAAqB9xB,KAAKuI,UAAWvI,KAAKsC,WAAYtC,KAAK4I,IAAK5I,KAAK2wB,cAAe3wB,KAAKuI,UAAU7F,MAEzI1C,MAAK6vB,mBAAqB,MAMnBF,GAAApvB,UAAAiwB,kBAAR,WAECxwB,KAAKywB,aAAe5uB,EAAiBkwB,oBAAoB/xB,KAAKuI,UAAWvI,KAAKsC,WAAYtC,KAAKywB,aAAczwB,KAAKuI,UAAU7F,MAE5H1C,MAAK4vB,kBAAoB,MAGnBD,GAAApvB,UAAA6I,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB2oB,sBAAsBhyB,KAAMsJ,EAAUC,EAAoBC,GAhqBpEmmB,GAAAzuB,UAAmB,6BAkqBlC,OAAAyuB,IApqBkC/tB,EAsqBlCnC,GAA6BJ,QAApBswB,IhBs6INnM,4CAA4CpiB,UAAUsI,8CAA8CtI,UAAUuI,8CAA8CvI,UAAUwI,0CAA0C,0CAA0CC,4CAA4C,8CAA8CooB,2CAA2C,SAAS1zB,EAAQkB,EAAOJ,GAC1Z,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiBjmKtB,IAAOsvB,GAAmBpxB,EAAY,8CAEtC,IAAOwL,GAAWxL,EAAc,sCjB4mKhC,IiB9lKM2zB,GAAe,SAAAxxB,GAASX,EAAxBmyB,EAAexxB,EA8BpB,SA9BKwxB,GA8BOjoB,EAAiCC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7D5I,EAAApB,KAAAU,KAEAA,MAAKmK,aAAeD,CACpBlK,MAAKoK,aAAeH,CACpBjK,MAAKsJ,SAAWA,EAzBjB3I,OAAAC,eAAWsxB,EAAA3xB,UAAA,ajBsmKJM,IiBtmKP,WAEC,MAAOqxB,GAAgBhxB,WjBumKjBH,WAAY,KACZC,aAAc,MiBlmKrBL,QAAAC,eAAWsxB,EAAA3xB,UAAA,ejBwmKJM,IiBxmKP,WAEC,MAAOb,MAAKoK,cjBymKNrJ,WAAY,KACZC,aAAc,MiBrlKdkxB,GAAA3xB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,MA1CAkyB,GAAAhxB,UAAmB,yBAEnBgxB,GAAA7nB,WAAyBslB,CA0CxC,OAAAuC,IA9C8BnoB,EAgD9BtK,GAAyBJ,QAAhB6yB,IjB6lKN5nB,sCAAsC,sCAAsColB,8CAA8C,gDAAgDyC,oDAAoD,SAAS5zB,EAAQkB,EAAOJ,GACzP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkBlqKtB,IAAOwK,GAAatM,EAAc,qCAClC,IAAO6zB,GAAmB7zB,EAAa,2CAIvC,IAAO8zB,GAAkB9zB,EAAa,+CAGtC,IAAO+zB,GAAmB/zB,EAAa,iDlBoqKvC,IkB7pKMg0B,GAAsB,SAAA7xB,GAASX,EAA/BwyB,EAAsB7xB,EAoB3B,SApBK6xB,GAoBOlQ,GAEX3hB,EAAApB,KAAAU,KAAMqiB,EAnBCriB,MAAAkN,GAAY,CACZlN,MAAAmN,GAAY,CACZnN,MAAAoN,GAAY,CACZpN,MAAAmS,OAAgB,CAChBnS,MAAAuQ,QAAiB,CACjBvQ,MAAAiQ,OAAgB,CAChBjQ,MAAAwyB,SAAkB,CAClBxyB,MAAAyyB,SAAkB,CAClBzyB,MAAA0yB,SAAkB,CAClB1yB,MAAA2yB,cAAuB,CACvB3yB,MAAA4yB,cAAuB,CACvB5yB,MAAA6yB,cAAuB,EAcxBN,EAAAhyB,UAAAuyB,QAAP,WAEC9yB,KAAKkN,GAAKlN,KAAKmN,GAAKnN,KAAKoN,GAAK,CAC9BpN,MAAKmS,OAASnS,KAAKuQ,QAAUvQ,KAAKiQ,OAAS,CAC3CjQ,MAAKwyB,SAAWxyB,KAAKyyB,SAAWzyB,KAAK0yB,SAAW,CAChD1yB,MAAK2yB,cAAgB3yB,KAAK4yB,cAAgB5yB,KAAK6yB,cAAgB,EAMzDN,GAAAhyB,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGjzB,KAAKkzB,cACPlzB,KAAKmzB,UAEN,KAAK,GAAIn0B,GAAW,EAAGA,EAAIi0B,IAAaj0B,EAAG,CAE1C,GAAIo0B,GAAgBJ,EAAOh0B,EAC3B,IAAID,GAAWq0B,EAAMr0B,CACrB,IAAImB,GAAWkzB,EAAMlzB,CACrB,IAAImzB,GAAWD,EAAMC,CACrB,IAAIC,GAAwBv0B,EAAI,GAAIiB,KAAK2yB,cAAgB3yB,KAAK2yB,aAC9D,IAAIY,GAAwBrzB,EAAI,GAAIF,KAAK4yB,cAAgB5yB,KAAK4yB,aAC9D,IAAIY,GAAwBH,EAAI,GAAIrzB,KAAK6yB,cAAgB7yB,KAAK6yB,aAC9D,IAAIY,GAAkB10B,GAAGiB,KAAKwyB,SAAWc,GAAkBpzB,GAAGF,KAAKyyB,SAAWc,GAAkBF,GAAGrzB,KAAK0yB,SAAWc,GAAkBJ,EAAMnzB,CAE3I,IAAIwzB,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAAhyB,UAAAmzB,gBAAP,SAAuB5d,EAAmB6d,EAAoBC,GAE7D,GAAG5zB,KAAKkzB,cACPlzB,KAAKmzB,UAEN,OAAOnzB,MAAK6zB,KAAKH,gBAAgB5d,EAAU6d,EAAWC,GAKhDrB,GAAAhyB,UAAAuzB,gBAAP,SAAuBV,GAEtB,GAAIr0B,GAAWq0B,EAAMr0B,CACrB,IAAImB,GAAWkzB,EAAMlzB,CACrB,IAAImzB,GAAWD,EAAMC,CACrB,IAAIU,GAAwBh1B,EAAEiB,KAAKwyB,SAAWtyB,EAAEF,KAAKyyB,SAAWY,EAAErzB,KAAK0yB,SAAWU,EAAMnzB,CAExF,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAImzB,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBj1B,EAAEiB,KAAK2yB,cAAgBzyB,EAAEF,KAAK4yB,cAAgBS,EAAErzB,KAAK6yB,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAAhyB,UAAA4yB,SAAP,WAECzyB,EAAAH,UAAM4yB,SAAQ7zB,KAAAU,KAEdA,MAAK6zB,KAAO7zB,KAAKo0B,SAASvkB,QAC1B,IAAIwkB,GAAkBr0B,KAAKo0B,SAASvjB,cACpC,IAAIyjB,GAAYt0B,KAAK6zB,KAAKzvB,MAAM,CAChC,IAAImwB,GAAYv0B,KAAK6zB,KAAKxvB,OAAO,CACjC,IAAImwB,GAAYx0B,KAAK6zB,KAAK/jB,MAAM,CAChC,IAAIzK,GAAYrF,KAAK6zB,KAAK5wB,EAAIqxB,CAC9B,IAAIhvB,GAAYtF,KAAK6zB,KAAK3wB,EAAIqxB,CAC9B,IAAIE,GAAYz0B,KAAK6zB,KAAKttB,EAAIiuB,CAC9B,IAAIpc,GAAevN,EAAc4N,kBAEjC4b,GAAOK,cAActc,EAErB,IAAIuc,GAAavc,EAAI,GAAIwc,EAAaxc,EAAI,GAAIyc,EAAazc,EAAI,GAAI0c,EAAa1c,EAAI,GACpF,IAAI2c,GAAa3c,EAAI,GAAI4c,EAAa5c,EAAI,GAAI6c,EAAa7c,EAAI,GAAI8c,EAAa9c,EAAI,GACpF,IAAI+c,GAAa/c,EAAI,GAAIgd,EAAahd,EAAI,GAAIid,EAAajd,EAAI,IAAKkd,EAAald,EAAI,GAErFpY,MAAKwyB,SAAWntB,EAAGsvB,EAAMrvB,EAAGsvB,EAAMH,EAAGI,EAAMC,CAC3C90B,MAAKyyB,SAAWptB,EAAG0vB,EAAMzvB,EAAG0vB,EAAMP,EAAGQ,EAAMC,CAC3Cl1B,MAAK0yB,SAAWrtB,EAAG8vB,EAAM7vB,EAAG8vB,EAAMX,EAAGY,EAAMC,CAE3Ct1B,MAAK2yB,cAAgBvvB,KAAKmyB,IAAIjB,EAAGK,EAAMJ,EAAGK,EAAMJ,EAAGK,EACnD70B,MAAK4yB,cAAgBxvB,KAAKmyB,IAAIjB,EAAGS,EAAMR,EAAGS,EAAMR,EAAGS,EACnDj1B,MAAK6yB,cAAgBzvB,KAAKmyB,IAAIjB,EAAGa,EAAMZ,EAAGa,EAAMZ,EAAGa,EAEnD,IAAIr1B,KAAKw1B,QAAS,CACjBx1B,KAAKw1B,QAAQpxB,MAAQpE,KAAK6zB,KAAKzvB,KAC/BpE,MAAKw1B,QAAQnxB,OAASrE,KAAK6zB,KAAKxvB,MAChCrE,MAAKw1B,QAAQ1lB,MAAQ9P,KAAK6zB,KAAK/jB,KAC/B9P,MAAKy1B,kBAAkBtsB,UAAUusB,SAAWrB,EAG7Cr0B,KAAKmS,OAASnS,KAAK2yB,cAAc,CACjC3yB,MAAKuQ,QAAUvQ,KAAK4yB,cAAc,CAClC5yB,MAAKiQ,OAASjQ,KAAK6yB,cAAc,CAEjC7yB,MAAKkN,GAAKlN,KAAKwyB,SAAWxyB,KAAK2yB,aAC/B3yB,MAAKmN,GAAKnN,KAAKyyB,SAAWzyB,KAAK4yB,aAC/B5yB,MAAKoN,GAAKpN,KAAK0yB,SAAW1yB,KAAK6yB,cAGzBN,GAAAhyB,UAAAo1B,wBAAP,WAEC31B,KAAKw1B,QAAU,GAAIlD,EACnBtyB,MAAKw1B,QAAQI,aAAe,iBAE5B,OAAc51B,MAAKw1B,QAAQK,eAE7B,OAAAtD,IAhJqCF,EAkJL5yB,GAAAJ,QAAvBkzB,IlB0nKN7T,qCAAqCtd,UAAU00B,2CAA2C10B,UAAU20B,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAAS13B,EAAQkB,EAAOJ,GAC7W,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmBhyKtB,IAAO+xB,GAAmB7zB,EAAa,2CAKvC,IAAO8zB,GAAkB9zB,EAAa,+CAGtC,IAAO23B,GAAqB33B,EAAY,mDAExC,IAAM43B,GAAc,SAAAz1B,GAASX,EAAvBo2B,EAAcz1B,EASnB,SATKy1B,GASO9T,GAEX3hB,EAAApB,KAAAU,KAAMqiB,EARCriB,MAAAo2B,QAAiB,CACjBp2B,MAAAwyB,SAAkB,CAClBxyB,MAAAyyB,SAAkB,CAClBzyB,MAAA0yB,SAAkB,EAQnByD,EAAA51B,UAAAuyB,QAAP,WAEC9yB,KAAKwyB,SAAWxyB,KAAKyyB,SAAWzyB,KAAK0yB,SAAW,CAChD1yB,MAAKo2B,QAAU,EAGTD,GAAA51B,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGjzB,KAAKkzB,cACPlzB,KAAKmzB,UAEN,KAAK,GAAIn0B,GAAW,EAAGA,EAAIi0B,IAAaj0B,EAAG,CAC1C,GAAIo0B,GAAgBJ,EAAOh0B,EAC3B,IAAIs0B,GAAwBF,EAAMr0B,EAAI,GAAIiB,KAAKo2B,QAAUp2B,KAAKo2B,OAC9D,IAAI7C,GAAwBH,EAAMlzB,EAAI,GAAIF,KAAKo2B,QAAUp2B,KAAKo2B,OAC9D,IAAI5C,GAAwBJ,EAAMC,EAAI,GAAIrzB,KAAKo2B,QAAUp2B,KAAKo2B,OAC9D,IAAI3C,GAAkBL,EAAMr0B,GAAIiB,KAAKwyB,SAAWc,GAAmBF,EAAMlzB,GAAIF,KAAKyyB,SAAWc,GAAkBH,EAAMC,GAAIrzB,KAAK0yB,SAAWc,GAAmBJ,EAAMnzB,CAClK,IAAIwzB,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD0C,GAAA51B,UAAAmzB,gBAAP,SAAuB5d,EAAmB6d,EAAoBC,GAE7D,GAAG5zB,KAAKkzB,cACPlzB,KAAKmzB,UAEN,OAAOnzB,MAAKq2B,QAAQ3C,gBAAgB5d,EAAU6d,EAAWC,GAInDuC,GAAA51B,UAAAuzB,gBAAP,SAAuBV,GAEtB,GAAIr0B,GAAWq0B,EAAMr0B,CACrB,IAAImB,GAAWkzB,EAAMlzB,CACrB,IAAImzB,GAAWD,EAAMC,CACrB,IAAIiD,GAAYv3B,EAAEiB,KAAKwyB,SAAWtyB,EAAEF,KAAKyyB,SAAWY,EAAErzB,KAAK0yB,SAAWU,EAAMnzB,CAE5E,IAAIlB,EAAI,EACPA,GAAKA,CAEN,IAAImB,EAAI,EACPA,GAAKA,CAEN,IAAImzB,EAAI,EACPA,GAAKA,CAEN,IAAIkD,IAAax3B,EAAImB,EAAImzB,GAAGrzB,KAAKo2B,OAEjC,OAAOE,GAAKC,EAAInE,EAAoB6B,MAAQqC,GAAMC,EAAInE,EAAoB8B,KAAO9B,EAAoB+B,UAG/FgC,GAAA51B,UAAA4yB,SAAP,WAECzyB,EAAAH,UAAM4yB,SAAQ7zB,KAAAU,KAEdA,MAAKq2B,QAAUr2B,KAAKo0B,SAAS7e,WAC7B,IAAI8e,GAAkBr0B,KAAKo0B,SAASvjB,cAEpC,IAAIxL,GAAYrF,KAAKq2B,QAAQpzB,CAC7B,IAAIqC,GAAYtF,KAAKq2B,QAAQnzB,CAC7B,IAAIuxB,GAAYz0B,KAAKq2B,QAAQ9vB,CAC7B,IAAI5H,GAAWqB,KAAKq2B,QAAQG,MAE5B,IAAIpe,GAAoB,GAAI5S,OAAc,GAC1C6uB,GAAOK,cAActc,EAErB,IAAIuc,GAAavc,EAAI,GAAIwc,EAAaxc,EAAI,GAAIyc,EAAazc,EAAI,GAAI0c,EAAa1c,EAAI,GACpF,IAAI2c,GAAa3c,EAAI,GAAI4c,EAAa5c,EAAI,GAAI6c,EAAa7c,EAAI,GAAI8c,EAAa9c,EAAI,GACpF,IAAI+c,GAAa/c,EAAI,GAAIgd,EAAahd,EAAI,GAAIid,EAAajd,EAAI,IAAKkd,EAAald,EAAI,GAErFpY,MAAKwyB,SAAWntB,EAAGsvB,EAAMrvB,EAAGsvB,EAAMH,EAAGI,EAAMC,CAC3C90B,MAAKyyB,SAAWptB,EAAG0vB,EAAMzvB,EAAG0vB,EAAMP,EAAGQ,EAAMC,CAC3Cl1B,MAAK0yB,SAAWrtB,EAAG8vB,EAAM7vB,EAAG8vB,EAAMX,EAAGY,EAAMC,CAE3C,IAAImB,GAAY9B,EAAMC,EAAMC,CAC5B,IAAI6B,GAAY3B,EAAMC,EAAMC,CAC5B,IAAI0B,GAAYxB,EAAMC,EAAMC,CAC5Br1B,MAAKo2B,QAAUz3B,EAAEyE,KAAKoB,MAAMiyB,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAI32B,KAAKw1B,QAAS,CACjBx1B,KAAKw1B,QAAQgB,OAAS73B,CACtBqB,MAAKy1B,kBAAkBxyB,EAAIoC,CAC3BrF,MAAKy1B,kBAAkBvyB,EAAIoC,CAC3BtF,MAAKy1B,kBAAkBlvB,EAAIkuB,CAC3Bz0B,MAAKy1B,kBAAkBtsB,UAAUusB,SAAWrB,GAIvC8B,GAAA51B,UAAAo1B,wBAAP,WAEC31B,KAAKw1B,QAAU,GAAIU,EACnBl2B,MAAKw1B,QAAQI,aAAe,iBAE5B,OAAc51B,MAAKw1B,QAAQK,eAE7B,OAAAM,IAhH6B9D,EAkH7B5yB,GAAwBJ,QAAf82B,InB8vKNL,2CAA2C10B,UAAU20B,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAASx3B,EAAQkB,EAAOJ,GoBx3KtU,GAAO2L,GAAmBzM,EAAa,6CAKvC,IAAM8zB,GAAkB,WAMvB,QANKA,GAMOhQ,GAFLriB,KAAAkzB,cAAwB,IAI9BlzB,MAAKo0B,SAAW/R,EAGjB1hB,OAAAC,eAAWyxB,EAAA9xB,UAAA,mBpBg3KJM,IoBh3KP,WAEC,GAAIb,KAAKy1B,mBAAqB,KAAM,CACnCz1B,KAAKy1B,kBAAoBz1B,KAAK21B,yBAE9B31B,MAAKmzB,WAGN,MAAOnzB,MAAKy1B,mBpB+2KN10B,WAAY,KACZC,aAAc,MoB72KdqxB,GAAA9xB,UAAAuyB,QAAP,WAEC,KAAM,IAAI9nB,GAGJqnB,GAAA9xB,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAIjoB,GAGJqnB,GAAA9xB,UAAAiI,MAAP,WAEC,KAAM,IAAIwC,GAGJqnB,GAAA9xB,UAAAmzB,gBAAP,SAAuB5d,EAAmB6d,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAA9xB,UAAAuzB,gBAAP,SAAuBV,GAEtB,KAAM,IAAIpoB,GAGJqnB,GAAA9xB,UAAA4yB,SAAP,WAECnzB,KAAKkzB,cAAgB,MAGfb,GAAA9xB,UAAAykB,WAAP,WAEChlB,KAAKkzB,cAAgB,KAGfb,GAAA9xB,UAAAo1B,wBAAP,WAEC,KAAM,IAAI3qB,GAEZ,OAAAqnB,KAEA5yB,GAA4BJ,QAAnBgzB,IpBk2KNhU,6CAA6Cjd,YAAY4d,wCAAwC,SAASzgB,EAAQkB,EAAOJ,GAI5H,GqB36KM4L,GAAU,WAAhB,QAAMA,MAKSA,EAAA4rB,OAAgB,QAKhB5rB,GAAA+D,iBAA0B,gBAK1B/D,GAAA6rB,KAAc,MAC7B,OAAA7rB,KAEoBxL,GAAAJ,QAAX4L,OrB46KH8rB,wCAAwC,SAASx4B,EAAQkB,EAAOJ,GACtE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsBt8KtB,IAAO+xB,GAAmB7zB,EAAa,2CAGvC,IAAO8zB,GAAkB9zB,EAAa,+CAGtC,IAAMy4B,GAAU,SAAAt2B,GAASX,EAAnBi3B,EAAUt2B,EAIf,SAJKs2B,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEXv2B,EAAApB,KAAAU,KAAM,KAENA,MAAKk3B,UAAYD,EAIXD,EAAAz2B,UAAAiI,MAAP,WAEC,MAAO,IAAIwuB,GAAWh3B,KAAKk3B,WAIrBF,GAAAz2B,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOjzB,MAAKk3B,UAGNF,GAAAz2B,UAAAuzB,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAA6C,IA3ByB3E,EA6BzB5yB,GAAoBJ,QAAX23B,ItB67KNlB,2CAA2C10B,UAAU20B,+CAA+C,iDAAiDzT,wDAAwD,SAAS/jB,EAAQkB,EAAOJ,GACxO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuBl+KtB,IAAO82B,GAAa54B,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAO64B,GAAU74B,EAAe,oCAEhC,IAAOgN,GAAahN,EAAc,wCvBy/KlC,IuBh+KMiiB,GAAsB,SAAA9f,GAASX,EAA/BygB,EAAsB9f,EAuF3B,SAvFK8f,KAyFJ9f,EAAApB,KAAAU,KArFOA,MAAAq3B,eAAyB,IACzBr3B,MAAAs3B,QAAwB,GAAI9xB,MAC5BxF,MAAAu3B,kBAA2B,CAC3Bv3B,MAAAw3B,UAAiC,GAAIhyB,OAM7C7E,OAAAC,eAAW4f,EAAAjgB,UAAA,avB0+KJM,IuB1+KP,WAEC,MAAO2f,GAAuBtf,WvB2+KxBH,WAAY,KACZC,aAAc,MuBp9KrBL,QAAAC,eAAW4f,EAAAjgB,UAAA,iBvB4+KJM,IuB5+KP,WAEC,MAAOb,MAAKq3B,gBvB6+KN10B,IuB1+KP,SAAyBC,GAExB,GAAI5C,KAAKq3B,gBAAkBz0B,EAC1B,MAED5C,MAAKq3B,eAAiBz0B,CAEtB5C,MAAKkb,6BAA6Blb,KAAKyQ,SAAUzQ,KAAKyQ,SAASpE,uBAAyB,OvBy+KlFtL,WAAY,KACZC,aAAc,MuBp+KrBL,QAAAC,eAAW4f,EAAAjgB,UAAA,evB0+KJM,IuB1+KP,WAEC,MAAOb,MAAKw3B,UAAUj4B,QvB2+KhBwB,WAAY,KACZC,aAAc,MuB76Kdwf,GAAAjgB,UAAAk3B,SAAP,SAAgBpN,GAEf,MAAOrqB,MAAK03B,WAAWrN,EAAOrqB,KAAKw3B,UAAUj4B,QAGvCihB,GAAAjgB,UAAA8qB,gBAAP,SAAuBhB,EAAqBva,EAAc6nB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEzD,GAAItN,GAAS,KACZ,KAAM,IAAInrB,GAAM,kCAGjB,IAAImrB,EAAM5Z,SACT4Z,EAAM5Z,SAASmnB,sBAAsBvN,EAAM5Z,SAASC,cAAc2Z,GAEnE,IAAI1a,GAAa3P,KAAKs3B,QAAQ/3B,MAC9B,IAAI4G,GAAewJ,CAEnB,OAAOxJ,IACN,GAAInG,KAAKs3B,QAAQnxB,GAAS2J,EACzB,KAEF3J,IAEA,IAAIA,EAAQwJ,EAAK,CAEhB,GAAI3P,KAAKs3B,QAAQnxB,IAAU2J,EAAO,CACjC,GAAI6nB,EAAS,CACZ33B,KAAKsqB,cAAcnkB,OACb,CAENnG,KAAKqrB,gBAAgBrrB,KAAKw3B,UAAUrxB,GAAQnG,KAAKs3B,QAAQnxB,GAAS,EAAG,QAIvEnG,KAAKw3B,UAAUxa,OAAO7W,EAAO,EAAGkkB,EAChCrqB,MAAKs3B,QAAQta,OAAO7W,EAAO,EAAG2J,OACxB,CACN9P,KAAKw3B,UAAUnxB,KAAKgkB,EACpBrqB,MAAKs3B,QAAQjxB,KAAKyJ,EAElB9P,MAAKu3B,kBAAoBznB,EAAQ,EAGlCua,EAAMrP,WAAWhb,KAEjBA,MAAK0P,oBAEL,OAAO2a,GAgCD7J,GAAAjgB,UAAAm3B,WAAP,SAAkBrN,EAAqBlkB,GAEtC,MAAOnG,MAAKqrB,gBAAgBhB,EAAQlkB,EAAQnG,KAAKw3B,UAAUj4B,OAASS,KAAKs3B,QAAQnxB,GAASnG,KAAKu3B,kBAAmB,OAG5G/W,GAAAjgB,UAAAs3B,YAAP,WAAmB,GAAAC,KvBk8KZ,KuBl8KY,GAAAC,GAAA,EAAAA,EAAA9T,UAAA1kB,OAAAw4B,IAAkC,CAAlCD,EAAAC,EAAA,GAAA9T,UAAA8T,GAElB,GAAIpoB,GAAamoB,EAAWv4B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAK2Q,EAAK3Q,IAChCgB,KAAKy3B,SAASK,EAAW94B,IAMpBwhB,GAAAjgB,UAAAiI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAAyC,CAAzCA,EAAA,KAEZA,EAAuC1T,EAAAH,UAAMiI,MAAKlJ,KAAAU,KAACoU,GAAe,GAAIoM,GAEtEpM,GAAYoH,UAAYxb,KAAKwb,SAC7BpH,GAAY2Z,aAAe/tB,KAAK+tB,YAChC3Z,GAAY+G,cAAgBnb,KAAKmb,aAEjC,IAAIxL,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCoV,EAAYqjB,SAASz3B,KAAKw3B,UAAUx4B,GAAGwJ,QAExC,OAAO4L,GAeDoM,GAAAjgB,UAAAy3B,SAAP,SAAgB3N,GAEf,MAAOrqB,MAAKw3B,UAAUza,QAAQsN,IAAU,EAMlC7J,GAAAjgB,UAAA03B,oBAAP,WAECj4B,KAAKiB,SAEL,OAAOjB,KAAKoqB,YAAc,EACzBpqB,KAAKuqB,WAAW,GAAGtpB,UAGduf,GAAAjgB,UAAA23B,gBAAP,SAAuBpoB,GAEtB,MAAO9P,MAAKuqB,WAAWvqB,KAAKm4B,sBAAsBroB,IAY5C0Q,GAAAjgB,UAAAgqB,WAAP,SAAkBpkB,GAEjB,GAAIkkB,GAAsBrqB,KAAKw3B,UAAUrxB,EAEzC,IAAIkkB,GAAS,KACZ,KAAM,IAAI+M,GAAW,uDAEtB,OAAO/M,GAiBD7J,GAAAjgB,UAAA63B,eAAP,SAAsB9jB,GAErB,GAAI3E,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjC,GAAIgB,KAAKw3B,UAAUx4B,GAAGsV,MAAQA,EAC7B,MAAOtU,MAAKw3B,UAAUx4B,EAExB,OAAO,MAWDwhB,GAAAjgB,UAAAmQ,cAAP,SAAqB2Z,GAEpB,GAAIgO,GAAoBr4B,KAAKw3B,UAAUza,QAAQsN,EAE/C,IAAIgO,IAAe,EAClB,KAAM,IAAIlB,GAAc,+CAEzB,OAAOkB,GAGD7X,GAAAjgB,UAAAmqB,cAAP,SAAqBL,GAEpB,MAAOrqB,MAAKs3B,QAAQt3B,KAAK0Q,cAAc2Z,IAGjC7J,GAAAjgB,UAAA+3B,oBAAP,WAEC,MAAOt4B,MAAKu3B,kBAsBN/W,GAAAjgB,UAAAg4B,qBAAP,SAA4B5iB,GAE3B,MAAO,IAAInQ,OAsBLgb,GAAAjgB,UAAAoU,YAAP,SAAmB0V,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAInrB,GAAM,iCAEjBc,MAAKsqB,cAActqB,KAAK0Q,cAAc2Z,GAEtC,OAAOA,GAGD7J,GAAAjgB,UAAA2rB,mBAAP,SAA0Bpc,GAEzB,MAAO9P,MAAKsqB,cAActqB,KAAKm4B,sBAAsBroB,IAyB/C0Q,GAAAjgB,UAAA+pB,cAAP,SAAqBnkB,GAEpB,GAAIkkB,GAAsBrqB,KAAK43B,sBAAsBzxB,EAErDkkB,GAAMrP,WAAW,KAEjBhb,MAAK0P,oBAEL,OAAO2a,GAmBD7J,GAAAjgB,UAAAi4B,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIrB,GAAW,+CAEtB,IAAIsB,EAAW14B,KAAKw3B,UAAUj4B,OAC7B,KAAM,IAAI63B,GAAW,6CAEtB,KAAI,GAAIp4B,GAAoBy5B,EAAYz5B,EAAI05B,EAAU15B,IACrDgB,KAAK2U,YAAY3U,KAAKw3B,UAAUx4B,IA+B3BwhB,GAAAjgB,UAAAo4B,cAAP,SAAqBtO,EAAqBlkB,IAenCqa,GAAAjgB,UAAAq4B,aAAP,SAAoBC,EAAsBC,GAEzC94B,KAAK+4B,eAAe/4B,KAAK0Q,cAAcmoB,GAAS74B,KAAK0Q,cAAcooB,IAY7DtY,GAAAjgB,UAAAw4B,eAAP,SAAsBC,EAAeC,GAEpC,GAAInpB,GAAe9P,KAAKs3B,QAAQ2B,EAChC,IAAI5O,GAAsBrqB,KAAKw3B,UAAUwB,EAEzCh5B,MAAKqrB,gBAAgBrrB,KAAKw3B,UAAUyB,GAASj5B,KAAKs3B,QAAQ0B,GAC1Dh5B,MAAKqrB,gBAAgBhB,EAAOva,GAStB0Q,GAAAjgB,UAAA4U,kBAAP,WAECzU,EAAAH,UAAM4U,kBAAiB7V,KAAAU,KAEvB,IAAI0E,EACJ,IAAIiB,EACJ,IAAIuzB,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,IAAIhjB,EACJ,IAAI6T,GAAqBpqB,KAAKw3B,UAAUj4B,MAExC,IAAI6qB,EAAc,EAAG,CACpB,IAAK,GAAIprB,GAAW,EAAGA,EAAIorB,IAAeprB,EAAG,CAC5CuX,EAAMvW,KAAKw3B,UAAUx4B,GAAG6Q,OAAO7P,KAE/B,IAAIhB,GAAK,EAAG,CACXq6B,EAAO9iB,EAAInS,OAAS80B,EAAO3iB,EAAItT,EAC/Bq2B,GAAO/iB,EAAIlS,QAAU80B,EAAO5iB,EAAIrT,EAChCq2B,GAAOhjB,EAAIzG,OAASspB,EAAO7iB,EAAIhQ,OACzB,CACNZ,EAAM4Q,EAAInS,OAASM,EAAM6R,EAAItT,EAC7B,IAAIyB,EAAMw0B,EACTA,EAAOx0B,CACR,IAAIiB,EAAM0zB,EACTA,EAAO1zB,CAERA,GAAM4Q,EAAIlS,QAAUK,EAAM6R,EAAIrT,EAC9B,IAAIwB,EAAMy0B,EACTA,EAAOz0B,CACR,IAAIiB,EAAM2zB,EACTA,EAAO3zB,CAERA,GAAM4Q,EAAIzG,OAASpL,EAAM6R,EAAIhQ,EAC7B,IAAI7B,EAAM00B,EACTA,EAAO10B,CACR,IAAIiB,EAAM4zB,EACTA,EAAO5zB,GAIV3F,KAAKoV,YAAYhR,MAAQi1B,GAAQr5B,KAAKoV,YAAYnS,EAAIi2B,EACtDl5B,MAAKoV,YAAY/Q,OAASi1B,GAAQt5B,KAAKoV,YAAYlS,EAAIi2B,EACvDn5B,MAAKoV,YAAYtF,MAAQypB,GAAQv5B,KAAKoV,YAAY7O,EAAI6yB,OAChD,CACNp5B,KAAKoV,YAAYokB,YAQZhZ,GAAAjgB,UAAAyQ,0BAAP,WAECtQ,EAAAH,UAAMyQ,0BAAyB1R,KAAAU,KAE/B,IAAI2P,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKw3B,UAAUx4B,GAAGgS,4BAMbwP,GAAAjgB,UAAA2a,6BAAP,SAAoCtY,GAEnClC,EAAAH,UAAM2a,6BAA4B5b,KAAAU,KAAC4C,EAEnC,IAAI+M,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKw3B,UAAUx4B,GAAGkc,6BAA6Blb,KAAKq3B,gBAAkBr3B,KAAKqM,wBAMtEmU,GAAAjgB,UAAA0S,2BAAP,SAAkCrQ,GAEjClC,EAAAH,UAAM0S,2BAA0B3T,KAAAU,KAAC4C,EAEjC,IAAI+M,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKw3B,UAAUx4B,GAAGiU,2BAA2BjT,KAAKmM,sBAM7CqU,GAAAjgB,UAAAgR,0BAAP,SAAiC3O,EAAiB6Y,GAEjD/a,EAAAH,UAAMgR,0BAAyBjS,KAAAU,KAAC4C,EAAO6Y,EAEvC,IAAI9L,GAAa3P,KAAKw3B,UAAUj4B,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKw3B,UAAUx4B,GAAGuS,0BAA0BvR,KAAK0a,oBAAqBe,GAQhE+E,GAAAjgB,UAAAq3B,sBAAR,SAA8BzxB,GAE7B,GAAIkkB,GAAsBrqB,KAAKw3B,UAAUxa,OAAO7W,EAAO,GAAG,EAC1DnG,MAAKs3B,QAAQta,OAAO7W,EAAO,EAG3B,IAAIA,GAASnG,KAAKw3B,UAAUj4B,OAC3BS,KAAKu3B,kBAAoBv3B,KAAKs3B,QAAQnxB,EAAQ,GAAK,CAEpD,OAAOkkB,GAGA7J,GAAAjgB,UAAA43B,sBAAR,SAA8BroB,GAE7B,GAAI3J,GAAenG,KAAKs3B,QAAQva,QAAQjN,EAExC,IAAI3J,IAAU,EACb,KAAM,IAAIgxB,GAAc,8BAEzB,OAAOhxB,GAmBDqa,GAAAjgB,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAU0U,EAA2B6hB,GAA3B,GAAA7hB,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAA6hB,QAAA,GAAyB,CAAzBA,EAAA,MAElE,GAAGz5B,KAAK6L,YAAY,IAAM4tB,EAAU,MACpC,IAAGz5B,KAAKuZ,SAAS,MAAM,MACvB,KAAI,GAAIva,GAAW,EAAGA,EAAIgB,KAAKoqB,YAAaprB,IAC5C,CACC,GAAIqrB,GAAsBrqB,KAAKuqB,WAAWvrB,EAC1C,IAAI06B,GAAmBrP,EAAM/jB,aAAarD,EAAEC,EAAG0U,EAAW6hB,EAC1D,IAAGC,EAAU,CACZ,GAAIC,GAAiC35B,KAAK8L,OAC1C,IAAG6tB,EAAU,CACZ,IAAK,GAAIC,GAAgB,EAAGA,EAASD,EAAUp6B,OAAQq6B,IAAS,CAC/D,GAAIC,GAA2BF,EAAUC,EACzC,IAAGC,EAAWnlB,OAAO,CACpB,GAAIglB,GAAmBG,EAAWvzB,aAAarD,EAAEC,EAAG0U,EAAW,KAC/D,IAAG8hB,EAAU,MAAO,YAInB,CACH,MAAO,QAIV,MAAO,OAjrBMlZ,GAAAtf,UAAmB,gCAorBlC,OAAAsf,IAtrBqCjV,EAwrBL9L,GAAAJ,QAAvBmhB,IvB03KNsZ,uCAAuC14B,UAAU24B,+BAA+B34B,UAAU44B,oCAAoC54B,UAAUmJ,wCAAwC,0CAA0C0vB,wCAAwC,SAAS17B,EAAQkB,EAAOJ,GAC7R,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwBvlMtB,IAAO65B,GAAkB37B,EAAa,6CACtC,IAAO47B,GAAa57B,EAAc,wCAGlC;GAAO67B,GAAU77B,EAAe,oCAEhC,IAAO87B,GAAY97B,EAAe,sCAClC,IAAO+7B,GAAW/7B,EAAe,qCACjC,IAAOg8B,GAAWh8B,EAAe,qCAGjC,IAAOiiB,GAAsBjiB,EAAY,uDxBopMzC,IwBjlMMi8B,GAAM,SAAA95B,GAASX,EAAfy6B,EAAM95B,EA2HX,SA3HK85B,GA2HOC,EAAgCC,GA3H7C,GAAAlvB,GAAAxL,IA2Ha,IAAAy6B,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3Ch6B,EAAApB,KAAAU,KAEAA,MAAK26B,aAAeF,CACpBz6B,MAAK46B,YAAcF,CAEnB16B,MAAK66B,4BAA8B,SAACtsB,GAAsB,MAAA/C,GAAKsvB,mBAAmBvsB,GAClFvO,MAAK+6B,yBAA2B,SAACxsB,GAAqB,MAAA/C,GAAKwvB,gBAAgBzsB,GAC3EvO,MAAKi7B,4BAA8B,SAAC1sB,GAAqB,MAAA/C,GAAK0vB,mBAAmB3sB,GACjFvO,MAAKm7B,qBAAuB,SAAC5sB,GAAuB,MAAA/C,GAAK4vB,YAAY7sB,GACrEvO,MAAKq7B,sBAAwB,SAAC9sB,GAAsB,MAAA/C,GAAK8vB,aAAa/sB,IArFvE5N,OAAAC,eAAW45B,EAAAj6B,UAAA,WxBinMJM,IwBjnMP,WAEC,MAAOb,MAAKqkB,UxBknMNtjB,WAAY,KACZC,aAAc,MwBhmMrBL,QAAAC,eAAW45B,EAAAj6B,UAAA,qBxBmnMJM,IwBnnMP,WAEC,MAAOb,MAAKu7B,oBxBonMNx6B,WAAY,KACZC,aAAc,MwB/iMdw5B,GAAAj6B,UAAAi7B,MAAP,WAEC,IAAKx7B,KAAKy7B,eACT,MAED,IAAIz7B,KAAK26B,aAAc,CACtB,GAAIe,EACJA,GAAMxB,EAAmByB,YAAY37B,KAAK46B,YAC1Cc,GAAIE,qBAAqB57B,KAAKy7B,gBAG/Bz7B,KAAK67B,wBA0KCrB,GAAAj6B,UAAAu7B,KAAP,SAAYC,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/El8B,KAAKm8B,oBAAoBL,KAAKC,EAASC,EAASC,EAAIC,GAyF9C1B,GAAAj6B,UAAA67B,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzEl8B,KAAKm8B,oBAAoBC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAGlD1B,GAAAj6B,UAAA47B,kBAAR,WAEC,GAAIn8B,KAAK26B,aAAc,CACtB,GAAIe,GAAyBxB,EAAmByB,YAAY37B,KAAK46B,YACjE56B,MAAKy7B,eAAiBC,EAAIY,uBACpB,CACNt8B,KAAKy7B,eAAiB,GAAItB,GAG3Bn6B,KAAKy7B,eAAehsB,iBAAiB6qB,EAAYiC,kBAAmBv8B,KAAK66B,4BACzE76B,MAAKy7B,eAAehsB,iBAAiB2qB,EAAWoC,mBAAoBx8B,KAAKi7B,4BACzEj7B,MAAKy7B,eAAehsB,iBAAiB2qB,EAAWqC,eAAgBz8B,KAAK+6B,yBAGrE/6B,MAAKy7B,eAAeiB,kBAAkB18B,KAAKm7B,qBAC3Cn7B,MAAKy7B,eAAekB,uBAAuB38B,KAAKq7B,sBAEhD,OAAOr7B,MAAKy7B,eAGLjB,GAAAj6B,UAAAs7B,sBAAR,WAAA,GAAArwB,GAAAxL,IAGCA,MAAK48B,sBAAwB58B,KAAKy7B,qBAC3Bz7B,MAAKy7B,cACZz7B,MAAKy7B,eAAiB,IACtBz7B,MAAK68B,cAAgBC,WAAW,WAAOtxB,EAAKuxB,mBAAoB,KA0B1DvC,GAAAj6B,UAAAy8B,OAAP,YAccxC,GAAAyC,aAAd,SAA2BC,GAE1B/C,EAAc8C,aAAaC,GAYd1C,GAAA2C,cAAd,SAA4BC,GAE3BjD,EAAcgD,cAAcC,GAGrB5C,GAAAj6B,UAAAw8B,gBAAR,WAGC/8B,KAAK48B,sBAAsBrtB,oBAAoB+qB,EAAYiC,kBAAmBv8B,KAAK66B,4BACnF76B,MAAK48B,sBAAsBrtB,oBAAoB6qB,EAAWoC,mBAAoBx8B,KAAKi7B,4BACnFj7B,MAAK48B,sBAAsBrtB,oBAAoB6qB,EAAWqC,eAAgBz8B,KAAK+6B,yBAE/E,KAAK/6B,KAAK26B,aACT36B,KAAK48B,sBAAsBS,aAErBr9B,MAAK48B,qBACZ58B,MAAK48B,sBAAwB,IAE7BU,cAAat9B,KAAK68B,cAClB78B,MAAK68B,cAAgB,KAGdrC,GAAAj6B,UAAAy6B,gBAAR,SAAwBzsB,GAEvBvO,KAAK2b,cAAcpN,GAMZisB,GAAAj6B,UAAA66B,YAAR,SAAoB7sB,GAEnB,GAAIvO,KAAKqa,iBAAiBggB,EAAakD,UAAW,CACjDv9B,KAAK2b,cAAcpN,EACnB,OAAO,UACD,CACN,MAAO,QAODisB,GAAAj6B,UAAA+6B,aAAR,SAAqB/sB,GAEpB,GAAIvO,KAAKqa,iBAAiBkgB,EAAYiD,aAAc,CACnDx9B,KAAK2b,cAAcpN,EACnB,OAAO,UACD,CACN,MAAO,QAIDisB,GAAAj6B,UAAA26B,mBAAR,SAA2B3sB,GAE1BvO,KAAK2b,cAAcpN,GAMZisB,GAAAj6B,UAAAu6B,mBAAR,SAA2BvsB,GAE1BvO,KAAKqkB,SAA2B9V,EAAMkvB,OAEtC,IAAIz9B,KAAKqkB,SACRrkB,KAAKy3B,SAASz3B,KAAKqkB,SAEpBrkB,MAAK2b,cAAcpN,EAEnBvO,MAAK67B,wBAEP,OAAArB,IA3jBqBha,EA6jBL/gB,GAAAJ,QAAPm7B,IxB8hMNkD,oCAAoCt8B,UAAUu8B,sCAAsCv8B,UAAUw8B,qCAAqCx8B,UAAUy8B,qCAAqCz8B,UAAU08B,6CAA6C18B,UAAU28B,wCAAwC38B,UAAUkhB,uDAAuD,yDAAyD0b,uCAAuC,SAASz/B,EAAQkB,EAAOJ,GACvd,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB9qNtB,IAAOyjB,GAAevlB,EAAc,yCAGpC,IAAOiiB,GAAsBjiB,EAAY,uDACzC,IAAO+M,GAAU/M,EAAe,uCAChC,IAAO0/B,GAAQ1/B,EAAgB,wCAC/B,IAAO2/B,GAAS3/B,EAAe,yCAG/B,IAAM4/B,GAAK,SAAAz9B,GAASX,EAAdo+B,EAAKz9B,EASV,SATKy9B,KAWJz9B,EAAApB,KAAAU,KATOA,MAAAo+B,oBAAuC,GAAI54B,MAC3CxF,MAAAq+B,YAA+B,GAAI74B,MAIpCxF,MAAAs+B,iBAAmB,CAMzBt+B,MAAKu+B,WAAa,GAAIL,GAAU,GAAID,GAEpCj+B,MAAKw+B,iBAAmB,GAAIhe,EAE5BxgB,MAAKw+B,iBAAiBnhB,WAAWrd,KACjCA,MAAKw+B,iBAAiBliB,SAAW,IACjCtc,MAAKw+B,iBAAiBhjB,UAAYxb,KAAKu+B,WAGjCJ,EAAA59B,UAAAk+B,mBAAP,SAA0BC,GAEzB,GAAI1/B,GAAW,CACf,IAAI2Q,GAAa3P,KAAKq+B,YAAY9+B,MAElCm/B,GAAUjjB,MAAQzb,IAElBA,MAAKs+B,kBAEL,OAAOt/B,EAAI2Q,EACV3P,KAAKq+B,YAAYr/B,KAAK2/B,SAASD,GAGjC/9B,QAAAC,eAAWu9B,EAAA59B,UAAA,azB+pNJM,IyB/pNP,WAEC,MAAOb,MAAKw+B,iBAAiBhjB,WzBgqNvB7Y,IyB7pNP,SAAqBC,GAEpB5C,KAAKw+B,iBAAiBhjB,UAAY5Y,CAElC5C,MAAK2b,cAAc,GAAIrQ,GAAWA,EAAWszB,kBAAmB5+B,KAAKw+B,oBzB6pN/Dz9B,WAAY,KACZC,aAAc,MyB3pNdm9B,GAAA59B,UAAAy3B,SAAP,SAAgB3N,GAEf,MAAOrqB,MAAKw+B,iBAAiBxG,SAAS3N,GAGhC8T,GAAA59B,UAAAk3B,SAAP,SAAgBpN,GAEf,MAAOrqB,MAAKw+B,iBAAiB/G,SAASpN,GAGhC8T,GAAA59B,UAAAoU,YAAP,SAAmB0V,GAElBrqB,KAAKw+B,iBAAiB7pB,YAAY0V,GAG5B8T,GAAA59B,UAAA+pB,cAAP,SAAqBnkB,GAEpBnG,KAAKw+B,iBAAiBlU,cAAcnkB,GAI9Bg4B,GAAA59B,UAAAgqB,WAAP,SAAkBpkB,GAEjB,MAAOnG,MAAKw+B,iBAAiBjU,WAAWpkB,GAGzCxF,QAAAC,eAAWu9B,EAAA59B,UAAA,ezBmpNJM,IyBnpNP,WAEC,MAAOb,MAAKw+B,iBAAiBpU,azBopNvBrpB,WAAY,KACZC,aAAc,MyB/oNdm9B,GAAA59B,UAAAwb,oBAAP,SAA2BP,GAE1Bxb,KAAKo+B,oBAAoB/3B,KAAKmV,EAG9B,IAAIxb,KAAKq+B,YAAYthB,QAAQvB,KAAe,EAC3Cxb,KAAKq+B,YAAYh4B,KAAKmV,GAMjB2iB,GAAA59B,UAAAsb,sBAAP,SAA6BL,GAE5Bxb,KAAKo+B,oBAAoBphB,OAAOhd,KAAKo+B,oBAAoBrhB,QAAQvB,GAAY,EAG7E,IAAIxb,KAAKo+B,oBAAoBrhB,QAAQvB,KAAe,EACnDxb,KAAKq+B,YAAYrhB,OAAOhd,KAAKq+B,YAAYthB,QAAQvB,GAAY,GAEhE,OAAA2iB,IArGoBra,EAuGpBrkB,GAAeJ,QAAN8+B,IzBipNN1Z,yCAAyCrjB,UAAUkhB,uDAAuD,uDAAuDpD,uCAAuC,uCAAuC2f,wCAAwC,wCAAwCC,yCAAyC,2CAA2CC,sCAAsC,SAASxgC,EAAQkB,EAAOJ,G0B7vNpd,GAAO2/B,GAAQzgC,EAAgB,iCAI/B,IAAO4/B,GAAK5/B,EAAgB,sCAG5B,IAAO0gC,GAAa1gC,EAAc,wCAElC,IAAO2gC,GAAM3gC,EAAgB,qCAC7B,IAAO4gC,GAAW5gC,EAAe,wCACjC,IAAO+M,GAAU/M,EAAe,uCAChC,IAAO6gC,GAAa7gC,EAAc,0CAClC,IAAO8gC,GAAY9gC,EAAe,2CAElC,IAAM+gC,GAAI,WA0DT,QA1DKA,GA0DO/hB,EAAoB9B,EAAoB/B,GA1DrD,GAAAlO,GAAAxL,IA0DiC,IAAAyb,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAA/B,QAAA,GAAoB,CAApBA,EAAA,KAjC5C1Z,KAAAmS,OAAgB,CAChBnS,MAAAuQ,QAAiB,CAEjBvQ,MAAAu/B,MAAe,CACfv/B,MAAAw/B,WAAoB,CACpBx/B,MAAAy/B,iBAA0B,CAC1Bz/B,MAAA0/B,iBAA0B,CAE1B1/B,MAAA2/B,eAAyB,IACzB3/B,MAAA4/B,cAAwB,IAOxB5/B,MAAA6/B,aAAuB,GAAIZ,EAmBlCj/B,MAAK8/B,iCAAmC,SAACvxB,GAAqB,MAAA/C,GAAKu0B,wBAAwBxxB,GAC3FvO,MAAKggC,6BAA+B,SAACzxB,GAAsB,MAAA/C,GAAKy0B,oBAAoB1xB,GACpFvO,MAAKkgC,2BAA6B,SAAC3xB,GAAwB,MAAA/C,GAAK20B,kBAAkB5xB,GAClFvO,MAAKogC,0BAA4B,SAAC7xB,GAAwB,MAAA/C,GAAK60B,iBAAiB9xB,GAEhFvO,MAAKyb,MAAQA,GAAS,GAAI0iB,EAC1Bn+B,MAAK0Z,OAASA,GAAU,GAAIwlB,EAC5Bl/B,MAAKud,SAAWA,CAGhB+iB,UAASC,KAAKC,MAAMC,OAAS,KAE7BzgC,MAAK0gC,aAAeJ,SAASK,cAAc,MAC3C3gC,MAAK0gC,aAAaF,MAAM1qB,SAAW,UAEnCwqB,UAASC,KAAKK,YAAY5gC,KAAK0gC,aAE/B1gC,MAAK6gC,cAAgBxB,EAAa1D,aAClC37B,MAAK6gC,cAAcC,aAAa9gC,MAUzBs/B,EAAA/+B,UAAAw/B,wBAAR,SAAgCxxB,GAE/B,GAAIvO,KAAK+gC,SACR/gC,KAAKyR,QAAQ+J,UAAUwlB,iBAAiBhhC,KAAK+gC,UAK/CpgC,QAAAC,eAAW0+B,EAAA/+B,UAAA,U1BysNJM,I0BzsNP,WAEC,MAAOb,MAAKihC,U1B0sNNlgC,WAAY,KACZC,aAAc,M0BxsNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,U1B2sNJM,I0B3sNP,WAEC,MAAOb,MAAKkhC,U1B4sNNngC,WAAY,KACZC,aAAc,M0B1sNds+B,GAAA/+B,UAAA4gC,eAAP,SAAsB5S,GAErB,MAAOA,GAAcjZ,sBAAsB5C,gBAAgB1S,KAAKohC,UAAUphC,KAAKihC,SAAUjhC,KAAKkhC,SAAU,MAAOj+B,EAGzGq8B,GAAA/+B,UAAA8gC,eAAP,SAAsB9S,GAErB,MAAOA,GAAcjZ,sBAAsB5C,gBAAgB1S,KAAKohC,UAAUphC,KAAKihC,SAAUjhC,KAAKkhC,SAAU,MAAOh+B,EAMhHvC,QAAAC,eAAW0+B,EAAA/+B,UAAA,e1BysNJM,I0BzsNP,WAEC,MAAOb,MAAK0gC,c1B0sNN3/B,WAAY,KACZC,aAAc,M0BtsNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,Y1B4sNJM,I0B5sNP,WAEC,MAAOb,MAAKshC,Y1B6sNN3+B,I0B1sNP,SAAoBC,GAEnB,GAAI5C,KAAKshC,YAAc1+B,EACtB,MAED,IAAI5C,KAAKshC,WAAY,CACpBthC,KAAKshC,WAAWrgC,SAChBjB,MAAKshC,WAAW/xB,oBAAoB6vB,EAAcmC,iBAAkBvhC,KAAKkgC,2BACzElgC,MAAKshC,WAAW/xB,oBAAoB6vB,EAAcoC,gBAAiBxhC,KAAKogC,2BAGzEpgC,KAAKshC,WAAa1+B,CAElB5C,MAAKshC,WAAW7xB,iBAAiB2vB,EAAcmC,iBAAkBvhC,KAAKkgC,2BACtElgC,MAAKshC,WAAW7xB,iBAAiB2vB,EAAcoC,gBAAiBxhC,KAAKogC,0BAGrEpgC,MAAKyhC,kBAAoBzhC,KAAKshC,WAAWI,yBAEzC,IAAI1hC,KAAK+gC,SACR/gC,KAAKyhC,kBAAkB/nB,OAAS1Z,KAAK+gC,QAGtC/gC,MAAKshC,WAAWK,eAAkB3hC,KAAKy/B,kBAAoB,GAAM,KAAM,GACvEz/B,MAAKshC,WAAWM,eAAkB5hC,KAAKy/B,kBAAoB,EAAK,KAAM,GACtEz/B,MAAKshC,WAAWO,eAAiB7hC,KAAKy/B,iBAAmB,KAAM,GAC/Dz/B,MAAKshC,WAAWQ,kBAAoB9hC,KAAK0/B,gBACzC1/B,MAAKshC,WAAWl9B,MAAQpE,KAAKmS,MAC7BnS,MAAKshC,WAAWj9B,OAASrE,KAAKuQ,OAC9BvQ,MAAKshC,WAAWS,aAAe/hC,KAAKgiC,e1BqsN9BjhC,WAAY,KACZC,aAAc,M0BhsNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,gB1BssNJM,I0BtsNP,WAEC,MAAOb,MAAKgiC,e1BusNNr/B,I0BpsNP,SAAwBC,GAEvB,GAAI5C,KAAKgiC,eAAiBp/B,EACzB,MAED5C,MAAKgiC,cAAgBp/B,CAErB,IAAI5C,KAAKshC,WACRthC,KAAKshC,WAAWS,aAAe/hC,KAAKgiC,e1BmsN/BjhC,WAAY,KACZC,aAAc,M0B9rNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,mB1BosNJM,I0BpsNP,WAEC,MAAOb,MAAKy/B,kB1BqsNN98B,I0BlsNP,SAA2BC,GAE1B,GAAI5C,KAAKy/B,kBAAoB78B,EAC5B,MAED5C,MAAKy/B,iBAAmB78B,CAExB5C,MAAKshC,WAAWK,eAAkB/+B,GAAS,GAAM,KAAM,GACvD5C,MAAKshC,WAAWM,eAAkBh/B,GAAS,EAAK,KAAM,GACtD5C,MAAKshC,WAAWO,eAAiBj/B,EAAQ,KAAM,K1BisNzC7B,WAAY,KACZC,aAAc,M0B3rNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,mB1BksNJM,I0BlsNP,WAEC,MAAOb,MAAK0/B,kB1BusNN/8B,I0BhsNP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAK0/B,kBAAoB98B,EAC5B,MAED5C,MAAKshC,WAAWQ,kBAAoB9hC,KAAK0/B,iBAAmB98B,G1B+rNtD7B,WAAY,KACZC,aAAc,M0BzrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,U1BgsNJM,I0BhsNP,WAEC,MAAOb,MAAK+gC,U1BosNNp+B,I0B9rNP,SAAkBC,GAEjB,GAAI5C,KAAK+gC,UAAYn+B,EACpB,MAED,IAAI5C,KAAK+gC,SACR/gC,KAAK+gC,SAASxxB,oBAAoB4vB,EAAY8C,mBAAoBjiC,KAAKggC,6BAExEhgC,MAAK+gC,SAAWn+B,CAEhB,IAAI5C,KAAKyhC,kBACRzhC,KAAKyhC,kBAAkB/nB,OAAS1Z,KAAK+gC,QAEtC,IAAI/gC,KAAKyR,QACRzR,KAAKyR,QAAQ+J,UAAUwlB,iBAAiBhhC,KAAK+gC,SAE9C/gC,MAAK+gC,SAAStxB,iBAAiB0vB,EAAY8C,mBAAoBjiC,KAAKggC,6BACpEhgC,MAAK4/B,cAAgB,IACrB5/B,MAAK2/B,eAAiB,M1B0rNhB5+B,WAAY,KACZC,aAAc,M0BprNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,S1B2rNJM,I0B3rNP,WAEC,MAAOb,MAAKyR,S1B+rNN9O,I0BzrNP,SAAiBC,GAEhB,GAAI5C,KAAKyR,SAAW7O,EACnB,MAED,IAAI5C,KAAKyR,QACRzR,KAAKyR,QAAQlC,oBAAoBjE,EAAWszB,kBAAmB5+B,KAAK8/B,iCAErE9/B,MAAKyR,QAAU7O,CAEf5C,MAAKyR,QAAQhC,iBAAiBnE,EAAWszB,kBAAmB5+B,KAAK8/B,iCAEjE,IAAI9/B,KAAK+gC,SACR/gC,KAAKyR,QAAQ+J,UAAUwlB,iBAAiBhhC,KAAK+gC,W1BsrNxChgC,WAAY,KACZC,aAAc,M0BhrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,a1BurNJM,I0BvrNP,WAEC,MAAOb,MAAKw/B,Y1BwrNNz+B,WAAY,KACZC,aAAc,M0BnrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,S1ByrNJM,I0BzrNP,WAEC,MAAOb,MAAKmS,Q1B0rNNxP,I0BvrNP,SAAiBC,GAEhB,GAAI5C,KAAKmS,QAAUvP,EAClB,MAED5C,MAAKmS,OAASvP,CACd5C,MAAKkiC,aAAeliC,KAAKmS,OAAOnS,KAAKuQ,OACrCvQ,MAAK+gC,SAASoB,WAAWC,cAAgBpiC,KAAKkiC,YAC9CliC,MAAKshC,WAAWl9B,MAAQxB,CACxB5C,MAAK0gC,aAAaF,MAAMp8B,MAAQxB,EAAQ,M1BurNlC7B,WAAY,KACZC,aAAc,M0BlrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,U1BwrNJM,I0BxrNP,WAEC,MAAOb,MAAKuQ,S1ByrNN5N,I0BtrNP,SAAkBC,GAEjB,GAAI5C,KAAKuQ,SAAW3N,EACnB,MAED5C,MAAKuQ,QAAU3N,CACf5C,MAAKkiC,aAAeliC,KAAKmS,OAAOnS,KAAKuQ,OACrCvQ,MAAK+gC,SAASoB,WAAWC,cAAgBpiC,KAAKkiC,YAC9CliC,MAAKshC,WAAWj9B,OAASzB,CACzB5C,MAAK0gC,aAAaF,MAAMn8B,OAASzB,EAAQ,M1BsrNnC7B,WAAY,KACZC,aAAc,M0BjrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,e1BurNJM,I0BvrNP,WAEC,MAAOb,MAAK6/B,c1BwrNNl9B,I0BrrNP,SAAuBC,GAEtB,GAAI5C,KAAK6/B,cAAgBj9B,EACxB,MAED,IAAIA,GAAS,KACZ5C,KAAK6/B,aAAe,GAAIZ,OAExBj/B,MAAK6/B,aAAej9B,G1BqrNf7B,WAAY,KACZC,aAAc,M0BhrNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,K1BsrNJM,I0BtrNP,WAEC,MAAOb,MAAKshC,WAAWr+B,G1BurNjBN,I0BprNP,SAAaC,GAEZ,GAAI5C,KAAKshC,WAAWr+B,GAAKL,EACxB,MAED5C,MAAKshC,WAAWr+B,GAAKL,CACrB5C,MAAK0gC,aAAaF,MAAM/6B,KAAO7C,EAAQ,M1BorNjC7B,WAAY,KACZC,aAAc,M0B/qNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,K1BqrNJM,I0BrrNP,WAEC,MAAOb,MAAKshC,WAAWp+B,G1BsrNjBP,I0BnrNP,SAAaC,GAEZ,GAAI5C,KAAKshC,WAAWp+B,GAAKN,EACxB,MAED5C,MAAKshC,WAAWp+B,GAAKN,CACrB5C,MAAK0gC,aAAaF,MAAM56B,IAAMhD,EAAQ,M1BmrNhC7B,WAAY,KACZC,aAAc,M0B9qNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,W1BorNJM,I0BprNP,WAEC,MAAQb,MAAK0gC,aAAaF,MAAM6B,YAAc,W1BqrNxC1/B,I0BlrNP,SAAmBC,GAElB5C,KAAK0gC,aAAaF,MAAM6B,WAAaz/B,EAAO,UAAY,U1BorNlD7B,WAAY,KACZC,aAAc,M0B7qNrBL,QAAAC,eAAW0+B,EAAA/+B,UAAA,sB1BorNJM,I0BprNP,WAEC,MAAO,I1BsrNDE,WAAY,KACZC,aAAc,M0BhrNds+B,GAAA/+B,UAAA+hC,OAAP,WAECtiC,KAAKuiC,aAGLviC,MAAK+gC,SAASoB,WAAWC,cAAgBpiC,KAAKkiC,YAE9C,IAAIliC,KAAK4/B,cAAe,CACvB5/B,KAAK4/B,cAAgB,KACrB5/B,MAAK+gC,SAASoB,WAAWK,oBAAoBxiC,KAAKshC,WAAWmB,YAAYx/B,EAAGjD,KAAKshC,WAAWmB,YAAYv/B,EAAGlD,KAAKshC,WAAWmB,YAAYr+B,MAAOpE,KAAKshC,WAAWmB,YAAYp+B,QAG3K,GAAIrE,KAAK2/B,eAAgB,CACxB3/B,KAAK2/B,eAAiB,KACtB3/B,MAAK+gC,SAASoB,WAAWO,iBAAiB1iC,KAAKshC,WAAWqB,SAAS1/B,EAAGjD,KAAKshC,WAAWqB,SAASz/B,EAAGlD,KAAKshC,WAAWqB,SAASv+B,MAAOpE,KAAKshC,WAAWqB,SAASt+B,QAI5J,IAAKrE,KAAKgiC,cAAe,CACxB,GAAIhiC,KAAK4iC,gBAAkB5iC,KAAK0gC,cAAgB1gC,KAAK6gC,cAAcgC,cAAgB7iC,KAAK6gC,cAAciC,cACrG9iC,KAAK6gC,cAAckC,kBAAoB/iC,KAAKgjC,YAAYC,iBAAiBjjC,KAAKihC,SAAUjhC,KAAKkhC,SAAUlhC,KAExGA,MAAK6gC,cAAcqC,gBAAgBljC,KAAK4iC,gBAMzC5iC,KAAKyhC,kBAAkBjoB,OAGvBxZ,MAAKyR,QAAQgtB,mBAAmBz+B,KAAKyhC,kBAGrCzhC,MAAKshC,WAAWgB,OAAOtiC,KAAKyhC,mBAMtBnC,GAAA/+B,UAAAgiC,YAAP,WAEC,GAAIY,GAAcnE,GAElB,IAAIh/B,KAAKu/B,OAAS,EACjBv/B,KAAKu/B,MAAQ4D,CAEdnjC,MAAKw/B,WAAa2D,EAAOnjC,KAAKu/B,KAC9Bv/B,MAAKu/B,MAAQ4D,EAMP7D,GAAA/+B,UAAAU,QAAP,WAECjB,KAAKshC,WAAWrgC,SAGhBjB,MAAK6gC,cAAcuC,eAAepjC,KAKlCA,MAAK6gC,cAAgB,IAGrB7gC,MAAKshC,WAAa,IAClBthC,MAAKyhC,kBAAoB,KAM1B9gC,QAAAC,eAAW0+B,EAAA/+B,UAAA,oB1BiqNJM,I0BjqNP,WAEC,MAAOb,MAAKyhC,mB1BkqNN1gC,WAAY,KACZC,aAAc,M0B7pNbs+B,GAAA/+B,UAAA0/B,oBAAR,SAA4B1xB,GAE3BvO,KAAK4/B,cAAgB,IACrB5/B,MAAK2/B,eAAiB,KAMfL,GAAA/+B,UAAA4/B,kBAAR,SAA0B5xB,GAEzBvO,KAAK2/B,eAAiB,KAMfL,GAAA/+B,UAAA8/B,iBAAR,SAAyB9xB,GAExBvO,KAAK4/B,cAAgB,KAGfN,GAAA/+B,UAAA8iC,QAAP,SAAeC,GAEd,GAAI97B,GAAaxH,KAAK+gC,SAASsC,QAAQC,EACvC97B,GAAEvE,EAAIuE,EAAEvE,EAAEjD,KAAKshC,WAAWqB,SAASv+B,MAAM,EAAIpE,KAAKmS,OAAOnS,KAAK+gC,SAASoB,WAAWoB,OAClF/7B,GAAEtE,EAAIsE,EAAEtE,EAAElD,KAAKshC,WAAWqB,SAASt+B,OAAO,EAAIrE,KAAKuQ,QAAQvQ,KAAK+gC,SAASoB,WAAWqB,OAEpF,OAAOh8B,GAGD83B,GAAA/+B,UAAA6gC,UAAP,SAAiBqC,EAAWC,EAAWC,GAEtC,MAAO3jC,MAAK+gC,SAASK,UAAU,GAAGqC,EAAKzjC,KAAKmS,OAAOnS,KAAK+gC,SAASoB,WAAWoB,SAASvjC,KAAKshC,WAAWqB,SAASv+B,MAAO,GAAGs/B,EAAK1jC,KAAKuQ,QAAQvQ,KAAK+gC,SAASoB,WAAWqB,SAASxjC,KAAKshC,WAAWqB,SAASt+B,OAAQs/B,GAIvMrE,GAAA/+B,UAAAqjC,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAO3jC,MAAK+gC,SAAS6C,QAAQH,EAAG,EAAIzjC,KAAKmS,QAAQnS,KAAKmS,QAASuxB,EAAG,EAAI1jC,KAAKuQ,SAASvQ,KAAKuQ,QAASozB,GAiC5FrE,GAAA/+B,UAAAsjC,eAAP,WAEC,IAAK7jC,KAAKgiC,cAAe,CACxB,GAAIhiC,KAAK0gC,cAAgB1gC,KAAK6gC,cAAcgC,YAC3C7iC,KAAK6gC,cAAckC,kBAAoB/iC,KAAKgjC,YAAYC,iBAAiBjjC,KAAKihC,SAAUjhC,KAAKkhC,SAAUlhC,UAClG,CACN,GAAI8jC,GAAqC9jC,KAAKgjC,YAAYC,iBAAiBjjC,KAAKihC,SAAUjhC,KAAKkhC,SAAUlhC,KAEzG,IAAIA,KAAK+jC,aAAe/jC,KAAK6gC,cAAckC,mBAAqB,MAAQe,EAAgBE,iBAAmBhkC,KAAK6gC,cAAckC,kBAAkBiB,iBAC/IhkC,KAAK6gC,cAAckC,kBAAoBe,GAG3C,OAAAxE,KAEA7/B,GAAcJ,QAALigC,I1BqoNN2E,iCAAiC7iC,UAAU48B,sCAAsC,sCAAsCkG,qCAAqC,qCAAqCC,wCAAwC,wCAAwCC,0CAA0C,0CAA0CllB,uCAAuC,uCAAuCmlB,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAAShmC,EAAQkB,EAAOJ,G2BluOvqB,GAAO2L,GAAmBzM,EAAY,6CAItC,IAAMimC,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLzkC,KAAA0kC,aAAuB,IAK7B1kC,MAAKykC,aAAeA,EAGdD,EAAAjkC,UAAAokC,cAAP,WAEC,GAAI3kC,KAAK4kC,eACR5kC,KAAK4kC,eAAevpB,sBAGtB1a,QAAAC,eAAW4jC,EAAAjkC,UAAA,gB3B0tOJM,I2B1tOP,WAEC,MAAOb,MAAK4kC,gB3B2tONjiC,I2BxtOP,SAAwBqN,GAEvB,GAAIhQ,KAAK4kC,gBAAkB50B,EAC1B,MAED,IAAIhQ,KAAK4kC,gBAAkB5kC,KAAK0kC,aAC/B1kC,KAAK4kC,eAAexoB,aAAe,IAEpCpc,MAAK4kC,eAAiB50B,CAEtB,IAAIhQ,KAAK4kC,gBAAkB5kC,KAAK0kC,aAC/B1kC,KAAK4kC,eAAexoB,aAAepc,IAEpCA,MAAK2kC,iB3BqtOC5jC,WAAY,KACZC,aAAc,M2BntOrBL,QAAAC,eAAW4jC,EAAAjkC,UAAA,c3BstOJM,I2BttOP,WAEC,MAAOb,MAAK0kC,c3ButON/hC,I2BptOP,SAAsBqN,GAErB,GAAIhQ,KAAK0kC,cAAgB10B,EACxB,MAEDhQ,MAAK0kC,aAAe10B,CAEpB,IAAIhQ,KAAK4kC,eAAgB,CACxB,GAAI5kC,KAAK0kC,aACR1kC,KAAK4kC,eAAexoB,aAAepc,SAEnCA,MAAK4kC,eAAexoB,aAAe,O3BotO/Brb,WAAY,KACZC,aAAc,M2BjtOdwjC,GAAAjkC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAI75B,GAGJw5B,GAAAjkC,UAAA8b,iBAAP,WAEC,GAAIrc,KAAK8kC,mBAAqB9kC,KAAK0kC,aAAc,CAChD1kC,KAAK8kC,kBAAoB,KACzB9kC,MAAK2kC,iBAGR,OAAAH,KAEA/kC,GAAwBJ,QAAfmlC,I3BmtONnmB,6CAA6Cjd,YAAY2jC,wDAAwD,SAASxmC,EAAQkB,EAAOJ,GAC5I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4BpyOtB,IAAOsK,GAAUpM,EAAc,kCAE/B,IAAOimC,GAAcjmC,EAAa,gD5B2yOlC,I4BnyOMymC,GAAqB,SAAAtkC,GAASX,EAA9BilC,EAAqBtkC,EA6I1B,SA7IKskC,GA6IOP,EAAmCQ,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjK5kC,EAAApB,KAAAU,KAAMykC,EA7IAzkC,MAAAulC,kBAA2B,CAC1BvlC,MAAAwlC,mBAA4B,EAE5BxlC,MAAAylC,UAAmB,CACnBzlC,MAAA0lC,WAAoB,EACpB1lC,MAAA2lC,eAAwB,EACxB3lC,MAAA4lC,cAAuB,EACvB5lC,MAAA6lC,OAAgB,CAChB7lC,MAAA8lC,eAAwB,CACxB9lC,MAAA+lC,iBAA0B,CAC1B/lC,MAAAgmC,cAAwB,KAEzBhmC,MAAAimC,IAAc,KAmIpBjmC,MAAKilC,SAAWA,CAChBjlC,MAAKklC,UAAYA,CACjBllC,MAAKmlC,aAAeA,CACpBnlC,MAAKolC,aAAeA,CACpBplC,MAAKqlC,MAAQA,CACbrlC,MAAKslC,aAAeA,CAGpBtlC,MAAKulC,kBAAoBvlC,KAAKylC,SAC9BzlC,MAAKwlC,mBAAqBxlC,KAAK0lC,WAlIhC/kC,OAAAC,eAAWokC,EAAAzkC,UAAA,S5BuzOJM,I4BvzOP,WAEC,MAAOb,MAAK6lC,Q5BwzONljC,I4BrzOP,SAAiBqN,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIhQ,KAAK6lC,QAAU71B,EAClB,MAEDhQ,MAAK6lC,OAAS71B,CAEdhQ,MAAK2kC,iB5BmzOC5jC,WAAY,KACZC,aAAc,M4B9yOrBL,QAAAC,eAAWokC,EAAAzkC,UAAA,Y5BozOJM,I4BpzOP,WAEC,MAAOb,MAAKylC,W5BqzON9iC,I4BlzOP,SAAoBqN,GAEnB,GAAIhQ,KAAKylC,WAAaz1B,EACrB,MAEDhQ,MAAKylC,UAAYz1B,CAEjBhQ,MAAK2kC,iB5BizOC5jC,WAAY,KACZC,aAAc,M4B5yOrBL,QAAAC,eAAWokC,EAAAzkC,UAAA,a5BkzOJM,I4BlzOP,WAEC,MAAOb,MAAK0lC,Y5BmzON/iC,I4BhzOP,SAAqBqN,GAEpBA,EAAM5M,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe51B,GAEhE,IAAIhQ,KAAK0lC,YAAc11B,EACtB,MAEDhQ,MAAK0lC,WAAa11B,CAElBhQ,MAAK2kC,iB5B8yOC5jC,WAAY,KACZC,aAAc,M4BvyOrBL,QAAAC,eAAWokC,EAAAzkC,UAAA,gB5B+yOJM,I4B/yOP,WAEC,MAAOb,MAAK2lC,e5BgzONhjC,I4B7yOP,SAAwBqN,GAEvB,GAAIhQ,KAAK2lC,eAAiB31B,EACzB,MAEDhQ,MAAK2lC,cAAgB31B,CAErBhQ,MAAKklC,UAAY9hC,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe5lC,KAAK0lC,c5B4yO1E3kC,WAAY,KACZC,aAAc,M4BryOrBL,QAAAC,eAAWokC,EAAAzkC,UAAA,gB5B6yOJM,I4B7yOP,WAEC,MAAOb,MAAK4lC,e5B8yONjjC,I4B3yOP,SAAwBqN,GAEvB,GAAIhQ,KAAK4lC,eAAiB51B,EACzB,MAEDhQ,MAAK4lC,cAAgB51B,CAErBhQ,MAAKklC,UAAY9hC,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe5lC,KAAK0lC,c5B0yO1E3kC,WAAY,KACZC,aAAc,M4BpyOrBL,QAAAC,eAAWokC,EAAAzkC,UAAA,gB5B0yOJM,I4B1yOP,WAEC,MAAOb,MAAKgmC,e5B2yONrjC,I4BxyOP,SAAwBqN,GAEvB,GAAIhQ,KAAKgmC,eAAiBh2B,EACzB,MAEDhQ,MAAKgmC,cAAgBh2B,CAErBhQ,MAAK2kC,iB5BuyOC5jC,WAAY,KACZC,aAAc,M4BvwOdgkC,GAAAzkC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI7kC,KAAK0lC,YAAc1lC,KAAKwlC,oBAAsBxlC,KAAKylC,WAAazlC,KAAKulC,kBAAmB,CAE3FvlC,KAAK8kC,kBAAoB,IAEzB,IAAI9kC,KAAKgmC,cAAe,CACvB,GAAIhmC,KAAKylC,UAAY,EAAG,CACvBzlC,KAAKulC,mBAAqBvlC,KAAKylC,UAAU,IAAM,IAAMzlC,KAAKylC,SAC1DzlC,MAAKylC,UAAYzlC,KAAKylC,UAAU,IAAM,QAChC,CACNzlC,KAAKulC,mBAAqBvlC,KAAKylC,UAAU,IAAMzlC,KAAKylC,SACpDzlC,MAAKylC,UAAYzlC,KAAKylC,UAAU,IAGjC,MAAOzlC,KAAKylC,UAAYzlC,KAAKulC,mBAAqB,IACjDvlC,KAAKulC,mBAAqB,GAE3B,OAAOvlC,KAAKylC,UAAYzlC,KAAKulC,kBAAoB,IAChDvlC,KAAKulC,mBAAqB,IAG5B,GAAIV,EAAa,CAChB7kC,KAAKwlC,qBAAuBxlC,KAAK0lC,WAAa1lC,KAAKwlC,qBAAqBxlC,KAAKqlC,MAAQ,EACrFrlC,MAAKulC,oBAAsBvlC,KAAKylC,UAAYzlC,KAAKulC,oBAAoBvlC,KAAKqlC,MAAQ,OAC5E,CACNrlC,KAAKwlC,mBAAqBxlC,KAAK0lC,UAC/B1lC,MAAKulC,kBAAoBvlC,KAAKylC,UAI/B,GAAKriC,KAAKmyB,IAAIv1B,KAAKklC,UAAYllC,KAAKwlC,oBAAsB,KAAUpiC,KAAKmyB,IAAIv1B,KAAKylC,UAAYzlC,KAAKulC,mBAAqB,IAAO,CAC9HvlC,KAAKwlC,mBAAqBxlC,KAAK0lC,UAC/B1lC,MAAKulC,kBAAoBvlC,KAAKylC,WAIhCzlC,KAAKykC,aAAat0B,UAAYnQ,KAAKwlC,kBACnCxlC,MAAKykC,aAAar0B,UAAYpQ,KAAKulC,iBAEnC,IAAIvlC,KAAK8lC,eAAgB,CACxB,GAAI9lC,KAAKimC,IAAK,CACbjmC,KAAKykC,aAAat7B,UAAUimB,YAAYpvB,KAAK8lC,oBACvC,CACN9lC,KAAKykC,aAAaxhC,GAAKjD,KAAK8lC,eAAe1iC,KAAK8iC,IAAIlmC,KAAKylC,UAAU96B,EAAWsH,mBAC9EjS,MAAKykC,aAAal+B,GAAKvG,KAAK8lC,eAAe1iC,KAAK+iC,IAAInmC,KAAKylC,UAAU96B,EAAWsH,oBAE/EjS,KAAK8lC,eAAiB,EAGvB,GAAI9lC,KAAK+lC,iBAAkB,CAC1B/lC,KAAKykC,aAAat7B,UAAUomB,UAAUvvB,KAAK+lC,iBAC3C/lC,MAAK+lC,iBAAmB,GAKnBf,GAAAzkC,UAAA6lC,cAAP,SAAqBp2B,GAEpB,GAAIA,GAAO,EACV,MAEDhQ,MAAK8lC,gBAAkB91B,CAEvBhQ,MAAK2kC,gBAGCK,GAAAzkC,UAAA8lC,gBAAP,SAAuBr2B,GAEtB,GAAIA,GAAO,EACV,MAEDhQ,MAAK+lC,kBAAoB/1B,CAEzBhQ,MAAK2kC,gBAGP,OAAAK,IArPoCR,EAuPpC/kC,GAA+BJ,QAAtB2lC,I5BswONxmB,kCAAkCpd,UAAUmjC,gDAAgD,kDAAkD+B,mDAAmD,SAAS/nC,EAAQkB,EAAOJ,GAC5N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6B3gPtB,IAAOkmC,GAAehoC,EAAa,iD7BohPnC,I6B5gPMioC,GAAgB,SAAA9lC,GAASX,EAAzBymC,EAAgB9lC,EAErB,SAFK8lC,GAEO/B,EAAmCgC,EAAmCvB,EAAuB3qB,GAA7F,GAAAkqB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAvB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA3qB,QAAA,GAAqB,CAArBA,EAAA,IAExG7Z,EAAApB,KAAAU,KAAMykC,EAAcgC,EAAc,EAAGvB,EAAW3qB,GAG1CisB,EAAAjmC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,IAAK7kC,KAAKymC,aACT,MAEDzmC,MAAKilC,SAAWjlC,KAAK0mC,eAAet2B,UAAY,GAChD1P,GAAAH,UAAM4c,OAAM7d,KAAAU,MAEd,OAAAwmC,IAf+BD,EAiB/B9mC,GAA0BJ,QAAjBmnC,I7B+gPNG,iDAAiD,mDAAmDA,kDAAkD,SAASpoC,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8B9iPtB,IAAOsK,GAAUpM,EAAc,kCAC/B,IAAOwM,GAAQxM,EAAe,gCAG9B,IAAOqoC,GAAgBroC,EAAa,kD9BojPpC,I8B7iPMgoC,GAAe,SAAA7lC,GAASX,EAAxBwmC,EAAe7lC,EA6NpB,SA7NK6lC,GA6NO9B,EAAmCgC,EAAmCxB,EAAqBC,EAAuB3qB,EAAwB4qB,EAA2BC,EAA0ByB,EAA2BC,EAA2BzB,EAAkB0B,EAAoBzB,GAA3R,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAA3qB,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAA4qB,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAyB,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAzB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAzB,QAAA,GAA4B,CAA5BA,EAAA,MAEtS5kC,EAAApB,KAAAU,KAAMykC,EAAcgC,EA7NdzmC,MAAAulC,kBAA2B,CAC3BvlC,MAAAwlC,mBAA4B,EAE3BxlC,MAAAylC,UAAmB,CACnBzlC,MAAA0lC,WAAoB,EACpB1lC,MAAAgnC,UAAmB,GACnBhnC,MAAAinC,cAAuBC,QACvBlnC,MAAAmnC,aAAsBD,QACtBlnC,MAAA2lC,eAAwB,EACxB3lC,MAAA4lC,cAAuB,EACvB5lC,MAAA6lC,OAAgB,CAChB7lC,MAAAonC,SAAkB,CAClBpnC,MAAAgmC,cAAwB,KACxBhmC,MAAAqnC,QAAmB,GAAIt8B,EAkN9B/K,MAAKua,SAAWA,CAChBva,MAAKilC,SAAWA,CAChBjlC,MAAKklC,UAAYA,CACjBllC,MAAK6mC,YAAgBA,GAAe,KAAQA,GAAeK,QAC3DlnC,MAAK8mC,YAAgBA,GAAe,KAAQA,EAAcI,QAC1DlnC,MAAKmlC,aAAeA,CACpBnlC,MAAKolC,aAAeA,CACpBplC,MAAKqlC,MAAQA,CACbrlC,MAAK+mC,QAAUA,CACf/mC,MAAKslC,aAAeA,CAGpBtlC,MAAKulC,kBAAoBvlC,KAAKylC,SAC9BzlC,MAAKwlC,mBAAqBxlC,KAAK0lC,WArNhC/kC,OAAAC,eAAW2lC,EAAAhmC,UAAA,S9B2kPJM,I8B3kPP,WAEC,MAAOb,MAAK6lC,Q9B4kPNljC,I8BzkPP,SAAiBqN,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIhQ,KAAK6lC,QAAU71B,EAClB,MAEDhQ,MAAK6lC,OAAS71B,CAEdhQ,MAAK2kC,iB9BukPC5jC,WAAY,KACZC,aAAc,M8BlkPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,Y9BwkPJM,I8BxkPP,WAEC,MAAOb,MAAKylC,W9BykPN9iC,I8BtkPP,SAAoBqN,GAEnBA,EAAM5M,KAAKuC,IAAI3F,KAAKinC,aAAc7jC,KAAKsB,IAAI1E,KAAKmnC,aAAcn3B,GAE9D,IAAIhQ,KAAKylC,WAAaz1B,EACrB,MAEDhQ,MAAKylC,UAAYz1B,CAEjBhQ,MAAK2kC,iB9BokPC5jC,WAAY,KACZC,aAAc,M8B/jPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,a9BqkPJM,I8BrkPP,WAEC,MAAOb,MAAK0lC,Y9BskPN/iC,I8BnkPP,SAAqBqN,GAEpBA,EAAM5M,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe51B,GAEhE,IAAIhQ,KAAK0lC,YAAc11B,EACtB,MAEDhQ,MAAK0lC,WAAa11B,CAElBhQ,MAAK2kC,iB9BikPC5jC,WAAY,KACZC,aAAc,M8B5jPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,Y9BkkPJM,I8BlkPP,WAEC,MAAOb,MAAKgnC,W9BmkPNrkC,I8BhkPP,SAAoBqN,GAEnB,GAAIhQ,KAAKgnC,WAAah3B,EACrB,MAEDhQ,MAAKgnC,UAAYh3B,CAEjBhQ,MAAK2kC,iB9B+jPC5jC,WAAY,KACZC,aAAc,M8BxjPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,e9BgkPJM,I8BhkPP,WAEC,MAAOb,MAAKinC,c9BikPNtkC,I8B9jPP,SAAuBqN,GAEtB,GAAIhQ,KAAKinC,cAAgBj3B,EACxB,MAEDhQ,MAAKinC,aAAej3B,CAEpBhQ,MAAKilC,SAAW7hC,KAAKuC,IAAI3F,KAAKinC,aAAc7jC,KAAKsB,IAAI1E,KAAKmnC,aAAcnnC,KAAKylC,a9B6jPvE1kC,WAAY,KACZC,aAAc,M8BtjPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,e9B8jPJM,I8B9jPP,WAEC,MAAOb,MAAKmnC,c9B+jPNxkC,I8B5jPP,SAAuBqN,GAEtB,GAAIhQ,KAAKmnC,cAAgBn3B,EACxB,MAEDhQ,MAAKmnC,aAAen3B,CAEpBhQ,MAAKilC,SAAW7hC,KAAKuC,IAAI3F,KAAKinC,aAAc7jC,KAAKsB,IAAI1E,KAAKmnC,aAAcnnC,KAAKylC,a9B2jPvE1kC,WAAY,KACZC,aAAc,M8BpjPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,gB9B4jPJM,I8B5jPP,WAEC,MAAOb,MAAK2lC,e9B6jPNhjC,I8B1jPP,SAAwBqN,GAEvB,GAAIhQ,KAAK2lC,eAAiB31B,EACzB,MAEDhQ,MAAK2lC,cAAgB31B,CAErBhQ,MAAKklC,UAAY9hC,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe5lC,KAAK0lC,c9ByjP1E3kC,WAAY,KACZC,aAAc,M8BljPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,gB9B0jPJM,I8B1jPP,WAEC,MAAOb,MAAK4lC,e9B2jPNjjC,I8BxjPP,SAAwBqN,GAEvB,GAAIhQ,KAAK4lC,eAAiB51B,EACzB,MAEDhQ,MAAK4lC,cAAgB51B,CAErBhQ,MAAKklC,UAAY9hC,KAAKuC,IAAI3F,KAAK2lC,cAAeviC,KAAKsB,IAAI1E,KAAK4lC,cAAe5lC,KAAK0lC,c9BujP1E3kC,WAAY,KACZC,aAAc,M8BhjPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,W9BwjPJM,I8BxjPP,WAEC,MAAOb,MAAKonC,U9ByjPNzkC,I8BtjPP,SAAmBqN,GAElB,GAAIhQ,KAAKonC,UAAYp3B,EACpB,MAEDhQ,MAAKonC,SAAWp3B,CAEhBhQ,MAAK2kC,iB9BqjPC5jC,WAAY,KACZC,aAAc,M8BhjPrBL,QAAAC,eAAW2lC,EAAAhmC,UAAA,gB9BsjPJM,I8BtjPP,WAEC,MAAOb,MAAKgmC,e9BujPNrjC,I8BpjPP,SAAwBqN,GAEvB,GAAIhQ,KAAKgmC,eAAiBh2B,EACzB,MAEDhQ,MAAKgmC,cAAgBh2B,CAErBhQ,MAAK2kC,iB9BmjPC5jC,WAAY,KACZC,aAAc,M8B/gPdulC,GAAAhmC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI7kC,KAAK0lC,YAAc1lC,KAAKwlC,oBAAsBxlC,KAAKylC,WAAazlC,KAAKulC,kBAAmB,CAE3FvlC,KAAK8kC,kBAAoB,IAEzB,IAAI9kC,KAAKgmC,cAAe,CACvB,GAAIhmC,KAAKylC,UAAY,EAAG,CACvBzlC,KAAKulC,mBAAqBvlC,KAAKylC,UAAU,IAAM,IAAMzlC,KAAKylC,SAC1DzlC,MAAKylC,UAAYzlC,KAAKylC,UAAU,IAAM,QAChC,CACNzlC,KAAKulC,mBAAqBvlC,KAAKylC,UAAU,IAAMzlC,KAAKylC,SACpDzlC,MAAKylC,UAAYzlC,KAAKylC,UAAU,IAGjC,MAAOzlC,KAAKylC,UAAYzlC,KAAKulC,mBAAqB,IACjDvlC,KAAKulC,mBAAqB,GAE3B,OAAOvlC,KAAKylC,UAAYzlC,KAAKulC,kBAAoB,IAChDvlC,KAAKulC,mBAAqB,IAG5B,GAAIV,EAAa,CAChB7kC,KAAKwlC,qBAAuBxlC,KAAK0lC,WAAa1lC,KAAKwlC,qBAAqBxlC,KAAKqlC,MAAQ,EACrFrlC,MAAKulC,oBAAsBvlC,KAAKylC,UAAYzlC,KAAKulC,oBAAoBvlC,KAAKqlC,MAAQ,OAC5E,CACNrlC,KAAKulC,kBAAoBvlC,KAAKylC,SAC9BzlC,MAAKwlC,mBAAqBxlC,KAAK0lC,WAIhC,GAAKtiC,KAAKmyB,IAAIv1B,KAAKklC,UAAYllC,KAAKwlC,oBAAsB,KAAUpiC,KAAKmyB,IAAIv1B,KAAKylC,UAAYzlC,KAAKulC,mBAAqB,IAAO,CAC9HvlC,KAAKwlC,mBAAqBxlC,KAAK0lC,UAC/B1lC,MAAKulC,kBAAoBvlC,KAAKylC,WAIhC,GAAI7vB,GAAgB5V,KAAiB,aAAGA,KAAKymC,aAAat9B,UAAU2M,SAAY9V,KAAmB,eAAGA,KAAKsnC,eAAiBtnC,KAAKunC,QACjIvnC,MAAKykC,aAAaxhC,EAAI2S,EAAI3S,EAAIjD,KAAKua,SAASnX,KAAK8iC,IAAIlmC,KAAKulC,kBAAkB56B,EAAWsH,oBAAoB7O,KAAK+iC,IAAInmC,KAAKwlC,mBAAmB76B,EAAWsH,mBACvJjS,MAAKykC,aAAavhC,EAAI0S,EAAI1S,EAAIlD,KAAKua,SAASnX,KAAK8iC,IAAIlmC,KAAKwlC,mBAAmB76B,EAAWsH,oBAAoBjS,KAAK+mC,OACjH/mC,MAAKykC,aAAal+B,EAAIqP,EAAIrP,EAAIvG,KAAKua,SAASnX,KAAK+iC,IAAInmC,KAAKulC,kBAAkB56B,EAAWsH,oBAAoB7O,KAAK+iC,IAAInmC,KAAKwlC,mBAAmB76B,EAAWsH,mBAEvJjS,MAAKqnC,QAAQpkC,GAAKG,KAAK8iC,IAAIlmC,KAAKulC,kBAAkB56B,EAAWsH,oBAAoB7O,KAAK8iC,IAAIlmC,KAAKwlC,mBAAmB76B,EAAWsH,mBAC7HjS,MAAKqnC,QAAQnkC,EAAIE,KAAK+iC,IAAInmC,KAAKwlC,mBAAmB76B,EAAWsH,mBAC7DjS,MAAKqnC,QAAQ9gC,GAAKnD,KAAK+iC,IAAInmC,KAAKulC,kBAAkB56B,EAAWsH,oBAAoB7O,KAAK8iC,IAAIlmC,KAAKwlC,mBAAmB76B,EAAWsH,mBAE7H,IAAIjS,KAAK4kC,eAAgB,CACxB,GAAI5kC,KAAKwnC,iBACRxnC,KAAK4kC,eAAe9sB,OAAO9X,KAAKwnC,iBAAkBxnC,KAAKqnC,aACnD,IAAIrnC,KAAK0mC,eACb1mC,KAAK4kC,eAAe9sB,OAAO9X,KAAK0mC,eAAejrB,MAAOzb,KAAK0mC,eAAe7sB,cAAgB7Z,KAAK0mC,eAAev9B,UAAU2M,SAAU9V,KAAKqnC,UAG3I,OAAAd,IAjT8BK,EAmT9BnnC,GAAyBJ,QAAhBknC,I9BuhPN/nB,kCAAkCpd,UAAUyd,gCAAgCzd,UAAUqmC,kDAAkD,oDAAoDA,mDAAmD,SAASlpC,EAAQkB,EAAOJ,GAC1Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+B11PtB,IAAO0K,GAAQxM,EAAe,gCAG9B,IAAOimC,GAAcjmC,EAAa,gDAClC,IAAO8M,GAAkB9M,EAAY,+CAErC,IAAMqoC,GAAgB,SAAAlmC,GAASX,EAAzB6mC,EAAgBlmC,EAQrB,SARKkmC,GAQOnC,EAAmCgC,GARhD,GAAAj7B,GAAAxL,IAQa,IAAAykC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAE9C/lC,EAAApB,KAAAU,KAAMykC,EANAzkC,MAAAunC,SAAoB,GAAIx8B,GAAS,EAAK,EAAK,EAQjD/K,MAAK0nC,+BAAiC,SAACn5B,GAA6B,MAAA/C,GAAKm8B,sBAAsBp5B,GAE/F,IAAIk4B,EACHzmC,KAAKymC,aAAeA,MAEpBzmC,MAAKsnC,eAAiB,GAAIv8B,GAG5BpK,OAAAC,eAAWgmC,EAAArmC,UAAA,kB/Bo1PJM,I+Bp1PP,WAEC,MAAOb,MAAKwnC,kB/Bq1PN7kC,I+Bl1PP,SAA0BqN,GAEzB,GAAIhQ,KAAK0mC,eAAgB,CACxB1mC,KAAK0mC,eAAen3B,oBAAoBlE,EAAmB6I,uBAAwBlU,KAAK0nC,+BACxF1nC,MAAK0mC,eAAiB,KAGvB1mC,KAAKwnC,iBAAmBx3B,CACxBhQ,MAAK2kC,iB/Bk1PC5jC,WAAY,KACZC,aAAc,M+Bh1PrBL,QAAAC,eAAWgmC,EAAArmC,UAAA,gB/Bm1PJM,I+Bn1PP,WAEC,MAAOb,MAAK0mC,gB/Bo1PN/jC,I+Bj1PP,SAAwBqN,GAEvB,GAAIhQ,KAAKwnC,iBACRxnC,KAAKwnC,iBAAmB,IAEzB,IAAIxnC,KAAK0mC,gBAAkB12B,EAC1B,MAED,IAAIhQ,KAAK0mC,eACR1mC,KAAK0mC,eAAen3B,oBAAoBlE,EAAmB6I,uBAAwBlU,KAAK0nC,+BAEzF1nC,MAAK0mC,eAAiB12B,CAEtB,IAAIhQ,KAAK0mC,eACR1mC,KAAK0mC,eAAej3B,iBAAiBpE,EAAmB6I,uBAAwBlU,KAAK0nC,+BAEtF1nC,MAAK2kC,iB/B60PC5jC,WAAY,KACZC,aAAc,M+B10Pd4lC,GAAArmC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI7kC,KAAK4kC,eAAgB,CACxB,GAAI5kC,KAAKwnC,iBACRxnC,KAAK4kC,eAAe9sB,OAAO9X,KAAKwnC,sBAC5B,IAAIxnC,KAAK0mC,eACb1mC,KAAK4kC,eAAe9sB,OAAO9X,KAAK0mC,eAAejrB,MAAOzb,KAAK0mC,eAAe7sB,cAAgB7Z,KAAK0mC,eAAev9B,UAAU2M,WAInH8wB,GAAArmC,UAAAonC,sBAAR,SAA8Bp5B,GAE7BvO,KAAK2kC,gBAEP,OAAAiC,IA3E+BpC,EA6E/B/kC,GAA0BJ,QAAjBunC,I/B60PN/nB,gCAAgCzd,UAAUmjC,gDAAgD,gDAAgDtlB,+CAA+C,iDAAiD2oB,mDAAmD,SAASrpC,EAAQkB,EAAOJ,GACxT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgCr6PtB,IAAO0K,GAAQxM,EAAe,gCAG9B,IAAOqoC,GAAgBroC,EAAa,kDhC26PpC,IgCp6PMspC,GAAgB,SAAAnnC,GAASX,EAAzB8nC,EAAgBnnC,EA+BrB,SA/BKmnC,GA+BOpD,EAAmCgC,EAAmCqB,EAAsBC,EAAkBC,GAA9G,GAAAvD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAqB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzHtnC,EAAApB,KAAAU,KAAMykC,EAAcgC,EAJdzmC,MAAAioC,eAA0B,GAAIl9B,GAAS,EAAG,KAAM,IAMtD/K,MAAK8nC,UAAYA,CACjB9nC,MAAKgoC,QAAUA,CACfhoC,MAAK+nC,KAAOA,CAEZ/nC,MAAKkoC,UAAY,GAAIn9B,EACrB/K,MAAKmoC,IAAM,GAAIp9B,EACf/K,MAAKooC,SAAW,GAAIr9B,EACpB/K,MAAKqoC,OAAS,GAAIt9B,EAClB/K,MAAKsoC,cAAgB,GAAIv9B,EACzB/K,MAAKuoC,iBAAmB,GAAIx9B,GAItB88B,EAAAtnC,UAAA4c,OAAP,SAAc0nB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI2D,EAEJ,KAAKxoC,KAAK0mC,iBAAmB1mC,KAAK4kC,eACjC,MAED5kC;KAAK8kC,kBAAoB,IAEzB0D,GAAOxoC,KAAK0mC,eAAev9B,UAAUusB,SAAS+S,qBAAqBzoC,KAAKioC,eACxEjoC,MAAKuoC,iBAAiBtlC,EAAIjD,KAAK0mC,eAAezjC,EAAIulC,EAAKvlC,CACvDjD,MAAKuoC,iBAAiBrlC,EAAIlD,KAAK0mC,eAAexjC,EAAIslC,EAAKtlC,CACvDlD,MAAKuoC,iBAAiBhiC,EAAIvG,KAAK0mC,eAAengC,EAAIiiC,EAAKjiC,CAEvDvG,MAAKooC,SAAWpoC,KAAK4kC,eAAez7B,UAAU2M,SAAS4yB,IAAI1oC,KAAKuoC,iBAChEvoC,MAAKooC,SAASO,SAAS3oC,KAAK8nC,UAE5B9nC,MAAKmoC,IAAIv3B,SAAS5Q,KAAKkoC,UACvBloC,MAAKmoC,IAAIQ,QAAQ3oC,KAAKgoC,QAEtBhoC,MAAKqoC,OAAOplC,EAAIjD,KAAKooC,SAASnlC,EAAIjD,KAAKmoC,IAAIllC,CAC3CjD,MAAKqoC,OAAOnlC,EAAIlD,KAAKooC,SAASllC,EAAIlD,KAAKmoC,IAAIjlC,CAC3ClD,MAAKqoC,OAAO9hC,EAAIvG,KAAKooC,SAAS7hC,EAAIvG,KAAKmoC,IAAI5hC,CAE3CvG,MAAKsoC,cAAc13B,SAAS5Q,KAAKqoC,OACjCroC,MAAKsoC,cAAcK,QAAQ,EAAE3oC,KAAK+nC,KAElC/nC,MAAKkoC,UAAUU,YAAY5oC,KAAKsoC,cAEhCtoC,MAAK4kC,eAAez7B,UAAU2M,SAAW9V,KAAK4kC,eAAez7B,UAAU2M,SAAS4yB,IAAI1oC,KAAKkoC,UAEzFxnC,GAAAH,UAAM4c,OAAM7d,KAAAU,MAEd,OAAA6nC,IAjF+BjB,EAmF/BnnC,GAA0BJ,QAAjBwoC,IhCm4PNhpB,gCAAgCzd,UAAUqmC,kDAAkD,oDAAoDoB,qCAAqC,SAAStqC,EAAQkB,EAAOJ,GAQhN,GiCj+PMypC,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEmBrpC,GAAAJ,QAAVypC,OjCk+PHI,wCAAwC,SAAS3qC,EAAQkB,EAAOJ,GAOtE,GkC//PM8pC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEsB1pC,GAAAJ,QAAb8pC,OlCigQHG,+CAA+C,SAAS/qC,EAAQkB,EAAOJ,GAW7E,GmCrhQMkqC,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAE6B9pC,GAAAJ,QAApBkqC,OnCwhQHG,oCAAoC,SAASnrC,EAAQkB,EAAOJ,GAelE,GoC5hQMsqC,GAAQ,WAAd,QAAMA,MAuCEA,EAAAppC,UAAAqpC,gBAAP,SAAuBC,EAAsBxV,EAAsByV,EAAuBC,GAA7C,GAAA1V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAyV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAAppC,UAAAypC,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAAppC,UAAA4pC,kBAAP,SAAyB72B,EAAmB8P,EAA8BgnB,EAAsBC,EAA8BhW,EAAsBiW,EAA6BC,EAAoCC,GAAvF,GAAAnW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAiW,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mb,GAAAppC,UAAAiZ,MAAP,YAYOmwB,GAAAppC,UAAAqQ,SAAP,SAAgB65B,IAuDTd,GAAAppC,UAAAmqC,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGrB,GAAAppC,UAAA0qC,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DrB,GAAAppC,UAAA6qC,WAAP,SAAkBnoC,EAAUC,EAAUszB,IAqB/BmT,GAAAppC,UAAA8qC,YAAP,SAAmBpoC,EAAUC,EAAUkB,EAAcC,IAiB9CslC,GAAAppC,UAAA+qC,iBAAP,SAAwBC,IAkDjB5B,GAAAppC,UAAAirC,SAAP,SAAgBC,EAAgCpP,EAAoBqP,IAsB7D/B,GAAAppC,UAAAorC,SAAP,SAAgB1oC,EAAUC,EAAUkB,EAAcC,IA+B3CslC,GAAAppC,UAAAqrC,cAAP,SAAqB3oC,EAAUC,EAAUkB,EAAcC,EAAewnC,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFpC,GAAAppC,UAAAyrC,cAAP,SAAqBC,EAAwBvjC,EAAsCwjC,EAA8BC,GAApE,GAAAzjC,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAAwjC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1GxC,GAAAppC,UAAA6rC,QAAP,YAkCOzC,GAAAppC,UAAA8rC,gBAAP,SAAuBxC,EAAsBxV,EAAsByV,EAAuBC,GAA7C,GAAA1V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAyV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAAppC,UAAA+rC,kBAAP,SAAyBh5B,EAAmB8P,EAA8BgnB,EAAsBC,EAAsBhW,EAAsBiW,EAAkCC,EAAgDC,GAAxG,GAAAnW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAiW,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNb,GAAAppC,UAAAgsC,UAAP,SAAiBppB,EAAsB8mB,EAA0BC,EAAkBsC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAzpB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA8mB,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAsC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LjD,GAAAppC,UAAAssC,OAAP,SAAc5pC,EAAUC,IAejBymC,GAAAppC,UAAAwY,OAAP,SAAc9V,EAAUC,IAIzB,OAAAymC,KAEkBlqC,GAAAJ,QAATsqC,OpC4/PHmD,yCAAyC,SAASvuC,EAAQkB,EAAOJ,SAEjE0tC,+CAA+C,SAASxuC,EAAQkB,EAAOJ,GAQ7E,GqCp2RM2tC,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEAvtC,GAA6BJ,QAApB2tC,OrCq2RHG,sCAAsC,SAAS5uC,EAAQkB,EAAOJ,GASpE,GsC74RM+tC,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAArE,MAAe,OAC9B,OAAAqE,KAEoB3tC,GAAAJ,QAAX+tC,OtC84RHG,yCAAyC,SAAShvC,EAAQkB,EAAOJ,GAKvE,GuC56RMmuC,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAxE,KAAc,MAOdwE,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEuB/tC,GAAAJ,QAAdmuC,OvC46RHI,yCAAyC,SAASrvC,EAAQkB,EAAOJ,GAMvE,GwCv9RMwuC,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEApuC,GAAuBJ,QAAdwuC,OxCw9RHI,wCAAwC,SAAS1vC,EAAQkB,EAAOJ,GAStE,GyCz/RM6uC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAzuC,GAAsBJ,QAAb6uC,OzC0/RHI,2CAA2C,SAAS/vC,EAAQkB,EAAOJ,GAsBzE,G0CrhSMkvC,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAAvF,KAAc,MAMduF,GAAAE,SAAkB,UACjC,OAAAF,KAEyB9uC,GAAAJ,QAAhBkvC,O1CshSHG,yCAAyC,SAASnwC,EAAQkB,EAAOJ,GACvE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CjkStB,IAAOsuC,GAASpwC,EAAe,iCAE/B,IAAOkM,GAAclM,EAAc,sCAInC,IAAOgN,GAAahN,EAAc,wCAElC,IAAO0M,GAAU1M,EAAe,uCAGhC,IAAOqwC,GAAarwC,EAAc,0C3C+lSlC,I2CzjSMswC,GAAS,SAAAnuC,GAASX,EAAlB8uC,EAASnuC,EA+Ld,SA/LKmuC,GA+LOvlC,EAAuBwlC,EAA+BC,GA/LnE,GAAAvjC,GAAAxL,IA+LoC,IAAA8uC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjEruC,EAAApB,KAAAU,KAEAA,MAAKiR,WAAa,IAElBjR,MAAKgvC,sBAAwB,SAACzgC,GAAwB,MAAA/C,GAAKyjC,cAAc1gC,GAEzEvO,MAAKsJ,SAAWA,CAEhBtJ,MAAKkvC,gBAAkB5lC,EAASlF,KAChCpE,MAAKmvC,iBAAmB7lC,EAASjF,MAEjCrE,MAAKovC,eAAiBpvC,KAAKimB,UAAUopB,WAAa,GAAIV,GAAU,EAAG,EAAG3uC,KAAKkvC,gBAAiBlvC,KAAKmvC,iBAGjGnvC,MAAK+O,YAAc9D,EAAW+D,gBAE9BhP,MAAKkvC,gBAAkB5lC,EAASlF,MA9LjCzD,OAAAC,eAAWiuC,EAAAtuC,UAAA,Y3C2jSJM,I2C3jSP,WAEC,MAAOb,MAAKsvC,W3C4jSNvuC,WAAY,KACZC,aAAc,M2CvjSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,a3C6jSJM,I2C7jSP,WAEC,MAAOguC,GAAU3tC,W3C8jSXH,WAAY,KACZC,aAAc,M2CpjSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,iB3C0jSJM,I2C1jSP,WAEC,MAAOb,MAAKovC,gB3C2jSNruC,WAAY,KACZC,aAAc,M2CtjSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,mB3C4jSJM,I2C5jSP,WAEC,MAAOb,MAAKmvC,kB3C6jSNpuC,WAAY,KACZC,aAAc,M2CxjSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,kB3C8jSJM,I2C9jSP,WAEC,MAAOb,MAAKkvC,iB3C+jSNnuC,WAAY,KACZC,aAAc,M2C1jSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,Y3CgkSJM,I2ChkSP,WAEC,MAAOb,MAAKimB,W3CikSNtjB,I2C9jSP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKimB,UACjB,MAED,IAAIjmB,KAAKimB,UAAW,CACnBjmB,KAAKimB,UAAUC,aAAalmB,KAC5BA,MAAKimB,UAAU1W,oBAAoBq/B,EAAcW,aAAcvvC,KAAKgvC,uBAIrEhvC,KAAKimB,UAAYrjB,CAEjB,IAAI5C,KAAKimB,UAAW,CACnBjmB,KAAKimB,UAAUE,UAAUnmB,KACzBA,MAAKimB,UAAUxW,iBAAiBm/B,EAAcW,aAAcvvC,KAAKgvC,yB3C4jS5DjuC,WAAY,KACZC,aAAc,M2C7hSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,e3CmiSJM,I2CniSP,WAEC,MAAOb,MAAKomB,c3CoiSNzjB,I2CjiSP,SAAuBC,GAEtB5C,KAAKomB,aAAexjB,G3CkiSd7B,WAAY,KACZC,aAAc,M2C9hSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,kB3CoiSJM,I2CpiSP,WAGC,MAAOb,MAAKsmB,iB3CqiSN3jB,I2CliSP,SAA0BC,GAGzB5C,KAAKmJ,UAAUsL,eAAiB7R,CAEhC5C,MAAKwvC,wB3CmiSCzuC,WAAY,KACZC,aAAc,M2ChiSrBL,QAAAC,eAAWiuC,EAAAtuC,UAAA,wB3CmiSJM,I2CniSP,WAEC,MAAOb,MAAKyvC,uB3CoiSN9sC,I2CjiSP,SAAgCC,GAG/B5C,KAAKyvC,sBAAwB7sC,CAC7B5C,MAAKwvC,wB3CkiSCzuC,WAAY,KACZC,aAAc,M2ChiSb6tC,GAAAtuC,UAAAivC,qBAAR,WAECxvC,KAAKsmB,gBAAgB,GAAI7b,EACzB,IAAKzK,KAA0B,uBAAIA,KAAKmJ,UAAwB,eAAE,CAEjEnJ,KAAKsmB,gBAAgBhX,gBAAoBtP,KAAKmJ,UAAUsL,eAAenF,gBAAkBtP,KAAKyvC,sBAAsBngC,eACpHtP,MAAKsmB,gBAAgB4G,cAAoBltB,KAAKmJ,UAAUsL,eAAeyY,cAAgBltB,KAAKyvC,sBAAsBviB,aAClHltB,MAAKsmB,gBAAgB+G,eAAoBrtB,KAAKmJ,UAAUsL,eAAe4Y,eAAiBrtB,KAAKyvC,sBAAsBpiB,cACnHrtB,MAAKsmB,gBAAgB8G,gBAAoBptB,KAAKmJ,UAAUsL,eAAe2Y,gBAAkBptB,KAAKyvC,sBAAsBriB,eACpHptB,MAAKsmB,gBAAgBmH,YAAoBztB,KAAKmJ,UAAUsL,eAAegZ,YAAcztB,KAAKyvC,sBAAsBhiB,WAChHztB,MAAKsmB,gBAAgBgH,UAAoBttB,KAAKmJ,UAAUsL,eAAe6Y,UAAYttB,KAAKyvC,sBAAsBniB,SAC9GttB,MAAKsmB,gBAAgBkH,WAAoBxtB,KAAKmJ,UAAUsL,eAAe+Y,WAAaxtB,KAAKyvC,sBAAsBjiB,UAC/GxtB,MAAKsmB,gBAAgBiH,YAAoBvtB,KAAKmJ,UAAUsL,eAAe8Y,YAAcvtB,KAAKyvC,sBAAsBliB,gBAE5G,IAAIvtB,KAAKmJ,UAAUsL,eAAe,CACtCzU,KAAKsmB,gBAAgBhX,gBAAoBtP,KAAKmJ,UAAUsL,eAAenF,eACvEtP,MAAKsmB,gBAAgB4G,cAAoBltB,KAAKmJ,UAAUsL,eAAeyY,aACvEltB,MAAKsmB,gBAAgB+G,eAAoBrtB,KAAKmJ,UAAUsL,eAAe4Y,cACvErtB,MAAKsmB,gBAAgB8G,gBAAoBptB,KAAKmJ,UAAUsL,eAAe2Y,eACvEptB,MAAKsmB,gBAAgBmH,YAAoBztB,KAAKmJ,UAAUsL,eAAegZ,WACvEztB,MAAKsmB,gBAAgBgH,UAAoBttB,KAAKmJ,UAAUsL,eAAe6Y,SACvEttB,MAAKsmB,gBAAgBkH,WAAoBxtB,KAAKmJ,UAAUsL,eAAe+Y,UACvExtB,MAAKsmB,gBAAgBiH,YAAoBvtB,KAAKmJ,UAAUsL,eAAe8Y,gBAEnE,IAAIvtB,KAAKyvC,sBAAsB,CACnCzvC,KAAKsmB,gBAAgBhX,gBAAoBtP,KAAKyvC,sBAAsBngC,eACpEtP,MAAKsmB,gBAAgB4G,cAAoBltB,KAAKyvC,sBAAsBviB,aACpEltB,MAAKsmB,gBAAgB+G,eAAoBrtB,KAAKyvC,sBAAsBpiB,cACpErtB,MAAKsmB,gBAAgB8G,gBAAoBptB,KAAKyvC,sBAAsBriB,eACpEptB,MAAKsmB,gBAAgBmH,YAAoBztB,KAAKyvC,sBAAsBhiB,WACpEztB,MAAKsmB,gBAAgBgH,UAAoBttB,KAAKyvC,sBAAsBniB,SACpEttB,MAAKsmB,gBAAgBkH,WAAoBxtB,KAAKyvC,sBAAsBjiB,UACpExtB,MAAKsmB,gBAAgBiH,YAAoBvtB,KAAKyvC,sBAAsBliB,aA4B/DshB,GAAAtuC,UAAA4U,kBAAP,WAECzU,EAAAH,UAAM4U,kBAAiB7V,KAAAU,KAEvBA,MAAKoV,YAAYhR,MAAQpE,KAAKovC,eAAehrC,KAC7CpE,MAAKoV,YAAY/Q,OAASrE,KAAKovC,eAAe/qC,OAGxCwqC,GAAAtuC,UAAAiI,MAAP,WAEC,GAAIA,GAAkB,GAAIqmC,GAAU7uC,KAAKsJ,SACzC,OAAOd,GAWDqmC,GAAAtuC,UAAA6I,gBAAP,SAAuBI,EAAkCyT,GAExD,MAAOjd,MAAK0R,kBAAkBg+B,uBAAuB1vC,KAAMA,KAAKsJ,SAAUtJ,KAAK+a,qBAAsBvR,GAM9FqlC,GAAAtuC,UAAA0uC,cAAR,SAAsB1gC,GAErBvO,KAAKkvC,gBAAkBlvC,KAAKimB,UAAU7hB,KACtCpE,MAAKmvC,iBAAmBnvC,KAAKimB,UAAU5hB,MAEvCrE,MAAKovC,eAAiBpvC,KAAKimB,UAAUopB,WAAa,GAAIV,GAAU,EAAG,EAAG3uC,KAAKkvC,gBAAiBlvC,KAAKmvC,iBAEjGnvC,MAAK0P,oBAEL,IAAIC,GAAa3P,KAAK8N,cAAcvO,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK8N,cAAc9O,GAAGwnB,qBAGjBqoB,GAAAtuC,UAAA+c,eAAP,SAAsBC,GAKrB,GAAIvd,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErBqI,GAASoyB,uBAAuB3vC,MAG1B6uC,GAAAtuC,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUo0B,iBAAiB5vC,MAGrB6uC,GAAAtuC,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUq0B,mBAAmB7vC,MAnRhB6uC,GAAA3tC,UAAmB,mBAqRlC,OAAA2tC,IAvRwBtjC,EAyRxB9L,GAAmBJ,QAAVwvC,I3C6/RNtwB,sCAAsCnd,UAAU0uC,iCAAiC1uC,UAAUmJ,wCAAwC,wCAAwCyU,uCAAuC,uCAAuC+wB,0CAA0C,4CAA4C7L,sCAAsC,SAAS3lC,EAAQkB,EAAOJ,GAChZ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4C90StB,IAAOuK,GAAQrM,EAAgB,gCAC/B,IAAOyxC,GAAOzxC,EAAgB,+BAE9B,IAAO0xC,GAAe1xC,EAAc,yCAEpC,IAAO2xC,GAAqB3xC,EAAY,oDAGxC,IAAO0M,GAAU1M,EAAe,uCAChC,IAAOiiB,GAAsBjiB,EAAY,uDAGzC,IAAO4gC,GAAW5gC,EAAe,wCAGjC,IAAM2gC,GAAM,SAAAx+B,GAASX,EAAfm/B,EAAMx+B,EAWX,SAXKw+B,GAWOiD,GAXb,GAAA32B,GAAAxL,IAWa,IAAAmiC,QAAA,GAA6B,CAA7BA,EAAA,KAEXzhC,EAAApB,KAAAU,KATOA,MAAAmwC,gBAA2B,GAAIvlC,EAC/B5K,MAAAowC,qBAA+B,IAG/BpwC,MAAAqwC,oBAA8B,IAOrCrwC,MAAKiR,WAAa,IAElBjR,MAAKswC,mCAAqC,SAAC/hC,GAA0B,MAAA/C,GAAK+kC,0BAA0BhiC,GAEpGvO,MAAKwwC,YAAcrO,GAAc,GAAI+N,EACrClwC,MAAKwwC,YAAY/gC,iBAAiBwgC,EAAgBQ,eAAgBzwC,KAAKswC,mCAEvEtwC,MAAK0wC,iBAEL,KAAK,GAAI1xC,GAAW,EAAGA,EAAI,IAAKA,EAC/BgB,KAAK0wC,eAAe1xC,GAAK,GAAIgxC,EAE9BhwC,MAAKuG,GAAK,GAGVvG,MAAK+O,YAAc9D,EAAW6rB,KAI/Bn2B,OAAAC,eAAWs+B,EAAA3+B,UAAA,a5C4zSJM,I4C5zSP,WAEC,MAAOq+B,GAAOh+B,W5C6zSRH,WAAY,KACZC,aAAc,M4C3zSbk+B,GAAA3+B,UAAAgwC,0BAAR,SAAkChiC,GAEjCvO,KAAKowC,qBAAuB,IAC5BpwC,MAAKqwC,oBAAsB,IAC3BrwC,MAAK2b,cAAcpN,GAGpB5N,QAAAC,eAAWs+B,EAAA3+B,UAAA,iB5C4zSJM,I4C5zSP,WAEC,GAAIb,KAAKqwC,oBACRrwC,KAAK2wC,eAEN,OAAO3wC,MAAK0wC,gB5C4zSN3vC,WAAY,KACZC,aAAc,M4C1zSbk+B,GAAA3+B,UAAAowC,cAAR,WAEC,GAAI5xC,GAAUmB,EAAUmzB,C5C6zSlB,I4C3zSFud,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIxxC,EACJ,IAAIiY,GAAe,GAAI5S,OAAc,GAErC,IAAIosC,EACJ5xC,MAAK6xC,eAAend,cAActc,EAElCw4B,GAAMx4B,EAAI,EACVy4B,GAAMz4B,EAAI,EACV04B,GAAM14B,EAAI,EACV24B,GAAM34B,EAAI,GACV44B,GAAM54B,EAAI,EACV64B,GAAM74B,EAAI,EACV84B,GAAM94B,EAAI,EACV+4B,GAAM/4B,EAAI,GACVg5B,GAAMh5B,EAAI,EACVi5B,GAAMj5B,EAAI,EACVk5B,GAAMl5B,EAAI,GACVm5B,GAAMn5B,EAAI,GACVo5B,GAAMp5B,EAAI,EACVq5B,GAAMr5B,EAAI,EACVs5B,GAAMt5B,EAAI,GACVu5B,GAAMv5B,EAAI,GAGVjY,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIyyC,EAAMZ,CACV1wC,GAAIuxC,EAAMZ,CACVxd,GAAIqe,EAAMZ,CACVc,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,IAAM0xC,EAAMZ,GAAKa,CAGnBzxC,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIyyC,EAAMZ,CACV1wC,GAAIuxC,EAAMZ,CACVxd,GAAIqe,EAAMZ,CACVc,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,GAAK8wC,EAAMY,GAAKC,CAGlBzxC,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIyyC,EAAMR,CACV9wC,GAAIuxC,EAAMR,CACV5d,GAAIqe,EAAMR,CACVU,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,IAAM0xC,EAAMR,GAAKS,CAGnBzxC,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIyyC,EAAMR,CACV9wC,GAAIuxC,EAAMR,CACV5d,GAAIqe,EAAMR,CACVU,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,GAAKkxC,EAAMQ,GAAKC,CAGlBzxC,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIqyC,CACJlxC,GAAImxC,CACJhe,GAAIie,CACJM,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,GAAKsxC,EAAIK,CAGXzxC,GAAIH,KAAK0wC,eAAe,EACxB3xC,GAAIyyC,EAAMJ,CACVlxC,GAAIuxC,EAAMJ,CACVhe,GAAIqe,EAAMJ,CACVM,GAAS,EAAExuC,KAAKoB,KAAKzF,EAAEA,EAAImB,EAAEA,EAAImzB,EAAEA,EACnClzB,GAAEpB,EAAIA,EAAE6yC,CACRzxC,GAAED,EAAIA,EAAE0xC,CACRzxC,GAAEkzB,EAAIA,EAAEue,CACRzxC,GAAEF,GAAKsxC,EAAMI,GAAKC,CAElB5xC,MAAKqwC,oBAAsB,MAOrBnR,GAAA3+B,UAAAyQ,0BAAP,WAECtQ,EAAAH,UAAMyQ,0BAAyB1R,KAAAU,KAE/BA,MAAKowC,qBAAuB,IAC5BpwC,MAAKqwC,oBAAsB,KAM5B1vC,QAAAC,eAAWs+B,EAAA3+B,UAAA,c5C+ySJM,I4C/ySP,WAEC,MAAOb,MAAKwwC,a5CgzSN7tC,I4C7ySP,SAAsBC,GAErB,GAAI5C,KAAKwwC,aAAe5tC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAI1D,OAAM,6BAEjBc,MAAKwwC,YAAYjhC,oBAAoB0gC,EAAgBQ,eAAgBzwC,KAAKswC,mCAC1EtwC,MAAKwwC,YAAc5tC,CACnB5C,MAAKwwC,YAAY/gC,iBAAiBwgC,EAAgBQ,eAAgBzwC,KAAKswC,mCACvEtwC,MAAK2b,cAAc,GAAIwjB,GAAYA,EAAY8C,mBAAoBjiC,Q5C4yS7De,WAAY,KACZC,aAAc,M4CvySrBL,QAAAC,eAAWs+B,EAAA3+B,UAAA,kB5C6ySJM,I4C7ySP,WAEC,GAAIb,KAAKowC,qBAAsB,CAC9BpwC,KAAKmwC,gBAAgBv/B,SAAS5Q,KAAKsV,sBACnCtV,MAAKmwC,gBAAgB2B,OAAO9xC,KAAKwwC,YAAYnc,OAC7Cr0B,MAAKowC,qBAAuB,MAG7B,MAAOpwC,MAAKmwC,iB5C6ySNpvC,WAAY,KACZC,aAAc,M4CnySdk+B,GAAA3+B,UAAAqjC,OAAP,SAAcmO,EAAWC,EAAWrO,GAEnC,MAAO3jC,MAAK6Q,eAAe43B,qBAAqBzoC,KAAKwwC,YAAYpP,UAAU2Q,EAAIC,EAAIrO,IAS7EzE,GAAA3+B,UAAA8iC,QAAP,SAAeC,GAEd,MAAOtjC,MAAKwwC,YAAYnN,QAAQrjC,KAAKsV,sBAAsB5C,gBAAgB4wB,IAWrEpE,GAAA3+B,UAAA6gC,UAAP,SAAiB2Q,EAAWC,EAAWrO,GAEtC,MAAO3jC,MAAK6Q,eAAe6B,gBAAgB1S,KAAKwwC,YAAYpP,UAAU2Q,EAAIC,EAAIrO,IAGxEzE,GAAA3+B,UAAA+c,eAAP,SAAsBC,GAKrB,GAAIvd,KAAKiV,eACRjV,KAAKiV,eAAeC,aAKfgqB,GAAA3+B,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUwlB,iBAAiBhhC,MAGrBk/B,GAAA3+B,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUy2B,mBAAmBjyC,MA/PhBk/B,GAAAh+B,UAAmB,gBAiQlC,OAAAg+B,IAnQqB1e,EAqQrB/gB,GAAgBJ,QAAP6/B,I5CoySNgT,yCAAyC9wC,UAAUqd,gCAAgCrd,UAAU+wC,+BAA+B/wC,UAAUgxC,oDAAoDhxC,UAAU4d,uCAAuC,uCAAuCsD,uDAAuD,uDAAuD6hB,wCAAwC,0CAA0CkO,gDAAgD,SAAS9zC,EAAQkB,EAAOJ,GAC7hB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6C7jTtB,IAAOuK,GAAQrM,EAAgB,gCAC/B,IAAOwM,GAAQxM,EAAgB,gCAE/B,IAAOmiB,GAASniB,EAAe,oCAC/B,IAAO0M,GAAU1M,EAAe,uCAIhC,IAAO+zC,GAAuB/zC,EAAY,qEAE1C,IAAMg0C,GAAgB,SAAA7xC,GAASX,EAAzBwyC,EAAgB7xC,EAQrB,SARK6xC,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9ChyC,EAAApB,KAAAU,KALOA,MAAA2yC,aAA6B,GAAIntC,OAAc,GAOtDxF,MAAKiR,WAAa,IAElBjR,MAAK2zB,UAAY,GAAI5oB,GAASynC,EAAMC,EAAMC,EAE1C1yC,MAAK4yC,gBAAkB,GAAI7nC,EAG3B/K,MAAK+O,YAAc9D,EAAW6rB,KAG/Bn2B,OAAAC,eAAW2xC,EAAAhyC,UAAA,kB7CmjTJM,I6CnjTP,WAEC,GAAIb,KAAK4S,sBACR5S,KAAK6S,uBAEN,OAAO7S,MAAK4yC,iB7CmjTN7xC,WAAY,KACZC,aAAc,M6CjjTrBL,QAAAC,eAAW2xC,EAAAhyC,UAAA,a7CojTJM,I6CpjTP,WAEC,MAAOb,MAAK6yC,Y7CqjTNlwC,I6CljTP,SAAqBC,GAEpB5C,KAAK6yC,WAAajwC,CAElB,KAAK5C,KAAK8yC,WACT9yC,KAAK8yC,WAAa,GAAI/nC,EAEvB/K,MAAK8yC,WAAW7vC,EAAIjD,KAAKiD,EAAIjD,KAAK6yC,WAAW5vC,CAC7CjD,MAAK8yC,WAAW5vC,EAAIlD,KAAKkD,EAAIlD,KAAK6yC,WAAW3vC,CAC7ClD,MAAK8yC,WAAWvsC,EAAIvG,KAAKuG,EAAIvG,KAAK6yC,WAAWtsC,CAE7CvG,MAAK8X,OAAO9X,KAAK8yC,a7CgjTX/xC,WAAY,KACZC,aAAc,M6C7iTduxC,GAAAhyC,UAAAsS,sBAAP,WAECnS,EAAAH,UAAMsS,sBAAqBvT,KAAAU,KAC3BA,MAAK6Q,eAAe8B,aAAa,EAAG3S,KAAK4yC,gBACzC5yC,MAAK4yC,gBAAgBt6B,YAIfi6B,GAAAhyC,UAAAuhB,oBAAP,WAEC,MAAO,IAAIwwB,GAILC,GAAAhyC,UAAA6hB,2BAAP,SAAkCC,EAAgB3I,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAoB,GAAI5S,MAC5B,IAAIkT,GAAa,GAAI9N,EAErB8N,GAAE9H,SAASyR,EAAO5I,wBAAwBC,GAC1ChB,GAAEo5B,OAAO9xC,KAAKsV,sBAEd,KAAKtV,KAAK+yC,gBACT/yC,KAAK+yC,kBAENr6B,GAAEs6B,iBAAiBhzC,KAAK2yC,aAAc3yC,KAAK+yC,gBAE3C,IAAIE,GAAc/L,SAAUgM,GAAehM,QAC3C,IAAIiM,GAAcjM,SAAUkM,GAAelM,QAC3C,IAAImM,GAAcnM,SAAUoM,GAAepM,QAC3C,IAAIjnC,EACJ,KAAK,GAAIjB,GAAW,EAAGA,EAAI,IAAK,CAC/BiB,EAAID,KAAK+yC,gBAAgB/zC,IAEzB,IAAIiB,EAAIgzC,EACPA,EAAOhzC,CAER,IAAIA,EAAIizC,EACPA,EAAOjzC,CAERA,GAAID,KAAK+yC,gBAAgB/zC,IAEzB,IAAIiB,EAAIkzC,EACPA,EAAOlzC,CAER,IAAIA,EAAImzC,EACPA,EAAOnzC,CAERA,GAAID,KAAK+yC,gBAAgB/zC,IAEzB,IAAIiB,EAAIozC,EACPA,EAAOpzC,CAER,IAAIA,EAAIqzC,EACPA,EAAOrzC,EAGT,GAAIszC,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCj7B,GAAI,GAAK,EAAEm7B,CACXn7B,GAAI,GAAK,EAAEo7B,CACXp7B,GAAI,IAAMq7B,CACVr7B,GAAI,MAAQ86B,EAAOD,GAAMM,CACzBn7B,GAAI,MAAQg7B,EAAOD,GAAMK,CACzBp7B,GAAI,KAAOi7B,EAAKI,CAChBr7B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAKL,EACJA,EAAS,GAAInN,EAEdmN,GAAOY,gBAAgBP,EACvBL,GAAOwE,QAAQ7D,EAEf,OAAOX,GAGDw6B,GAAAhyC,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUk4B,2BAA2B1zC,MAG/BuyC,GAAAhyC,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUm4B,6BAA6B3zC,MASjCuyC,GAAAhyC,UAAA4U,kBAAP,WAECzU,EAAAH,UAAM4U,kBAAiB7V,KAAAU,K7CuhTjB,I6CphTFk5B,GAAcl5B,KAAKoV,YAAYnS,CACnC,IAAIk2B,GAAcn5B,KAAKoV,YAAYlS,EAAIlD,KAAKoV,YAAY/Q,MACxD,IAAI+0B,GAAcp5B,KAAKoV,YAAY7O,CACnC,IAAI8yB,GAAcr5B,KAAKoV,YAAYnS,EAAIjD,KAAKoV,YAAYhR,KACxD,IAAIk1B,GAAct5B,KAAKoV,YAAYlS,CACnC,IAAIq2B,GAAcv5B,KAAKoV,YAAY7O,EAAIvG,KAAKoV,YAAYtF,KAExD9P,MAAK2yC,aAAa,GAAKzZ,CACvBl5B,MAAK2yC,aAAa,GAAKxZ,CACvBn5B,MAAK2yC,aAAa,GAAKvZ,CACvBp5B,MAAK2yC,aAAa,GAAKtZ,CACvBr5B,MAAK2yC,aAAa,GAAKxZ,CACvBn5B,MAAK2yC,aAAa,GAAKvZ,CACvBp5B,MAAK2yC,aAAa,GAAKzZ,CACvBl5B,MAAK2yC,aAAa,GAAKrZ,CACvBt5B,MAAK2yC,aAAa,GAAKvZ,CACvBp5B,MAAK2yC,aAAa,GAAKtZ,CACvBr5B,MAAK2yC,aAAa,IAAMrZ,CACxBt5B,MAAK2yC,aAAa,IAAMvZ,CACxBp5B,MAAK2yC,aAAa,IAAMzZ,CACxBl5B,MAAK2yC,aAAa,IAAMxZ,CACxBn5B,MAAK2yC,aAAa,IAAMpZ,CACxBv5B,MAAK2yC,aAAa,IAAMtZ,CACxBr5B,MAAK2yC,aAAa,IAAMxZ,CACxBn5B,MAAK2yC,aAAa,IAAMpZ,CACxBv5B,MAAK2yC,aAAa,IAAMzZ,CACxBl5B,MAAK2yC,aAAa,IAAMrZ,CACxBt5B,MAAK2yC,aAAa,IAAMpZ,CACxBv5B,MAAK2yC,aAAa,IAAMtZ,CACxBr5B,MAAK2yC,aAAa,IAAMrZ,CACxBt5B,MAAK2yC,aAAa,IAAMpZ,EAE1B,OAAAgZ,IArL+B7xB,EAuL/BjhB,GAA0BJ,QAAjBkzC,I7CqhTN9zB,gCAAgCrd,UAAUyd,gCAAgCzd,UAAUmf,oCAAoC,oCAAoCvB,uCAAuC,uCAAuC40B,qEAAqE,uEAAuEC,uCAAuC,SAASt1C,EAAQkB,EAAOJ,SAElby0C,0CAA0C,SAASv1C,EAAQkB,EAAOJ,GACxE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8C1tTtB,IAAOnB,GAAKX,EAAgB,+BAE5B,IAAOmiB,GAASniB,EAAe,oCAC/B,IAAO0M,GAAU1M,EAAe,uCAKhC,IAAMw1C,GAAU,SAAArzC,GAASX,EAAnBg0C,EAAUrzC,EAKf,SALKqzC,GAKOC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjCvzC,EAAApB,KAAAU,KAEAA,MAAKiR,WAAa,IAElBjR,MAAKk0C,YAAcF,CACnBh0C,MAAKm0C,aAAeF,CAGpBj0C,MAAK+O,YAAc9D,EAAW6rB,KAG/Bn2B,OAAAC,eAAWmzC,EAAAxzC,UAAA,c9CitTJM,I8CjtTP,WAEC,MAAOb,MAAKk0C,a9CktTNvxC,I8C/sTP,SAAsBC,GAErB5C,KAAKk0C,YAActxC,G9CgtTb7B,WAAY,KACZC,aAAc,M8C9sTrBL,QAAAC,eAAWmzC,EAAAxzC,UAAA,e9CitTJM,I8CjtTP,WAEC,MAAOb,MAAKm0C,c9CktTNxxC,I8C/sTP,SAAuBC,GAEtB5C,KAAKm0C,aAAevxC,G9CgtTd7B,WAAY,KACZC,aAAc,M8C7sTd+yC,GAAAxzC,UAAA6hB,2BAAP,SAAkCC,EAAgB3I,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI7Y,GAAM,wEAGV60C,GAAAxzC,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAU44B,qBAAqBp0C,MAGzB+zC,GAAAxzC,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAU64B,uBAAuBr0C,MAEnC,OAAA+zC,IArDyBrzB,EAuDzBjhB,GAAoBJ,QAAX00C,I9C8sTNha,+BAA+B34B,UAAUmf,oCAAoC,oCAAoCvB,uCAAuC,yCAAyCs1B,2CAA2C,SAAS/1C,EAAQkB,EAAOJ,GACvQ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C9wTtB,IAAOkL,GAAahN,EAAc,wCAElC,IAAO0M,GAAU1M,EAAe,uC/CmxThC,I+C1wTMg2C,GAAW,SAAA7zC,GAASX,EAApBw0C,EAAW7zC,EAsIhB,SAtIK6zC,GAsIOjrC,EAAuBkrC,EAAwBC,EAAsBtxB,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhFziB,EAAApB,KAAAU,KAEAA,MAAKiR,WAAa,IAElBjR,MAAKsJ,SAAWA,CAEhBtJ,MAAK00C,eAAiBF,CACtBx0C,MAAK20C,aAAeF,CACpBz0C,MAAK40C,eAAiBzxB,EAAU,EAGhCnjB,MAAK+O,YAAc9D,EAAW+D,iBAnI/BrO,OAAAC,eAAW2zC,EAAAh0C,UAAA,Y/CkxTJM,I+ClxTP,WAEC,MAAOb,MAAKsvC,W/CmxTNvuC,WAAY,KACZC,aAAc,M+C9wTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,a/CoxTJM,I+CpxTP,WAEC,MAAO0zC,GAAYrzC,W/CqxTbH,WAAY,KACZC,aAAc,M+ChxTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,gB/CsxTJM,I+CtxTP,WAEC,MAAOb,MAAK00C,gB/CuxTN3zC,WAAY,KACZC,aAAc,M+CrxTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,iB/CwxTJoC,I+CxxTP,SAAyBC,GAExB,GAAI5C,KAAK00C,gBAAkB9xC,EAC1B,MAED5C,MAAK00C,eAAiB9xC,CAEtB5C,MAAK60C,0B/CuxTC9zC,WAAY,KACZC,aAAc,M+ClxTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,e/CwxTJM,I+CxxTP,WAEC,MAAOb,MAAK20C,c/CyxTNhyC,I+CtxTP,SAAuBC,GAEtB,GAAI5C,KAAK20C,cAAgB/xC,EACxB,MAED5C,MAAK20C,aAAe/xC,CAEpB5C,MAAK60C,0B/CqxTC9zC,WAAY,KACZC,aAAc,M+ChxTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,Y/CsxTJM,I+CtxTP,WAEC,MAAOb,MAAKimB,W/CuxTNtjB,I+CpxTP,SAAoBC,GAEnB,GAAI5C,KAAKsJ,SACRtJ,KAAKsJ,SAAS4c,aAAalmB,KAE5BA,MAAKimB,UAAYrjB,CAEjB,IAAI5C,KAAKsJ,SACRtJ,KAAKsJ,SAAS6c,UAAUnmB,O/CmxTnBe,WAAY,KACZC,aAAc,M+C9wTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,a/CoxTJM,I+CpxTP,WAEC,MAAOb,MAAK40C,eAAe,G/CqxTrBjyC,I+ClxTP,SAAqBC,GAEpB,GAAI5C,KAAK40C,gBAAkBhyC,EAC1B,MAED5C,MAAK40C,eAAiBhyC,EAAM,EAE5B5C,MAAK60C,0B/CixTC9zC,WAAY,KACZC,aAAc,M+C5wTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,e/CkxTJM,I+ClxTP,WAEC,MAAOb,MAAKomB,c/CmxTNzjB,I+ChxTP,SAAuBC,GAEtB5C,KAAKomB,aAAexjB,G/CixTd7B,WAAY,KACZC,aAAc,M+C7wTrBL,QAAAC,eAAW2zC,EAAAh0C,UAAA,kB/CmxTJM,I+CnxTP,WAEC,MAAOb,MAAKsmB,iB/CoxTN3jB,I+CjxTP,SAA0BC,GAEzB5C,KAAKsmB,gBAAkB1jB,G/CkxTjB7B,WAAY,KACZC,aAAc,M+CzvTduzC,GAAAh0C,UAAAU,QAAP,WAECjB,KAAK00C,eAAiB,IACtB10C,MAAK20C,aAAe,KAMdJ,GAAAh0C,UAAA4U,kBAAP,WAECzU,EAAAH,UAAM4U,kBAAiB7V,KAAAU,KAEvBA,MAAKoV,YAAYnS,EAAIG,KAAKsB,IAAI1E,KAAK00C,eAAezxC,EAAGjD,KAAK20C,aAAa1xC,EACvEjD,MAAKoV,YAAYlS,EAAIE,KAAKsB,IAAI1E,KAAK00C,eAAexxC,EAAGlD,KAAK20C,aAAazxC,EACvElD,MAAKoV,YAAY7O,EAAInD,KAAKsB,IAAI1E,KAAK00C,eAAenuC,EAAGvG,KAAK20C,aAAapuC,EACvEvG,MAAKoV,YAAYhR,MAAQhB,KAAKmyB,IAAIv1B,KAAK00C,eAAezxC,EAAIjD,KAAK20C,aAAa1xC,EAC5EjD,MAAKoV,YAAY/Q,OAASjB,KAAKmyB,IAAIv1B,KAAK00C,eAAexxC,EAAIlD,KAAK20C,aAAazxC,EAC7ElD,MAAKoV,YAAYtF,MAAQ1M,KAAKmyB,IAAIv1B,KAAK00C,eAAenuC,EAAIvG,KAAK20C,aAAapuC,GAGtEguC,GAAAh0C,UAAAiV,qBAAP,WAEC9U,EAAAH,UAAMiV,qBAAoBlW,KAAAU,KAE1BA,MAAKmV,mBAEL,IAAI2/B,IAAoB90C,KAAK20C,aAAa1xC,EAAIjD,KAAK00C,eAAezxC,GAAG,CACrE,IAAI8xC,IAAqB/0C,KAAK20C,aAAazxC,EAAIlD,KAAK00C,eAAexxC,GAAG,CACtE,IAAI8xC,IAAoBh1C,KAAK20C,aAAapuC,EAAIvG,KAAK00C,eAAenuC,GAAG,CACrEvG,MAAKyV,eAAexS,EAAIjD,KAAK00C,eAAezxC,EAAI6xC,CAChD90C,MAAKyV,eAAevS,EAAIlD,KAAK00C,eAAexxC,EAAI6xC,CAChD/0C,MAAKyV,eAAelP,EAAIvG,KAAK00C,eAAenuC,EAAIyuC,CAChDh1C,MAAKyV,eAAe+gB,OAASpzB,KAAKoB,KAAKswC,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFT,GAAAh0C,UAAAs0C,uBAAR,WAEC,GAAIllC,GAAa3P,KAAK8N,cAAcvO,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK8N,cAAc9O,GAAGwnB,qBAGjB+tB,GAAAh0C,UAAA+c,eAAP,SAAsBC,GAKrB,GAAIvd,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErBqI,GAASoyB,uBAAuB3vC,MAG1Bu0C,GAAAh0C,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUo0B,iBAAiB5vC,MAGrBu0C,GAAAh0C,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUq0B,mBAAmB7vC,MApNhBu0C,GAAArzC,UAAmB,qBAsNlC,OAAAqzC,IAxN0BhpC,EA0N1B9L,GAAqBJ,QAAZk1C,I/C6uTNhqC,wCAAwC,wCAAwCyU,uCAAuC,yCAAyCi2B,oCAAoC,SAAS12C,EAAQkB,EAAOJ,GAC/N,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgD39TtB,IAAOyK,GAAKvM,EAAgB,6BAO5B,IAAO+gB,GAAQ/gB,EAAgB,mCAE/B,IAAOuD,GAAgBvD,EAAc,2CACrC,IAAO8gB,GAAa9gB,EAAc,0CAClC,IAAOiiB,GAAsBjiB,EAAY,uDAEzC,IAAO22C,GAAW32C,EAAe,sChD29TjC,IgDl9TM42C,GAAI,SAAAz0C,GAASX,EAAbo1C,EAAIz0C,EAyMT,SAzMKy0C,GAyMOC,EAAmB9rC,GAzMhC,GAAAkC,GAAAxL,IAyMgC,IAAAsJ,QAAA,GAA4B,CAA5BA,EAAA,KAE9B5I,EAAApB,KAAAU,KAjMOA,MAAA4hB,cAAwB,IACxB5hB,MAAAq1C,wBAAkC,IAkMzCr1C,MAAKiR,WAAa,IAElBjR,MAAKs1C,WAAa,GAAI9vC,MAEtBxF,MAAKu1C,iCAAmC,SAAChnC,GAAwB,MAAA/C,GAAKgqC,wBAAwBjnC,GAC9FvO,MAAKy1C,4BAA8B,SAAClnC,GAAwB,MAAA/C,GAAKkqC,mBAAmBnnC,GACpFvO,MAAK21C,8BAAgC,SAACpnC,GAAwB,MAAA/C,GAAKoqC,qBAAqBrnC,GAGxFvO,MAAKo1C,SAAWA,GAAY,GAAI91B,EAEhCtf,MAAKsJ,SAAWA,EApMjB3I,OAAAC,eAAWu0C,EAAA50C,UAAA,YhDy9TJM,IgDz9TP,WAEC,MAAOb,MAAKsvC,WhD09TN3sC,IgDv9TP,SAAoBC,GAEnB,GAAI5C,KAAKsvC,UACRtvC,KAAKsvC,UAAUuG,YAAY71C,KAE5BA,MAAKsvC,UAAY1sC,CAEjB,IAAI+M,GAAa3P,KAAKs1C,WAAW/1C,MACjC,IAAIu2C,EAEJ,KAAK,GAAI92C,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAAG,CACpC82C,EAAU91C,KAAKs1C,WAAWt2C,EAG1B,IAAI82C,EAAQxsC,SAAU,CACrBwsC,EAAQxsC,SAAS4c,aAAa4vB,EAC9BA,GAAQxsC,SAAS6c,UAAU2vB,GAI5BA,EAAQvvB,iCAGT,GAAIvmB,KAAKsvC,UACRtvC,KAAKsvC,UAAUyG,SAAS/1C,OhDk9TnBe,WAAY,KACZC,aAAc,MgD78TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,ahDm9TJM,IgDn9TP,WAEC,MAAOs0C,GAAKj0C,WhDo9TNH,WAAY,KACZC,aAAc,MgD/8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,gBhDq9TJM,IgDr9TP,WAEC,MAAOb,MAAK4hB,ehDs9TNjf,IgDn9TP,SAAwBC,GAEvB5C,KAAK4hB,cAAgBhf,GhDo9Tf7B,WAAY,KACZC,aAAc,MgD/8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,YhDq9TJM,IgDr9TP,WAEC,GAAIb,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErB,OAAOlV,MAAKg2C,WhDq9TNrzC,IgDl9TP,SAAoBC,GAEnB,GAAI5D,EAEJ,IAAIgB,KAAKg2C,UAAW,CACnBh2C,KAAKg2C,UAAUzmC,oBAAoB8P,EAAcW,eAAgBhgB,KAAKu1C,iCACtEv1C,MAAKg2C,UAAUzmC,oBAAoB8P,EAAcK,mBAAoB1f,KAAKy1C,4BAC1Ez1C,MAAKg2C,UAAUzmC,oBAAoB8P,EAAcQ,qBAAsB7f,KAAK21C,8BAE5E,KAAK32C,EAAI,EAAGA,EAAIgB,KAAKs1C,WAAW/1C,SAAUP,EACzCgB,KAAKs1C,WAAWt2C,GAAGiC,SAEpBjB,MAAKs1C,WAAW/1C,OAAS,EAG1BS,KAAKg2C,UAAYpzC,CAEjB,IAAI5C,KAAKg2C,UAAW,CAEnBh2C,KAAKg2C,UAAUvmC,iBAAiB4P,EAAcW,eAAgBhgB,KAAKu1C,iCACnEv1C,MAAKg2C,UAAUvmC,iBAAiB4P,EAAcK,mBAAoB1f,KAAKy1C,4BACvEz1C,MAAKg2C,UAAUvmC,iBAAiB4P,EAAcQ,qBAAsB7f,KAAK21C,8BAEzE,IAAIM,GAAkCj2C,KAAKg2C,UAAUE,aAErD,KAAKl3C,EAAI,EAAGA,EAAIi3C,EAAS12C,SAAUP,EAClCgB,KAAKm2C,WAAWF,EAASj3C,MhD48TrB+B,WAAY,KACZC,aAAc,MgDt8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,YhD48TJM,IgD58TP,WAEC,MAAOb,MAAKimB,WhD68TNtjB,IgD18TP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKimB,UACjB,MAED,IAAIjnB,EACJ,IAAI2Q,GAAa3P,KAAKs1C,WAAW/1C,MACjC,IAAIu2C,EAEJ,KAAK92C,EAAI,EAAGA,EAAI2Q,EAAK3Q,IACpB,GAAIgB,KAAKimB,YAAc6vB,EAAU91C,KAAKs1C,WAAWt2C,IAAIsK,UAAYtJ,KAAKimB,UACrEjmB,KAAKimB,UAAUC,aAAa4vB,EAE9B91C,MAAKimB,UAAYrjB,CAEjB,KAAK5D,EAAI,EAAGA,EAAI2Q,EAAK3Q,IACpB,GAAIgB,KAAKimB,YAAc6vB,EAAU91C,KAAKs1C,WAAWt2C,IAAIsK,UAAYtJ,KAAKimB,UACrEjmB,KAAKimB,UAAUE,UAAU2vB,IhDu8TrB/0C,WAAY,KACZC,aAAc,MgDl8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,0BhDw8TJM,IgDx8TP,WAEC,MAAOb,MAAKq1C,yBhDy8TN1yC,IgDt8TP,SAAkCC,GAEjC5C,KAAKq1C,wBAA0BzyC,GhDu8TzB7B,WAAY,KACZC,aAAc,MgDj8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,ahDw8TJM,IgDx8TP,WAKC,GAAIb,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErB,OAAOlV,MAAKs1C,YhDw8TNv0C,WAAY,KACZC,aAAc,MgDn8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,ehDy8TJM,IgDz8TP,WAEC,MAAOb,MAAKomB,chD08TNzjB,IgDv8TP,SAAuBC,GAEtB5C,KAAKomB,aAAexjB,GhDw8Td7B,WAAY,KACZC,aAAc,MgDn8TrBL,QAAAC,eAAWu0C,EAAA50C,UAAA,kBhDy8TJM,IgDz8TP,WAEC,MAAOb,MAAKqP,kBhD08TN1M,IgDv8TP,SAA0BC,GAEzBlC,EAAAH,UAAMiP,oBAAmBlQ,KAAAU,KAAC4C,IhDw8TpB7B,WAAY,KACZC,aAAc,MgD56Tdm0C,GAAA50C,UAAA61C,oBAAP,WAECp2C,KAAKo1C,SAASlsC,oBAAoBlJ,KAAKqU,WACvCrU,MAAKqU,WAAWxF,WAMVsmC,GAAA50C,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAO3B,KAAAU,KAEbA,MAAKsJ,SAAW,IAChBtJ,MAAKo1C,SAAW,KAOVD,GAAA50C,UAAA81C,+BAAP,WAECr2C,KAAKi4B,qBAEJ,IAAIj4B,KAAKsvC,UACTtvC,KAAKsvC,UAAUruC,UAmBVk0C,GAAA50C,UAAAiI,MAAP,WAEC,GAAIA,GAAa,GAAI2sC,GAAK,KAAM,KAE1Bn1C,MAAKs2C,aAAa9tC,EAExB,OAAOA,GAGE2sC,GAAA50C,UAAA+1C,aAAP,SAAoB9tC,GAEhBA,EAAM4sC,SAAWp1C,KAAKg2C,SACtBxtC,GAAMc,SAAWtJ,KAAKimB,SACtBzd,GAAM6L,WAAarU,KAAKqU,UACxB7L,GAAMmJ,MAAQ3R,KAAK2R,KACnBnJ,GAAMgT,UAAYxb,KAAKwb,SACvBhT,GAAM+tC,WAAav2C,KAAKu2C,UAGxB/tC,GAAM8L,KAAOtU,KAAKsU,IAClB9L,GAAM2F,aAAenO,KAAKmO,YAC1B3F,GAAMguC,uBAAyBx2C,KAAKw2C,sBACpChuC,GAAMulB,aAAe/tB,KAAK+tB,YAC1BvlB,GAAM2S,cAAgBnb,KAAKmb,aAG3B3S,GAAMiuC,MAAQz2C,KAAKy2C,KACzBjuC,GAAMqD,SAAW7L,KAAK6L,QACtBrD,GAAMsD,QAAU9L,KAAK8L,QAAS9L,KAAK8L,QAAQyI,SAAW,IAEhD,IAAI5E,GAAa3P,KAAKs1C,WAAW/1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAC9BwJ,EAAM8sC,WAAWt2C,GAAGsK,SAAWtJ,KAAKs1C,WAAWt2C,GAAGynB,uBAGtD9W,GAAM3P,KAAKoqB,WACX,KAAKprB,EAAI,EAAGA,EAAI2Q,IAAO3Q,EACnBwJ,EAAMivB,SAASz3B,KAAKuqB,WAAWvrB,GAAGwJ,QAEtC,IAAIxI,KAAKsvC,UACL9mC,EAAMwd,SAAWhmB,KAAKsvC,UAAU9mC,QASpC2sC,GAAA50C,UAAAm2C,0BAAP,SAAiCzsC,GAEhC,MAAOjK,MAAKs1C,WAAWt1C,KAAKg2C,UAAUE,cAAcn5B,QAAQ9S,IAQtDkrC,GAAA50C,UAAA4U,kBAAP,WAECzU,EAAAH,UAAM4U,kBAAiB7V,KAAAU,KAEvB,IAAIhB,GAAUkH,EAAU/F,EAAUwP,CAClC,IAAIsmC,GAAkCj2C,KAAKg2C,UAAUE,aACrD,IAAIn2B,EACJ,IAAI42B,EACJ,IAAI72B,GAAqBm2B,EAAS12C,MAClC,IAAI25B,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAC9B,IAAIqd,GAAiBC,CAErB,IAAI/2B,EAAc,EAAG,CACpB9gB,EAAI,CACJ+gB,GAAUk2B,EAAS,EACnBU,GAAoB52B,EAAQhd,sBAE5B,IAAI/C,KAAKoqB,YAAa,CACrBiP,EAAOr5B,KAAKoV,YAAYhR,OAAS80B,EAAOl5B,KAAKoV,YAAYnS,EACzDq2B,GAAOt5B,KAAKoV,YAAY/Q,QAAU80B,EAAOn5B,KAAKoV,YAAYlS,EAC1Dq2B,GAAOv5B,KAAKoV,YAAYtF,OAASspB,EAAOp5B,KAAKoV,YAAY7O,EACzDqwC,GAAW52C,KAAKoV,YAAYtF,OAAS+mC,EAAW72C,KAAKoV,YAAY7O,OAC3D,CACN2yB,EAAOG,EAAOsd,EAAkB33C,EAChCm6B,GAAOG,EAAOqd,EAAkB33C,EAAI,EACpC,IAAG+gB,EAAQ8L,QAAQ/pB,GAAkB,CACpCs3B,EAAOG,EAAO,CACdsd,GAAWD,EAAW,MAEnB,CACHC,EAAWD,EAAWD,EAAkB33C,EAAI,IAI9C,IAAKkH,EAAI,EAAGA,EAAI4Z,EAAa5Z,IAAK,CACjC6Z,EAAUk2B,EAAS/vC,EACnBywC,GAAoB52B,EAAQhd,sBAC5B4M,GAAMgnC,EAAkBp3C,MACxB,KAAKP,EAAI,EAAGA,EAAI2Q,EAAK3Q,GAAG,EAAG,CAC1BmB,EAAIw2C,EAAkB33C,EACtB,IAAImB,EAAI+4B,EACPA,EAAO/4B,MACH,IAAIA,EAAIk5B,EACZA,EAAOl5B,CAERA,GAAIw2C,EAAkB33C,EAAI,EAE1B,IAAImB,EAAIg5B,EACPA,EAAOh5B,MACH,IAAIA,EAAIm5B,EACZA,EAAOn5B,CAERA,GAAIw2C,EAAkB33C,EAAI,EAE1B,IAAImB,EAAI02C,EACPA,EAAW12C,MACP,IAAIA,EAAIy2C,EACZA,EAAWz2C,EAEb,IAAK4f,EAAQ8L,QAAQ/pB,GAAmB,CACvCs3B,EAAOyd,CACPtd,GAAOqd,GAKT52C,KAAKoV,YAAYhR,MAAQi1B,GAAQr5B,KAAKoV,YAAYnS,EAAIi2B,EACtDl5B,MAAKoV,YAAY/Q,OAASi1B,GAAQt5B,KAAKoV,YAAYlS,EAAIi2B,EACvDn5B,MAAKoV,YAAYtF,MAAQypB,GAAQv5B,KAAKoV,YAAY7O,EAAI6yB,IAKjD+b,GAAA50C,UAAAiV,qBAAP,WAEC9U,EAAAH,UAAMiV,qBAAoBlW,KAAAU,KAE1B,IAAIuW,GAAUvW,KAAK6P,QACnB,IAAIinC,GAAiBvgC,EAAItT,EAAIsT,EAAInS,MAAM,CACvC,IAAI2yC,GAAiBxgC,EAAIrT,EAAIqT,EAAIlS,OAAO,CACxC,IAAI2yC,GAAiBzgC,EAAIhQ,EAAIgQ,EAAIzG,MAAM,CAEvC,IAAI9Q,GAAUkH,EAAU/F,EAAUwP,CAClC,IAAIsmC,GAAkCj2C,KAAKg2C,UAAUE,aACrD,IAAIn2B,EACJ,IAAI42B,EACJ,IAAI72B,GAAqBm2B,EAAS12C,MAClC,IAAI03C,GAA0B,CAC9B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIv3B,EAAc,EAAG,CACpB9gB,EAAI,CACJ+gB,GAAUk2B,EAAS,EACnBU,GAAoB52B,EAAQhd,sBAC5B,KAAKmD,EAAI,EAAGA,EAAI4Z,EAAa5Z,IAAK,CACjC6Z,EAAUk2B,EAAS/vC,EACnBywC,GAAoB52B,EAAQhd,sBAC5B4M,GAAMgnC,EAAkBp3C,MAExB,KAAKP,EAAI,EAAGA,EAAI2Q,EAAK3Q,GAAK,EAAG,CAC5Bm4C,EAAYR,EAAkB33C,GAAK83C,CACnCM,GAAYT,EAAkB33C,EAAI,GAAK+3C,CACvCM,GAAYV,EAAkB33C,EAAI,GAAKg4C,CACvCE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,IAKvBl3C,KAAKyV,eAAexS,EAAI6zC,CACxB92C,MAAKyV,eAAevS,EAAI6zC,CACxB/2C,MAAKyV,eAAelP,EAAIywC,CACxBh3C,MAAKyV,eAAe+gB,OAASpzB,KAAKoB,KAAKyyC,GAQhC9B,GAAA50C,UAAAi1C,wBAAR,SAAgCjnC,GAE/BvO,KAAK0P,qBAQEylC,GAAA50C,UAAAm1C,mBAAR,SAA2BnnC,GAE1BvO,KAAKm2C,WAAW5nC,EAAMtE,aAQfkrC,GAAA50C,UAAAq1C,qBAAR,SAA6BrnC,GAE5B,GAAIunC,EACJ,IAAI/1B,GAA0BxR,EAAMtE,WACpC,IAAI0F,GAAa3P,KAAKs1C,WAAW/1C,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAI2Q,IAAO3Q,EAAG,CAEzB82C,EAAU91C,KAAKs1C,WAAWt2C,EAE1B,IAAI82C,EAAQ7rC,aAAe8V,EAAS,CACnC+1B,EAAQ70C,SAERjB,MAAKs1C,WAAWt4B,OAAOhe,EAAG,EAE1B,UAIA2Q,CACF,MAAO3Q,EAAI2Q,IAAO3Q,EACjBgB,KAAKs1C,WAAWt2C,GAAG8mB,QAAU9mB,EAQvBm2C,GAAA50C,UAAA41C,WAAR,SAAmBlsC,GAElB,GAAIqtC,GAA6BpC,EAAYqC,SAASttC,EAEtD,IAAI6rC,GAAmB,GAAIwB,GAAartC,EAAajK,KAAM,KAC3D,IAAI2P,GAAa3P,KAAKs1C,WAAW/1C,MAEjCu2C,GAAQhwB,QAAUnW,CAElB3P,MAAKs1C,WAAW3lC,GAAOmmC,CAEvB91C,MAAK0P,qBAYCylC,GAAA50C,UAAA6I,gBAAP,SAAuBI,EAAkCyT,GAExDjd,KAAK+a,qBAAqBy8B,gBAAkB,IAE5C,IAAI1B,EAEJ,IAAInmC,GAAa3P,KAAKy3C,UAAUl4C,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAAG,CACpC82C,EAAU91C,KAAKy3C,UAAUz4C,EAEzB,IAAI82C,EAAQ7rC,YAAYb,gBAAgBpJ,KAAK0R,kBAAmBokC,EAAQxsC,SAAUtJ,KAAK+a,qBAAsBvR,GAA4B,CACxIA,EAA4BxJ,KAAK+a,qBAAqBipB,gBAEtDhkC,MAAK+a,qBAAqBy8B,gBAAkB1B,CAE5C,KAAK74B,EACJ,MAAO,OAIV,MAAOjd,MAAK+a,qBAAqBy8B,iBAAmB,KAS9CrC,GAAA50C,UAAA+c,eAAP,SAAsBC,GAKrB,GAAIvd,KAAKiV,eACRjV,KAAKiV,eAAeC,YAErB,IAAIvF,GAAsB3P,KAAKs1C,WAAW/1C,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAI2Q,EAAK3Q,IACxCue,EAASoyB,uBAAuB3vC,KAAKs1C,WAAWt2C,IAG3Cm2C,GAAA50C,UAAAm3C,iCAAP,WAEC,GAAI/nC,GAAa3P,KAAKs1C,WAAW/1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKs1C,WAAWt2C,GAAGunB,iCAGd4uB,GAAA50C,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUo0B,iBAAiB5vC,MAGrBm1C,GAAA50C,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUq0B,mBAAmB7vC,MAkBvBm1C,GAAA50C,UAAA+F,aAAP,SAAoBrD,EAAUC,EAAU0U,EAA2B6hB,GAA3B,GAAA7hB,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAA6hB,QAAA,GAAyB,CAAzBA,EAAA;CAGlE,GAAGz5B,KAAK6L,YAAY,IAAM4tB,EAAU,MAAO,MAI3C,IAAGz5B,KAAKuZ,SAAS,MAAM,MAAO,MhDq2TxB,IgDj2TFo+B,GAAc33C,KAAK0V,cAAc,GAAI5K,GAAM7H,EAAEC,GAEjD,IAAGlD,KAAKo1C,SAAU,CACjB,GAAGp1C,KAAK6P,SAASmoB,SAAS2f,EAAM10C,EAAG00C,EAAMz0C,EAAG,GAAG,CAC9C,IAAK0U,EACJ,MAAO,KAER,KAAI,GAAI1R,GAAW,EAAGA,EAAIlG,KAAKo1C,SAASc,cAAc32C,OAAQ2G,IAAK,CAClE,GAAIlG,KAAKo1C,SAASc,cAAchwC,GAAGI,aAAaqxC,EAAM10C,EAAG00C,EAAMz0C,EAAG,GAAI,ChDi2TnD,GgD91Tdy2B,GAAiC35B,KAAK8L,OAC1C,IAAI6tB,EAAW,CACd,GAAIie,GAAqC53C,KAAK,oBAE9C,IAAI43C,EAAc,CACjBje,EAAYie,EAEb,IAAK,GAAIhe,GAAgB,EAAGA,EAASD,EAAUp6B,OAAQq6B,IAAU,CAChE,GAAIC,GAA2BF,EAAUC,EACzC,IAAIC,EAAWnlB,OAAQ,CACtB,GAAIglB,GAAmBG,EAAWvzB,aAAarD,EAAGC,EAAG0U,EAAW,KAChE,IAAI8hB,EAAS,MAAO,YAInB,CACH,MAAO,UAQZ,GAAIme,GAAc,KAClBA,GAAMn3C,EAAAH,UAAM+F,aAAYhH,KAAAU,KAACiD,EAAGC,EAAG0U,EAAW6hB,EAC1C,IAAGoe,EAAK,MAAO,KAEf,OAAO,OA3oBM1C,GAAAj0C,UAAmB,cA6oBlC,OAAAi0C,IA/oBmB30B,EAipBL/gB,GAAAJ,QAAL81C,IhDg2TNx2B,6BAA6Bvd,UAAUK,2CAA2C,2CAA2C2d,mCAAmC,mCAAmCkD,uDAAuD,uDAAuDrC,0CAA0C,0CAA0C63B,sCAAsC,wCAAwCxpB,yCAAyC,SAAS/vB,EAAQkB,EAAOJ,GACvhB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiD/gVtB,IAAO03C,GAAKx5C,EAAW,+BAIvB,IAAOiiB,GAAsBjiB,EAAW,uDAKxC,IAAOy5C,GAAUz5C,EAAW,uCAI5B,IAAOqoB,GAAQroB,EAAW,mCAC1B,IAAO05C,GAAkB15C,EAAW,iDAEpC,IAAMooB,GAAS,SAAAjmB,GAASX,EAAlB4mB,EAASjmB,EA0CX,SA1CEimB,GA0CUuxB,GA1ChB,GAAA1sC,GAAAxL,IA0CgB,IAAAk4C,QAAA,GAAwB,CAAxBA,EAAA,KAERx3C,EAAApB,KAAAU,KA1BIA,MAAAm4C,MAAgB,IA2BpBn4C,MAAKo4C,sBACLp4C,MAAKq4C,oBAAsB,CAC3Br4C,MAAKs4C,2BAA6B,CAClCt4C,MAAKu4C,QAAQ,IACbv4C,MAAKw4C,WAAa,IAClBx4C,MAAKy4C,UAAU,KAEfz4C,MAAK04C,KAAO,EACZ14C,MAAKu/B,MAAQ,CACbv/B,MAAK24C,YAAc,GAAIZ,GAAMA,EAAMa,YACnC54C,MAAK64C,sBAAwB,IAE7B74C,MAAK84C,aAAe,SAACvqC,GAAqB,MAAA/C,GAAK8d,kBAAoB,EACnEtpB,MAAK+4C,YAAc,SAACxqC,GAAqB,MAAA/C,GAAK8d,kBAAoB,EAClEtpB,MAAKg5C,aAAe,SAACzqC,GAAqB,MAAA/C,GAAK8d,kBAAoB,EACnEtpB,MAAKi5C,WAAa,SAAC1qC,GAAqB,MAAA/C,GAAK8d,kBAAoB9d,EAAK8d,mBAAqB,EAAG,EAAI,EAElGtpB,MAAKk5C,UAAYhB,GAAY,GAAItxB,GA9BxCjmB,OAAAC,eAAW+lB,EAAApmB,UAAA,WjDmgVJM,IiDngVP,WAEC,MAA2Bb,MAAKiP,UjDogV1BtM,IiDjgVP,SAAmBC,GAElB5C,KAAKiP,SAAWrM,GjDkgVV7B,WAAY,KACZC,aAAc,MiDz+UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,UjD4+UPM,IiD5+UJ,WAEI,MAAOb,MAAKu4C,SjD6+UZ51C,IiD3+UJ,SAAkBC,GAEd5C,KAAKu4C,QAAU31C,GjD4+Uf7B,WAAY,KACZC,aAAc,MiDz+UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,YjD4+UPM,IiD5+UJ,WAEI,MAAOb,MAAKk5C,WjD6+UZv2C,IiD3+UJ,SAAoBC,GAEhB5C,KAAKk5C,UAAYt2C,GjD4+UjB7B,WAAY,KACZC,aAAc,MiD3+UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,QjD8+UPM,IiD9+UJ,WAEI,MAAOb,MAAKm4C,OjD++UZx1C,IiD5+UJ,SAAgBC,GAEZ5C,KAAKm4C,MAAQv1C,GjD6+Ub7B,WAAY,KACZC,aAAc,MiD3+UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,ajD8+UPM,IiD9+UJ,WAEI,MAAOb,MAAKk5C,UAAUC,WjD++UtBp4C,WAAY,KACZC,aAAc,MiD7+UX2lB,GAAApmB,UAAA4oB,YAAP,SAAmBC,GAGfppB,KAAKk5C,UAAU/vB,YAAYnpB,KAAMopB,GAGrCzoB,QAAAC,eAAW+lB,EAAApmB,UAAA,qBjD8+UPM,IiD9+UJ,WAEI,MAAOb,MAAKq4C,oBjDk/UZ11C,IiD56UJ,SAA6BC,GAEzB,GAAG5C,KAAKk5C,UAAUC,UAAW,CACzBv2C,EAAQQ,KAAKC,MAAMT,EACnB,IAAIA,EAAQ,EACRA,EAAQ,MACP,IAAIA,GAAS5C,KAAKk5C,UAAUC,UAC7Bv2C,EAAQ5C,KAAKk5C,UAAUC,UAAY,CAEvCn5C,MAAKo5C,aAAe,IAGpBp5C,MAAKk5C,UAAU3vB,UAAUvpB,KAAM4C,EAE/B5C,MAAKq4C,mBAAqBz1C,IjD26U9B7B,WAAY,KACZC,aAAc,MiD9/UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,4BjDigVPM,IiDjgVJ,WAEI,MAAOb,MAAKs4C,2BjDkgVZ31C,IiD//UJ,SAAoCC,GAEhC5C,KAAKs4C,0BAA4B11C,GjDggVjC7B,WAAY,KACZC,aAAc,MiD9/UX2lB,GAAApmB,UAAA84C,MAAP,WAGI,GAAGr5C,KAAKwU,QAAQ,CACZxU,KAAKwU,QAAQsX,iBAGjB9rB,KAAKw4C,WAAa,IAClBx4C,MAAKu/B,MAAQ,CACbv/B,MAAKq4C,oBAAsB,CAC3Br4C,MAAKs4C,2BAA6B,CAClC,IAAIt5C,GAASgB,KAAKoqB,WAClB,OAAOprB,IAAI,CACP,GAAIqrB,GAAoBrqB,KAAKuqB,WAAWvrB,EACxCgB,MAAKwU,QAAQoX,uBAAuBvB,EACpCrqB,MAAKsqB,cAActrB,GAavB,GAAGgB,KAAK0U,QAAQ,KAAK,CACjB1U,KAAKo5C,aAAe,IACpB,IAAIp5C,KAAKk5C,UAAUC,UACfn5C,KAAKk5C,UAAU3vB,UAAUvpB,KAAM,EACnCA,MAAKq4C,mBAAqB,GAmB3B1xB,GAAApmB,UAAAspB,sBAAP,SAA6BjnB,GACzB5C,KAAKo5C,aAAe,IACpBp5C,MAAKq4C,mBAAqBz1C,EAuBvB+jB,GAAApmB,UAAA2tB,mBAAP,WAEIluB,KAAKy4C,UAAY,IAEjBz4C,MAAKq9B,MAELr9B,MAAKyP,iBAAiBuoC,EAAWsB,WAAYt5C,KAAK84C,aAClD94C,MAAKyP,iBAAiBuoC,EAAWuB,UAAWv5C,KAAK+4C,YACjD/4C,MAAKyP,iBAAiBuoC,EAAWwB,WAAYx5C,KAAKg5C,aAClDh5C,MAAKyP,iBAAiBuoC,EAAWyB,SAAUz5C,KAAKi5C,YAG7CtyB,GAAApmB,UAAAm5C,sBAAP,WAEI15C,KAAKuP,oBAAoByoC,EAAWsB,WAAYt5C,KAAK84C,aACrD94C,MAAKuP,oBAAoByoC,EAAWuB,UAAWv5C,KAAK+4C,YACpD/4C,MAAKuP,oBAAoByoC,EAAWwB,WAAYx5C,KAAKg5C,aACrDh5C,MAAKuP,oBAAoByoC,EAAWyB,SAAUz5C,KAAKi5C,YAIhDtyB,GAAApmB,UAAA8qB,gBAAP,SAAuBhB,EAAqBva,EAAc6nB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAGtDtN,EAAMwuB,sBAAwB,IACpCn4C,GAAAH,UAAM8qB,gBAAe/rB,KAAAU,KAACqqB,EAAOva,EAAO6nB,EAG9B,OAAOtN,GAGX1pB,QAAAC,eAAW+lB,EAAApmB,UAAA,OjD69UPM,IiD79UJ,WAEI,MAAOb,MAAK04C,MjD89UZ/1C,IiD39UJ,SAAeg3C,GAEX35C,KAAK04C,KAAOiB,GjD49UZ54C,WAAY,KACZC,aAAc,MiD19UlBL,QAAAC,eAAW+lB,EAAApmB,UAAA,ajD69UPM,IiD79UJ,WAEI,MAAO8lB,GAAUzlB,WjD89UjBH,WAAY,KACZC,aAAc,MiDz9UX2lB,GAAApmB,UAAAq5C,KAAP,WAEI55C,KAAKw4C,WAAa,KAMf7xB,GAAApmB,UAAA4c,OAAP,SAAc08B,GjD+9UV,GiD39UIC,GAAqB12C,KAAKC,MAAM,IAAKrD,KAAK04C,KAG9C14C,MAAKu/B,OAASn8B,KAAKsB,IAAIm1C,EAAWC,EAElC,IAAI95C,KAAKu/B,OAASua,EAAa,CAC3B95C,KAAKu/B,MAAQ,CACbv/B,MAAK+5C,cAEL9B,GAAmB+B,eAGnBh6C,MAAK2b,cAAc3b,KAAK24C,YAExBV,GAAmB+B,iBAMpBrzB,GAAApmB,UAAA0oB,0BAAP,SAAiC7gB,GAE7B,IAAKpI,KAAKo4C,oBAAoBhwC,GAAK,CAC/BpI,KAAKo4C,oBAAoBhwC,GAAMpI,KAAKk5C,UAAUjwB,0BAA0B7gB,GAG5E,MAAOpI,MAAKo4C,oBAAoBhwC,GAG7Bue,GAAApmB,UAAAqoB,sBAAP,SAA6BhmB,GAEzBq1C,EAAmBgC,oBAAoBj6C,KAAM4C,GAE1C+jB,GAAApmB,UAAA25C,cAAP,SAAqB9xC,GAEjBpI,KAAKy3B,SAASz3B,KAAKipB,0BAA0B7gB,IAG1Cue,GAAApmB,UAAA45C,gBAAP,SAAuB/xC,GAEnBpI,KAAK2U,YAAY3U,KAAKo4C,oBAAoBhwC,IAMvCue,GAAApmB,UAAA88B,KAAP,WAEIr9B,KAAKw4C,WAAa,MAGf7xB,GAAApmB,UAAAiI,MAAP,SAAa4L,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAETA,EAA0B1T,EAAAH,UAAMiI,MAAKlJ,KAAAU,KAACoU,GAAe,GAAIuS,GAAU3mB,KAAKk5C,WAExE9kC,GAAYskC,KAAO14C,KAAK04C,IACxBtkC,GAAY+jC,MAAQn4C,KAAKm4C,KAEzB,OAAO/jC,GAGPuS,GAAApmB,UAAAya,WAAP,SAAkBpY,GAEjBlC,EAAAH,UAAMya,WAAU1b,KAAAU,KAAC4C,EACX5C,MAAKq5C,QAKF1yB,GAAApmB,UAAAw5C,aAAP,SAAoBK,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,MAEhB,GAAGp6C,KAAKk5C,UAAUC,UAAW,CACzB,GAAIn6C,EACJ,IAAIq7C,GAAgBr6C,KAAKq4C,kBACzB,IAAIiC,GAAWt6C,KAAKw4C,aAAex4C,KAAKo5C,cAAiBiB,IAAkB,CAC3E,IAAIC,GAAWD,GAAiBr6C,KAAKk5C,UAAUC,UAAY,IAAMn5C,KAAKm4C,MAAO,CACzEmC,EAAU,MAEd,GAAIA,GAAWD,GAAiB,GAAKr6C,KAAKk5C,UAAUC,WAAa,EAAG,CAEhEn5C,KAAKq4C,mBAAqB,CAC1BiC,GAAU,MAEd,GAAIA,EAAS,GAEPt6C,KAAKq4C,kBACP,IAAIr4C,KAAKq4C,oBAAsBr4C,KAAKk5C,UAAUC,UAAW,CAErDn5C,KAAKspB,kBAAkB,MAEtB,IAAI+wB,GAAiBr6C,KAAKq4C,mBAAmB,CAE9Cr4C,KAAKk5C,UAAUpvB,mBAAmB9pB,OAI1C,IAAKo6C,EACDp6C,KAAKu6C,kBAGbv6C,KAAKo5C,aAAe,MAGhBzyB,GAAApmB,UAAAg6C,gBAAR,WAEI,GAAI5qC,GAAM3P,KAAKoqB,WACf,KAAK,GAAIprB,GAAI,EAAGA,EAAK2Q,IAAO3Q,EAAG,CAC3B,GAAIqrB,GAAQrqB,KAAKuqB,WAAWvrB,EAC5B,IAAIqrB,YAAiB1D,GACL0D,EAAO0vB,gBAQ/BpzB,GAAApmB,UAAAi6C,aAAA,SAAa1qC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAET9P,KAAKy6C,mBAAmB3qC,EAAO9P,KAE/B,IAAI2P,GAAM3P,KAAKoqB,WACf,KAAK,GAAIprB,GAAI,EAAGA,EAAI2Q,EAAK3Q,IAAK,CAC1B,GAAIqrB,GAAQrqB,KAAKuqB,WAAWvrB,EAE5B,IAAIqrB,YAAiB1D,GACL0D,EAAOmwB,aAAa1qC,EAAQ,OAExC9P,MAAKy6C,mBAAmB3qC,EAAQ,EAAGua,IAI/C1D,GAAApmB,UAAAk6C,mBAAA,SAAmB3qC,EAAciI,GAE7B,GAAIoQ,GAAM,EACV,KAAK,GAAInpB,GAAI,EAAGA,EAAI8Q,IAAS9Q,EACzBmpB,GAAO,IAEXA,IAAO,IAAMpQ,EAAOzD,KAAO,MAAQyD,EAAOlM,QAC1C2e,SAAQC,IAAItC,GAGhBxB,GAAApmB,UAAAm6C,6BAAA,WAEI,MAAO,MA7YG/zB,GAAAzlB,UAAmB,mBA+YrC,OAAAylB,IAjZwBnG,EAkZxB/gB,GAAmBJ,QAAVsnB,IjD27UNg0B,+BAA+Bv5C,UAAUslB,mCAAmC,mCAAmCpE,uDAAuD,uDAAuDs4B,uCAAuC,uCAAuCC,iDAAiD,mDAAmDC,0CAA0C,SAASv8C,EAAQkB,EAAOJ,GACpd,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDj2VtB,IAAOuK,GAAQrM,EAAgB,gCAC/B,IAAOwM,GAAQxM,EAAgB,gCAE/B,IAAOmiB,GAASniB,EAAe,oCAC/B,IAAO0M,GAAU1M,EAAe,uCAIhC,IAAOw8C,GAAmBx8C,EAAa,iEAEvC,IAAMy8C,GAAU,SAAAt6C,GAASX,EAAnBi7C,EAAUt6C,EAMf,SANKs6C,KAQJt6C,EAAApB,KAAAU,KANMA,MAAAi7C,SAAkB,GAClBj7C,MAAAk7C,UAAmB,GAOzBl7C,MAAKiR,WAAa,IAElBjR,MAAKm7C,gBAAkB,GAAGn7C,KAAKk7C,UAAUl7C,KAAKk7C,UAAYl7C,KAAKi7C,SAASj7C,KAAKi7C,SAG7Ej7C,MAAK+O,YAAc9D,EAAW4rB,OAGxBmkB,EAAAz6C,UAAAuhB,oBAAP,WAEC,MAAO,IAAIi5B,GAGZp6C,QAAAC,eAAWo6C,EAAAz6C,UAAA,UlDs1VJM,IkDt1VP,WAEC,MAAOb,MAAKi7C,UlDu1VNt4C,IkDp1VP,SAAkBC,GAEjB5C,KAAKi7C,SAAWr4C,CAEhB,IAAI5C,KAAKi7C,SAAW,EAAG,CACtBj7C,KAAKi7C,SAAW,MACV,IAAIj7C,KAAKi7C,SAAWj7C,KAAKk7C,UAAW,CAC1Cl7C,KAAKk7C,UAAYl7C,KAAKi7C,QACtBj7C,MAAK0P,qBAEN1P,KAAKm7C,gBAAkB,GAAIn7C,KAAKk7C,UAAUl7C,KAAKk7C,UAAYl7C,KAAKi7C,SAASj7C,KAAKi7C,WlDq1VxEl6C,WAAY,KACZC,aAAc,MkDn1Vdg6C,GAAAz6C,UAAA66C,eAAP,WAEC,MAAOp7C,MAAKm7C,gBAGbx6C,QAAAC,eAAWo6C,EAAAz6C,UAAA,WlDo1VJM,IkDp1VP,WAEC,MAAOb,MAAKk7C,WlDq1VNv4C,IkDl1VP,SAAmBC,GAElB5C,KAAKk7C,UAAYt4C,CAEjB,IAAI5C,KAAKk7C,UAAY,EACpBl7C,KAAKk7C,UAAY,CAElB,IAAIl7C,KAAKk7C,UAAYl7C,KAAKi7C,SACzBj7C,KAAKi7C,SAAWj7C,KAAKk7C,SAEtBl7C,MAAKm7C,gBAAkB,GAAIn7C,KAAKk7C,UAAUl7C,KAAKk7C,UAAYl7C,KAAKi7C,SAASj7C,KAAKi7C,SAC9Ej7C,MAAK0P,sBlDg1VC3O,WAAY,KACZC,aAAc,MkD90Vdg6C,GAAAz6C,UAAAiV,qBAAP,WAEC9U,EAAAH,UAAMiV,qBAAoBlW,KAAAU,KAE1BA,MAAKyV,eAAe+gB,OAASx2B,KAAKk7C,UAG5BF,GAAAz6C,UAAA6hB,2BAAP,SAAkCC,EAAgB3I,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAe,GAAI5S,OAAc,GACrC,IAAIkT,GAAa,GAAI9N,EAGrB8N,GAAE9H,SAASyR,EAAO5I,wBAAwBC,GAC1ChB,GAAEo5B,OAAO9xC,KAAKyQ,SAAS6E,sBACvBtV,MAAK8X,OAAOY,EAAE5C,SAEd4C,GAAE9H,SAASyR,EAAO5I,wBAAwBC,GAC1ChB,GAAEo5B,OAAO9xC,KAAKsV,sBAEd,IAAIiB,GAAU8L,EAAOxS,QACrB,IAAIwrC,GAAc3iC,EAAE+vB,qBAAqB,GAAI19B,GAASwL,EAAI9Q,KAAM8Q,EAAI1Q,OAAQ0Q,EAAI+kC,OAChF,IAAIC,GAAc7iC,EAAE+vB,qBAAqB,GAAI19B,GAASwL,EAAI7Q,MAAO6Q,EAAI3Q,IAAK2Q,EAAIilC,MAC9E,IAAIC,GAAYJ,EAAGp4C,EAAEo4C,EAAGp4C,EAAIo4C,EAAGn4C,EAAEm4C,EAAGn4C,EAAIm4C,EAAG90C,EAAE80C,EAAG90C,CAChD,IAAIm1C,GAAYH,EAAGt4C,EAAEs4C,EAAGt4C,EAAIs4C,EAAGr4C,EAAEq4C,EAAGr4C,EAAIq4C,EAAGh1C,EAAEg1C,EAAGh1C,CAChD,IAAItG,GAAWmD,KAAKoB,KAAKi3C,EAAKC,EAAID,EAAKC,EACvC,IAAIrI,EACJ,IAAIC,EAEJ,IAAI/sC,GAAWmS,EAAEtF,QAAQ,GACzBigC,GAAO9sC,EAAItG,CACXqzC,GAAO/sC,EAAItG,CAEXmY,GAAI,GAAKA,EAAI,GAAKi7B,EAAKpzC,CACvBmY,GAAI,IAAMk7B,GAAMA,EAAOD,EACvBj7B,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOi7B,EAAKj7B,EAAI,GAEpB,KAAKL,EACJA,EAAS,GAAInN,EAEdmN,GAAOY,gBAAgBP,EACvBL,GAAOwE,QAAQ7D,EAEf,OAAOX,GAGDijC,GAAAz6C,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAUmgC,qBAAqB37C,MAGzBg7C,GAAAz6C,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAUogC,uBAAuB57C,MAEnC,OAAAg7C,IA1HyBt6B,EA4HLjhB,GAAAJ,QAAX27C,IlDm0VNv8B,gCAAgCrd,UAAUyd,gCAAgCzd,UAAUmf,oCAAoC,oCAAoCvB,uCAAuC,uCAAuC68B,iEAAiE,mEAAmEC,qCAAqC,SAASv9C,EAAQkB,EAAOJ,GAC9a,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmD/8VtB,IAAOkL,GAAahN,EAAc,wCnDg+VlC,ImD/8VMw9C,GAAK,SAAAr7C,GAASX,EAAdg8C,EAAKr7C,EAgBV,SAhBKq7C,KAkBJr7C,EAAApB,KAAAU,MAVDW,OAAAC,eAAIm7C,EAAAx7C,UAAA,YnDo9VGM,ImDp9VP,WAEC,MAAOb,MAAKg8C,WnDq9VNj7C,WAAY,KACZC,aAAc,MmD38Vd+6C,GAAAx7C,UAAAiI,MAAP,WAEC,GAAIA,GAAc,GAAIuzC,EACtBvzC,GAAMmJ,MAAQ3R,KAAK2R,KACnBnJ,GAAM6L,WAAarU,KAAKqU,UACxB7L,GAAM8L,KAAOA,IACb9L,GAAMqD,SAAW7L,KAAK6L,QACtBrD,GAAMsD,QAAU9L,KAAK8L,QAAS9L,KAAK8L,QAAQyI,SAAW,IACtD/L,GAAMwzC,UAAYh8C,KAAKg8C,SACvB,OAAOxzC,GAET,OAAAuzC,IAhCoBxwC,EAkCpB9L,GAAeJ,QAAN08C,InD88VNxxC,wCAAwC,0CAA0C0xC,sCAAsC,SAAS19C,EAAQkB,EAAOJ,GACnJ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDtgWtB,IAAO67C,GAAS39C,EAAe,iCAO/B,IAAOgN,GAAahN,EAAc,wCAGlC,IAAO0M,GAAU1M,EAAe,uCpDsgWhC,IoDx/VM49C,GAAM,SAAAz7C,GAASX,EAAfo8C,EAAMz7C,EA4MX,SA5MKy7C,GA4MOC,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEX17C,EAAApB,KAAAU,KAzMMA,MAAAq8C,iBAA0B,CAG1Br8C,MAAAs8C,YAAqBJ,EAAUxO,MAC9B1tC,MAAAu8C,SAA0B,GAAI/2C,MAC9BxF,MAAA+lB,aAAkC,GAAIvgB,MAItCxF,MAAAw8C,QAAkB,KAClBx8C,MAAAy8C,QAAkB,IAiMzBz8C,MAAKiR,WAAa,IAClBjR,MAAK08C,QAAU,GAAIl3C,OAAwBxF,KAE3CA,MAAKo8C,QAAUA,CAGfp8C,MAAK+O,YAAc9D,EAAW6rB,KA9L/Bn2B,OAAAC,eAAWu7C,EAAA57C,UAAA,kBpD4/VJM,IoD5/VP,WAEC,MAAOb,MAAKq8C,kBpD6/VN15C,IoD1/VP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAKq8C,kBAAoBz5C,EAC5B,MAED5C,MAAKq8C,iBAAmBz5C,CAExB5C,MAAK28C,uBpDw/VC57C,WAAY,KACZC,aAAc,MoDn/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,UpDy/VJM,IoDz/VP,WAEC,MAAOb,MAAKw8C,SpD0/VN75C,IoDv/VP,SAAkBC,GAEjB,GAAI5C,KAAKw8C,SAAW55C,EACnB,MAED5C,MAAKw8C,QAAU55C,CAEf5C,MAAK28C,uBpDs/VC57C,WAAY,KACZC,aAAc,MoDj/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,UpDu/VJM,IoDv/VP,WAEC,MAAOb,MAAKy8C,SpDw/VN95C,IoDr/VP,SAAkBC,GAEjB,GAAI5C,KAAKy8C,SAAW75C,EACnB,MAED5C,MAAKy8C,QAAU75C,CAEf5C,MAAK28C,uBpDo/VC57C,WAAY,KACZC,aAAc,MoD5+VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,epDq/VJM,IoDr/VP,WAEC,MAAOb,MAAK48C,epDs/VN77C,WAAY,KACZC,aAAc,MoDj/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,gBpDu/VJM,IoDv/VP,WAEC,MAAOb,MAAK68C,epDw/VN97C,WAAY,KACZC,aAAc,MoD5+VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,apDy/VJM,IoDz/VP,WAEC,MAAOb,MAAKs8C,apD0/VN35C,IoDv/VP,SAAqBC,GAEpB,GAAI5C,KAAKs8C,aAAe15C,EACvB,MAED5C,MAAKs8C,YAAc15C,CAEnB5C,MAAK88C,sBpDs/VC/7C,WAAY,KACZC,aAAc,MoDp/Vdm7C,GAAA57C,UAAAu8C,mBAAP,WAEC,GAAIntC,GAAa3P,KAAKu8C,SAASh9C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAKu8C,SAASv9C,GAAG+9C,mBAQZZ,GAAA57C,UAAAo8C,oBAAP,WAEC,GAAIhtC,GAAa3P,KAAKu8C,SAASh9C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAKu8C,SAASv9C,GAAGg+C,mBAQnBr8C,QAAAC,eAAWu7C,EAAA57C,UAAA,WpDm/VJM,IoDn/VP,WAEC,MAAOb,MAAK08C,SpDo/VN37C,WAAY,KACZC,aAAc,MoDl/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,YpDq/VJM,IoDr/VP,WAEC,MAAOb,MAAKsvC,WpDs/VNvuC,WAAY,KACZC,aAAc,MoDj/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,epDu/VJM,IoDv/VP,WAEC,MAAOb,MAAKomB,cpDw/VNzjB,IoDr/VP,SAAuBC,GAEtB5C,KAAKomB,aAAexjB,GpDs/Vd7B,WAAY,KACZC,aAAc,MoDl/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,kBpDw/VJM,IoDx/VP,WAEC,MAAOb,MAAKsmB,iBpDy/VN3jB,IoDt/VP,SAA0BC,GAEzB5C,KAAKsmB,gBAAkB1jB,GpDu/VjB7B,WAAY,KACZC,aAAc,MoDn/VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,WpDy/VJM,IoDz/VP,WAEC,MAAOb,MAAKi9C,UpD0/VNt6C,IoDv/VP,SAAmBC,GAGlB,GAAIA,GAAS5C,KAAKi9C,SACjBj9C,KAAK88C,oBAEN98C,MAAKi9C,SAAWr6C,GpDu/VV7B,WAAY,KACZC,aAAc,MoDn+VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,apDs+VJM,IoDt+VP,WAEC,MAAOs7C,GAAOj7C,WpDu+VRH,WAAY,KACZC,aAAc,MoDr+VrBL,QAAAC,eAAWu7C,EAAA57C,UAAA,gBpDw+VJM,IoDx+VP,WAEC,MAAO,QpDy+VDE,WAAY,KACZC,aAAc,MoDn+Vdm7C,GAAA57C,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAI2Q,EAEJA,GAAM3P,KAAKu8C,SAASh9C,MACpB,KAAKP,EAAI,EAAGA,EAAI2Q,EAAK3Q,IACpBgB,KAAKu8C,SAASv9C,GAAGiC,SAElBjB,MAAKu8C,SAAW,GAAI/2C,MAEpB,IAAImK,GAAa3P,KAAK+lB,aAAaxmB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK+lB,aAAa/mB,GAAGiC,SAEtBjB,MAAK+lB,aAAe,GAAIvgB,OAGlB22C,GAAA57C,UAAA+c,eAAP,SAAsBC,IAKf4+B,GAAA57C,UAAA28C,YAAP,SAAmB5a,GAElBtiC,KAAKu8C,SAASl2C,KAAKi8B,EAEnB,OAAOA,GAGD6Z,GAAA57C,UAAA48C,eAAP,SAAsB7a,GAErBtiC,KAAKu8C,SAASv/B,OAAOhd,KAAKu8C,SAASx/B,QAAQulB,GAAS,EAEpD,OAAOA,GAGD6Z,GAAA57C,UAAAqc,gBAAP,SAAuBC,GAEtB7c,KAAK+lB,aAAa1f,KAAKwW,EAEvB,OAAOA,GAIDs/B,GAAA57C,UAAAuc,mBAAP,SAA0BD,GAEzB,GAAI1W,GAAenG,KAAK+lB,aAAahJ,QAAQF,EAE7C7c,MAAK+lB,aAAa/I,OAAO7W,EAAO,EAEhC,OAAO0W,GAGDs/B,GAAA57C,UAAAyb,iBAAP,SAAwBR,GAEvBA,EAAU4hC,iBAAiBp9C,MAGrBm8C,GAAA57C,UAAAub,mBAAP,SAA0BN,GAEzBA,EAAU6hC,mBAAmBr9C,MAlShBm8C,GAAAj7C,UAAmB,gBAoSlC,OAAAi7C,IAtSqB5wC,EAwSrB9L,GAAgBJ,QAAP88C,IpDm9VNmB,iCAAiCl8C,UAAUmJ,wCAAwC,wCAAwCyU,uCAAuC,yCAAyCu+B,yCAAyC,SAASh/C,EAAQkB,EAAOJ,GAC/Q,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDvxWtB,IAAOoiB,GAAclkB,EAAc,4CAEnC,IAAOoD,GAAgBpD,EAAc,8CASrC,IAAOi/C,GAAaj/C,EAAc,wCAIlC,IAAO42C,GAAI52C,EAAiB,mCAC5B,IAAO+gB,GAAQ/gB,EAAgB,mCAE/B,IAAOuD,GAAgBvD,EAAc,2CrD41WrC,IqDxwWMk/C,GAAS,SAAA/8C,GAASX,EAAlB09C,EAAS/8C,EAqnBd,SArnBK+8C,KAunBJ/8C,EAAApB,KAAAU,KAAM,GAAIsf,GA3mBHtf,MAAA09C,MAAe,EA4mBtB19C,MAAKsT,KAAOkqC,EAAcG,OArhB3Bh9C,OAAAC,eAAW68C,EAAAl9C,UAAA,arDyrWJM,IqDzrWP,WAEC,MAAO48C,GAAUv8C,WrD0rWXH,WAAY,KACZC,aAAc,MqD1oWrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,iBrDspWJM,IqDtpWP,WAEC,MAAOb,MAAK49C,gBrDupWN78C,WAAY,KACZC,aAAc,MqD5oWrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,crDwpWJM,IqDxpWP,WAEC,MAAOb,MAAK69C,arDypWN98C,WAAY,KACZC,aAAc,MqD9iWrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,UrDqjWJM,IqDrjWP,WAEC,MAAOb,MAAK89C,SrDsjWN/8C,WAAY,KACZC,aAAc,MqDtiWdy8C,GAAAl9C,UAAAw9C,WAAP,WAEC,MAAO/9C,MAAKg+C,YAMNP,GAAAl9C,UAAA09C,WAAP,WAEC,MAAOj+C,MAAKk+C,YA+Bbv9C,QAAAC,eAAW68C,EAAAl9C,UAAA,YrDihWJM,IqDjhWP,WAEC,MAAOb,MAAKm+C,WrDkhWNp9C,WAAY,KACZC,aAAc,MqDp6VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,uBrD66VJM,IqD76VP,WAEC,MAAOb,MAAKo+C,sBrD86VNr9C,WAAY,KACZC,aAAc,MqDt6VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,qBrD+6VJM,IqD/6VP,WAEC,MAAOb,MAAKq+C,oBrDg7VNt9C,WAAY,KACZC,aAAc,MqDt4VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,QrDi5VJM,IqDj5VP,WAEC,MAAOb,MAAK09C,OrDk5VN/6C,IqD/4VP,SAAgBC,GAEf,GAAI5C,KAAK09C,OAAS96C,EACjB,MAED5C,MAAK09C,MAAQ96C,CACb5C,MAAKs+C,erD+4VCv9C,WAAY,KACZC,aAAc,MqD94VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,crDi5VJM,IqDj5VP,WAEC,MAAOb,MAAKu+C,arDk5VN57C,IqD/4VP,SAAsBC,GAErB,GAAI5C,KAAKu+C,aAAe37C,EACvB,MACD5C,MAAKu+C,YAAc37C,CACnB5C,MAAKs+C,erDg5VCv9C,WAAY,KACZC,aAAc,MqD13VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,uBrDq4VJM,IqDr4VP,WAEC,MAAOb,MAAKw+C,sBrDs4VNz9C,WAAY,KACZC,aAAc,MqDj4VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,arDu4VJM,IqDv4VP,WAEC,MAAOb,MAAKy+C,YrDw4VN97C,IqDt4VP,SAAqBC,GAEpB5C,KAAKy+C,WAAa77C,GrDu4VZ7B,WAAY,KACZC,aAAc,MqDl4VrBL,QAAAC,eAAW68C,EAAAl9C,UAAA,crDw4VJM,IqDx4VP,WAEC,MAAOb,MAAK0+C,arDy4VN/7C,IqDv4VP,SAAsBC,GAErB5C,KAAK0+C,YAAc97C,GrDw4Vb7B,WAAY,KACZC,aAAc,MqD10Vdy8C,GAAAl9C,UAAA+9C,YAAP,WAGC,GAAGt+C,KAAKu+C,aAAa,KACpB,MAGD,KAAK,GAAIv/C,GAASgB,KAAKo1C,SAASc,cAAc32C,OAAO,EAAGP,GAAG,EAAGA,IAC7DgB,KAAKo1C,SAASx1B,kBAAkB5f,KAAKo1C,SAASc,cAAcl3C,GAE7D,IAAGgB,KAAK09C,OAAO,GACd,MAED,IAAIzR,GAAyB,GAAIzmC,MAGjC,IAAIm5C,GAAkB3+C,KAAKu+C,YAAYK,KAAK5+C,KAAKu+C,YAAYM,WAAWC,kBACxE,IAAIC,GAAgB,CACpB,IAAIC,GAA+B,IACnC,IAAI94C,GAAW,CACf,IAAI/B,GAAW,CACf,IAAI86C,GAA0Bj/C,KAAKk/C,KAAKC,WAAWC,MAAM,KACzD,KAAK,GAAIC,GAAK,EAAGA,EAAKJ,EAAU1/C,OAAQ8/C,IAAM,CAC7C,GAAIC,GAAkB,CACtB,IAAIC,KACJ,KAAK,GAAIvgD,GAAI,EAAGA,EAAIigD,EAAUI,GAAI9/C,OAAQP,IAAK,CAC9C,GAAIwgD,GAAoDx/C,KAAKu+C,YAAYM,WAAWY,oBAAoBR,EAAUI,GAAIK,WAAW1gD,GAAGmgD,WACpI,IAAIK,GAAa,KAAM,CACtB,GAAIG,GAAgCH,EAAUI,OAC9C,IAAID,GAAgB,KAAM,CrDy0VP,GqDv0VdE,GAAuB,CAC3B,IAAIb,GAAa,KAAM,CACtB,IAAK,GAAI76C,GAAW,EAAGA,EAAI66C,EAAUc,iBAAiBvgD,OAAQ4E,IAAK,CAClE,GAAI66C,EAAUc,iBAAiB37C,IAAMnE,KAAK09C,MAAMgC,WAAW1gD,GAAI,CAC9D6gD,EAAgBb,EAAUe,cAAc57C,EACxC,SAIHm7C,IAAgBE,EAAUQ,WAAaH,GAAiBlB,EAAc3+C,KAAKu+C,YAAY0B,kBAEnF,CAEJX,GAAYt/C,KAAKu+C,YAAYM,WAAWqB,uBAAyBvB,OAG9D,CAGJW,GAAYt/C,KAAKu+C,YAAYM,WAAWqB,uBAAyBvB,EAElEY,EAAWl5C,KAAKm5C,GAEjB,GAAIW,GAAgB,CACpB,IAAGngD,KAAKu+C,YAAY6B,OAAO,SAAS,CACnCD,GAAUngD,KAAKy+C,WAAWa,GAAY,MAElC,IAAGt/C,KAAKu+C,YAAY6B,OAAO,QAAQ,CACvCD,EAAUngD,KAAKy+C,WAAWa,EAI3B,IAAK,GAAItgD,GAAI,EAAGA,EAAIigD,EAAUI,GAAI9/C,OAAQP,IAAK,CAC9C,GAAIwgD,GAA+BD,EAAWvgD,EAC9C,IAAIwgD,GAAa,KAAM,CACtB,GAAIG,GAAgCH,EAAUI,OAC9C,IAAID,GAAgB,KAAM,CACzB,GAAIU,GAA0BV,EAAa/7C,UAAU/C,IAAI8+C,EAAal7C,YACtE,IAAI67C,GAA0BX,EAAal5C,OAAO5F,IAAI8+C,EAAal7C,YACnE,KAAK,GAAI+C,GAAW,EAAGA,EAAIm4C,EAAal7C,YAAa+C,IAAK,CACzDykC,EAAS/lC,KAAQm6C,EAAW74C,EAAI,GAAKm3C,EAAcwB,CACnDlU,GAAS/lC,KAAQm6C,EAAW74C,EAAI,EAAI,GAAKm3C,EAAcI,CACvD9S,GAAS/lC,KAAOm6C,EAAW74C,EAAI,EAAI,EACnCykC,GAAS/lC,KAAOo6C,EAAW94C,EAAI,EAC/BykC,GAAS/lC,KAAOo6C,EAAW94C,EAAI,EAAI,EACnCykC,GAAS/lC,KAAOlG,KAAKu+C,YAAYgC,UAAU,EAC3CtU,GAAS/lC,KAAOlG,KAAKu+C,YAAYgC,UAAU,GrDw0V1B,GqDr0VdV,GAAuB,CAC3B,IAAIb,GAAa,KAAM,CACtB,IAAK,GAAI76C,GAAW,EAAGA,EAAI66C,EAAUc,iBAAiBvgD,OAAQ4E,IAAK,CAClE,GAAI66C,EAAUc,iBAAiB37C,IAAMnE,KAAK09C,MAAMgC,WAAW1gD,GAAI,CAC9D6gD,EAAgBb,EAAUe,cAAc57C,EACxC,SAIHg8C,IAAcX,EAAUQ,WAAaH,GAAiBlB,EAAc3+C,KAAKu+C,YAAY0B,kBAEjF,CAEJE,GAAUngD,KAAKu+C,YAAYM,WAAWqB,uBAAyBvB,OAG7D,CACHwB,GAAUngD,KAAKu+C,YAAYM,WAAWqB,uBAAyBvB,GAGjEI,GAAU/+C,KAAKu+C,YAAYM,WAAWC,mBAAqBH,EAE5D,GAAIr5B,GAAgC,GAAI7C,GAAeI,aAAc,EACrEyC,GAAe3iB,IAAIspC,EACnB,IAAIuU,GAAoCl7B,EAAem7B,MACvDn7B,GAAerkB,SACf,IAAIy/C,GAAkC,GAAI5+C,GAAiB0+C,EAC3DE,GAAe79C,OAAO,GAAIlB,GAAiB6+C,GAC3CxgD,MAAKo1C,SAAS51B,eAAekhC,EAC7B1gD,MAAKy3C,UAAU,GAAGnuC,SAAStJ,KAAKu+C,YAAYj1C,SAWtCm0C,GAAAl9C,UAAAogD,WAAP,SAAkBC,GACjB5gD,KAAK09C,OAAOkD,EAONnD,GAAAl9C,UAAAsgD,eAAP,YAcOpD,GAAAl9C,UAAAugD,kBAAP,SAAyBC,GAExB,MAAO/gD,MAAKghD,gBAaNvD,GAAAl9C,UAAA0gD,oBAAP,SAA2Bh+C,EAAUC,GAEpC,MAAOlD,MAAKkhD,kBAcNzD,GAAAl9C,UAAA4gD,wBAAP,SAA+BJ,GAE9B,MAAO/gD,MAAKohD,sBAuBN3D,GAAAl9C,UAAA8gD,kBAAP,SAAyBj5C,GAExB,MAAOpI,MAAKshD,gBAaN7D,GAAAl9C,UAAAghD,oBAAP,SAA2Bt+C,EAAUC,GAEpC,MAAOlD,MAAKwhD,kBAaN/D,GAAAl9C,UAAAkhD,mBAAP,SAA0BV,GAEzB,MAAO/gD,MAAK0hD,iBAUNjE,GAAAl9C,UAAAohD,cAAP,SAAqBC,GAEpB,MAAO5hD,MAAK6hD,YAUNpE,GAAAl9C,UAAAuhD,eAAP,SAAsBF,GAErB,MAAO5hD,MAAK+hD,aAYNtE,GAAAl9C,UAAAyhD,cAAP,SAAqBJ,GAEpB,MAAO5hD,MAAKiiD,YAYNxE,GAAAl9C,UAAA2hD,YAAP,SAAmBN,GAElB,MAAO5hD,MAAKmiD,UAeN1E,GAAAl9C,UAAA6hD,mBAAP,SAA0BrB,GAEzB,MAAO/gD,MAAKqiD,iBAqBN5E,GAAAl9C,UAAA+hD,cAAP,SAAqB7pB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAO14B,MAAKu+C,YAoBNd,GAAAl9C,UAAAgiD,oBAAP,SAA2B3/C,IAuBpB66C,GAAAl9C,UAAAiiD,YAAP,SAAmB/pB,EAA2BC,EAAyBkoB,IAkBhEnD,GAAAl9C,UAAAkiD,aAAP,SAAoBhqB,EAA2BC,IAkDxC+kB,GAAAl9C,UAAAmiD,cAAP,SAAqBC,EAAmBlqB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrF+kB,GAAAmF,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGErF,GAAAl9C,UAAAiI,MAAP,WAEI,GAAIA,GAAQ,GAAIi1C,EAChBz9C,MAAK+iD,kBAAkBv6C,EACvB,OAAOA,GAGJi1C,GAAAl9C,UAAAwiD,kBAAP,SAAyBv6C,GAE3BA,EAAM4sC,SAAW,GAAI91B,EAErB9W,GAAM6L,WAAarU,KAAKqU,UACxB7L,GAAMmJ,MAAQ3R,KAAK2R,KACnBnJ,GAAMgT,UAAYxb,KAAKwb,SACvBhT,GAAM+tC,WAAav2C,KAAKu2C,UAGxB/tC,GAAM8L,KAAOtU,KAAKsU,IAClB9L,GAAM2F,aAAenO,KAAKmO,YAC1B3F,GAAMguC,uBAAyBx2C,KAAKw2C,sBACpChuC,GAAMulB,aAAe/tB,KAAK+tB,YAC1BvlB,GAAM2S,cAAgBnb,KAAKmb,aAG3B3S,GAAMiuC,MAAQz2C,KAAKy2C,KACnBjuC,GAAMqD,SAAW7L,KAAK6L,QACtBrD,GAAMsD,QAAU9L,KAAK8L,QAAS9L,KAAK8L,QAAQyI,SAAW,IrD+xVhD,IqDxxVF5E,GAAM3P,KAAKoqB,WACf,IAAIprB,EACJ,KAAKA,EAAI,EAAGA,EAAI2Q,IAAO3Q,EACtBwJ,EAAMivB,SAASz3B,KAAKuqB,WAAWvrB,GAAGwJ,QAInCA,GAAMw6C,UAAUhjD,KAAKgjD,SACrBx6C,GAAMy6C,WAAWjjD,KAAKijD,UAChBz6C,GAAM06C,WAAaljD,KAAKu+C,WAExB/1C,GAAM02C,KAAOl/C,KAAK09C,MAhoCXD,GAAAv8C,UAAmB,mBAkoClC,OAAAu8C,IApoCwBtI,EAsoCL11C,GAAAJ,QAAVo+C,IrD0xVNj6B,4CAA4CpiB,UAAUsI,8CAA8CtI,UAAUK,2CAA2C,2CAA2C2d,mCAAmC,mCAAmC61B,mCAAmC,mCAAmCkO,wCAAwC,0CAA0CC,uCAAuC,SAAS7kD,EAAQkB,EAAOJ,GACpe,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsD5gYtB,IAAOnB,GAAKX,EAAe,+BAE3B,IAAM8kD,GAAS,SAAA3iD,GAASX,EAAlBsjD,EAAS3iD,EAEd,SAFK2iD,GAEOC,GAEX5iD,EAAApB,KAAAU,KAAMsjD,GAER,MAAAD,IANwBnkD,EAQxBO,GAAmBJ,QAAVgkD,ItD8gYNtpB,+BAA+B34B,YAAY+iC,yCAAyC,SAAS5lC,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuD7hYtB,IAAO03C,GAAKx5C,EAAe,+BvDmiY3B,IuD5hYM4gC,GAAW,SAAAz+B,GAASX,EAApBo/B,EAAWz+B,EAMhB,SANKy+B,GAMO7rB,EAAaoG,GAExBhZ,EAAApB,KAAAU,KAAMsT,EAENtT,MAAKujD,QAAU7pC,EAGhB/Y,OAAAC,eAAWu+B,EAAA5+B,UAAA,UvDshYJM,IuDthYP,WAEC,MAAOb,MAAKujD,SvDuhYNxiD,WAAY,KACZC,aAAc,MuDriYPm+B,GAAA8C,mBAA4B,mBAe3C,OAAA9C,IAjB0B4Y,EAmB1Bt4C,GAAqBJ,QAAZ8/B,IvD2hYNwb,+BAA+Bv5C,YAAY6d,gDAAgD,SAAS1gB,EAAQkB,EAAOJ,GACtH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwD1jYtB,IAAO03C,GAAKx5C,EAAe,+BAI3B,IAAM8M,GAAkB,SAAA3K,GAASX,EAA3BsL,EAAkB3K,EAavB,SAbK2K,GAaOiI,EAAakwC,GAExB9iD,EAAApB,KAAAU,KAAMsT,EACNtT,MAAKwjD,OAASA,EAdDn4C,EAAAo4C,kBAA2B,kBAC3Bp4C,GAAA6I,uBAAgC,uBAChC7I,GAAA2I,cAAuB,cACvB3I,GAAAmI,iBAA0B,iBAC1BnI,GAAAqI,iBAA0B,iBAC1BrI,GAAAuI,aAAsB,aACtBvI,GAAAyI,cAAuB,cACpBzI,GAAA4P,+BAAwC,6BAS1D,OAAA5P,IAlBiC0sC,EAoBjCt4C,GAA4BJ,QAAnBgM,IxDujYNsvC,+BAA+Bv5C,YAAY6e,2CAA2C,SAAS1hB,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDplYtB,IAAO03C,GAAKx5C,EAAe,+BzD6lY3B,IyDllYM8gB,GAAa,SAAA3e,GAASX,EAAtBsf,EAAa3e,EAwBlB,SAxBK2e,GAwBO/L,EAAarJ,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBvJ,EAAApB,KAAAU,KAAMsT,EAENtT,MAAKoK,aAAeH,EAMrBtJ,OAAAC,eAAWye,EAAA9e,UAAA,ezDgkYJM,IyDhkYP,WAEC,MAAOb,MAAKoK,czDikYNrJ,WAAY,KACZC,aAAc,MyD3jYdqe,GAAA9e,UAAAiI,MAAP,WAEC,MAAO,IAAI6W,GAAcrf,KAAKsT,KAAMtT,KAAKoK,cAxC5BiV,GAAAK,mBAA4B,kBAK5BL,GAAAQ,qBAA8B,oBAK9BR,GAAAW,eAAwB,eAgCvC,OAAAX,IA/C4B04B,EAiD5Bt4C,GAAuBJ,QAAdggB,IzD8kYNs7B,+BAA+Bv5C,YAAYmhB,wCAAwC,SAAShkB,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0D/oYtB,IAAO03C,GAAKx5C,EAAe,+BAE3B,IAAMkiB,GAAU,SAAA/f,GAASX,EAAnB0gB,EAAU/f,EAKf,SALK+f,GAKOnN,GAEX5S,EAAApB,KAAAU,KAAMsT,GAIAmN,EAAAlgB,UAAAiI,MAAP,WAEC,MAAO,IAAIiY,GAAWzgB,KAAKsT,MAVdmN,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyBs3B,EAiBzBt4C,GAAoBJ,QAAXohB,I1D6oYNk6B,+BAA+Bv5C,YAAY2uC,2CAA2C,SAASxxC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2DrqYtB,IAAO03C,GAAKx5C,EAAe,+BAE3B,IAAMqwC,GAAa,SAAAluC,GAASX,EAAtB6uC,EAAaluC,EAIlB,SAJKkuC,GAIOt7B,GAEX5S,EAAApB,KAAAU,KAAMsT,GAJOs7B,EAAAW,aAAsB,aAMrC,OAAAX,IAR4BmJ,EAU5Bt4C,GAAuBJ,QAAduvC,I3DsqYN+L,+BAA+Bv5C,YAAYw5C,wCAAwC,SAASr8C,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4DrrYtB,IAAO03C,GAAKx5C,EAAe,+B5D4rY3B,I4DjrYMy5C,GAAU,SAAAt3C,GAASX,EAAnBi4C,EAAUt3C,EAuIf,SAvIKs3C,GAuIO1kC,GAEX5S,EAAApB,KAAAU,KAAMsT,EAtIAtT,MAAA0jD,qBAA+B,KA4ItC/iD,OAAAC,eAAWo3C,EAAAz3C,UAAA,W5DijYJM,I4DjjYP,WAEC,GAAI8iD,GAAqB3jD,KAAK0jD,oBAC9B1jD,MAAK0jD,qBAAuB,IAG5B,OAAOC,I5DijYD5iD,WAAY,KACZC,aAAc,M4D5iYdg3C,GAAAz3C,UAAAqjD,gBAAP,WAEC5jD,KAAK0jD,qBAAuB,KAE5B,IAAI1jD,KAAK6jD,cACR7jD,KAAK6jD,cAAcD,kBAMd5L,GAAAz3C,UAAAujD,yBAAP,WAEC9jD,KAAK0jD,qBAAuB,KAE5B,IAAI1jD,KAAK6jD,cACR7jD,KAAK6jD,cAAcC,2BAMd9L,GAAAz3C,UAAAiI,MAAP,WAEC,GAAIu7C,GAAoB,GAAI/L,GAAWh4C,KAAKsT,KAO5CywC,GAAOC,QAAUhkD,KAAKgkD,OACtBD,GAAOE,QAAUjkD,KAAKikD,OAEtBF,GAAOG,KAAOlkD,KAAKkkD,IACnBH,GAAOP,OAASxjD,KAAKwjD,MACrBO,GAAOvM,gBAAkBx3C,KAAKw3C,eAC9BuM,GAAOz6C,SAAWtJ,KAAKsJ,QACvBy6C,GAAOI,GAAKnkD,KAAKmkD,EACjBJ,GAAOK,cAAgBpkD,KAAKokD,aAC5BL,GAAOM,YAAcrkD,KAAKqkD,WAC1BN,GAAO59C,MAAQnG,KAAKmG,KACpB49C,GAAOO,iBAAmBtkD,KAAKskD,gBAC/BP,GAAOQ,MAAQvkD,KAAKukD,KAEpBR,GAAOS,QAAUxkD,KAAKwkD,OACtBT,GAAOU,SAAWzkD,KAAKykD,QAEvBV,GAAOF,cAAgB7jD,IACvB+jD,GAAOL,qBAAuB1jD,KAAK0jD,oBAEnC,OAAOK,GAMRpjD,QAAAC,eAAWo3C,EAAAz3C,UAAA,iB5DoiYJM,I4DpiYP,WAEC,MAAOb,MAAKwjD,OAAO3yC,eAAe6B,gBAAgB1S,KAAKokD,gB5DqiYjDrjD,WAAY,KACZC,aAAc,M4DhiYrBL,QAAAC,eAAWo3C,EAAAz3C,UAAA,e5DsiYJM,I4DtiYP,WAEC,GAAI6jD,GAAuB1kD,KAAKwjD,OAAO3yC,eAAe43B,qBAAqBzoC,KAAKqkD,YAChFK,GAAYpsC,WAEZ,OAAOosC,I5DsiYD3jD,WAAY,KACZC,aAAc,M4D/vYPg3C,GAAAsB,WAAoB,aAKpBtB,GAAAuB,UAAmB,YAKnBvB,GAAAyB,SAAkB,WAKlBzB,GAAAwB,WAAoB,aAKpBxB,GAAA2M,WAAoB,aAepB3M,GAAA4M,MAAe,SAKf5M,GAAA6M,aAAsB,eAKtB7M,GAAA8M,YAAqB,cA6KpC,OAAA9M,IAnOyBD,EAqOzBt4C,GAAoBJ,QAAX24C,I5DilYN2C,+BAA+Bv5C,YAAY2jD,kDAAkD,SAASxmD,EAAQkB,EAAOJ,GACxH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Dx0YtB,IAAO03C,GAAKx5C,EAAgB,+B7Di1Y5B,I6Dv0YMymD,GAAoB,SAAAtkD,GAASX,EAA7BilD,EAAoBtkD,EAczB,SAdKskD,GAcO1xC,EAAa2xC,GAExBvkD,EAAApB,KAAAU,KAAMsT,EAENtT,MAAKklD,aAAeD,EAMrBtkD,OAAAC,eAAWokD,EAAAzkD,UAAA,e7D8zYJM,I6D9zYP,WAEC,MAAOb,MAAKklD,c7D+zYNnkD,WAAY,KACZC,aAAc,M6DxzYdgkD,GAAAzkD,UAAAiI,MAAP,WAEC,MAAO,IAAIw8C,GAAqBhlD,KAAKsT,KAAMtT,KAAKklD,cA/BnCF,GAAAG,qBAA8B,oBAiC7C,OAAAH,IAtCmCjN,EAwCnCt4C,GAA8BJ,QAArB2lD,I7Do0YNrK,+BAA+Bv5C,YAAYgjC,2CAA2C,SAAS7lC,EAAQkB,EAAOJ,GACjH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8D33YtB,IAAO03C,GAAKx5C,EAAe,+BAE3B,IAAM6gC,GAAa,SAAA1+B,GAASX,EAAtBq/B,EAAa1+B,EAKlB,SALK0+B,GAKO9rB,GAEX5S,EAAApB,KAAAU,KAAMsT,GALO8rB,EAAAmC,iBAA0B,iBAC1BnC,GAAAoC,gBAAyB,gBAMxC,OAAApC,IAT4B2Y,EAW5Bt4C,GAAuBJ,QAAd+/B,I9D43YNub,+BAA+Bv5C,YAAYgkD,yCAAyC,SAAS7mD,EAAQkB,EAAOJ,GAC/G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+D94YtB,IAAO03C,GAAKx5C,EAAe,+BAE3B,IAAM8mD,GAAW,SAAA3kD,GAASX,EAApBslD,EAAW3kD,EAOhB,SAPK2kD,GAOO/xC,EAAagyC,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAAvZ,IAAwB,GAAAwZ,QAAA,GAAqB,CAArBA,EAAAxZ,IAEhDrrC,EAAApB,KAAAU,KAAMsT,EAENtT,MAAKwlD,WAAaF,CAClBtlD,MAAKylD,UAAYF,EAGlB5kD,OAAAC,eAAWykD,EAAA9kD,UAAA,a/D04YJM,I+D14YP,WAEC,MAAOb,MAAKwlD,Y/D24YNzkD,WAAY,KACZC,aAAc,M+Dz4YrBL,QAAAC,eAAWykD,EAAA9kD,UAAA,Y/D44YJM,I+D54YP,WAEC,MAAOb,MAAKylD,W/D64YN1kD,WAAY,KACZC,aAAc,M+Dl6YPqkD,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0BtN,EA0B1Bt4C,GAAqBJ,QAAZgmD,I/Di5YN1K,+BAA+Bv5C,YAAY8d,wCAAwC,SAAS3gB,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEl7YtB,IAAO03C,GAAKx5C,EAAe,+BAI3B,IAAM+M,GAAU,SAAA5K,GAASX,EAAnBuL,EAAU5K,EAsBf,SAtBK4K,GAsBOgI,EAAaib,GAExB7tB,EAAApB,KAAAU,KAAMsT,EAENtT,MAAKuuB,cAAgBA,EArBRjjB,EAAA2Q,eAAwB,cAKxB3Q,GAAAsQ,mBAA4B,kBAK5BtQ,GAAAszB,kBAA2B,kBAa1C,OAAAtzB,IA5ByBysC,EA8BzBt4C,GAAoBJ,QAAXiM,IhEy6YNqvC,+BAA+Bv5C,YAAYykB,8CAA8C,SAAStnB,EAAQkB,EAAOJ,GACpH,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiE/8YtB,IAAO03C,GAAKx5C,EAAe,+BjEw9Y3B,IiEh9YMqmB,GAAgB,SAAAlkB,GAASX,EAAzB6kB,EAAgBlkB,EA8BrB,SA9BKkkB,GA8BOtR,EAAagS,GAExB5kB,EAAApB,KAAAU,KAAMsT,EAENtT,MAAK2lD,gBAAkBrgC,EAMxB3kB,OAAAC,eAAWgkB,EAAArkB,UAAA,kBjEu7YJM,IiEv7YP,WAEC,MAAOb,MAAK2lD,iBjEw7YN5kD,WAAY,KACZC,aAAc,MiEj7Yd4jB,GAAArkB,UAAAiI,MAAP,WAEC,MAAO,IAAIoc,GAAiB5kB,KAAKsT,KAAMtT,KAAK2lD,iBA/C/B/gC,GAAAQ,gBAAyB,gBAKzBR,GAAAS,iBAA0B,iBAK1BT,GAAAW,iBAA0B,iBAK1BX,GAAAY,kBAA2B,kBAkC1C,OAAAZ,IAtD+BmzB,EAwD/Bt4C,GAA0BJ,QAAjBulB,IjEy8YN+1B,+BAA+Bv5C,YAAYwkD,wCAAwC,SAASrnD,EAAQkB,EAAOJ,GAC9G,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkE7gZtB,IAAO03C,GAAKx5C,EAAe,+BAO3B,IAAMsnD,GAAU,SAAAnlD,GAASX,EAAnB8lD,EAAUnlD,EA4Gf,SA5GKmlD,GA4GOvyC,GAEX5S,EAAApB,KAAAU,KAAMsT,EA3GAtT,MAAA0jD,qBAA+B,KAiHtC/iD,OAAAC,eAAWilD,EAAAtlD,UAAA,WlEo6YJM,IkEp6YP,WAEC,GAAI8iD,GAAqB3jD,KAAK0jD,oBAC9B1jD,MAAK0jD,qBAAuB,IAG5B,OAAOC,IlEo6YD5iD,WAAY,KACZC,aAAc,MkE/5Yd6kD,GAAAtlD,UAAAqjD,gBAAP,WAEC5jD,KAAK0jD,qBAAuB,KAE5B,IAAI1jD,KAAK6jD,cACR7jD,KAAK6jD,cAAcD,kBAMdiC,GAAAtlD,UAAAujD,yBAAP,WAEC9jD,KAAK0jD,qBAAuB,KAE5B,IAAI1jD,KAAK6jD,cACR7jD,KAAK6jD,cAAcC,2BAMd+B,GAAAtlD,UAAAiI,MAAP,WAEC,GAAIu7C,GAAoB,GAAI8B,GAAW7lD,KAAKsT,KAO5CywC,GAAOC,QAAUhkD,KAAKgkD,OACtBD,GAAOE,QAAUjkD,KAAKikD,OAEtBF,GAAOG,KAAOlkD,KAAKkkD,IACnBH,GAAOP,OAASxjD,KAAKwjD,MACrBO,GAAOvM,gBAAkBx3C,KAAKw3C,eAC9BuM,GAAOz6C,SAAWtJ,KAAKsJ,QACvBy6C,GAAOI,GAAKnkD,KAAKmkD,EACjBJ,GAAOK,cAAgBpkD,KAAKokD,aAC5BL,GAAOM,YAAcrkD,KAAKqkD,WAC1BN,GAAO59C,MAAQnG,KAAKmG,KACpB49C,GAAOO,iBAAmBtkD,KAAKskD,gBAE/BP,GAAOS,QAAUxkD,KAAKwkD,OACtBT,GAAOU,SAAWzkD,KAAKykD,QAEvBV,GAAOF,cAAgB7jD,IAEvB,OAAO+jD,GAMRpjD,QAAAC,eAAWilD,EAAAtlD,UAAA,iBlEu5YJM,IkEv5YP,WAEC,MAAOb,MAAKwjD,OAAO3yC,eAAe6B,gBAAgB1S,KAAKokD,gBlEw5YjDrjD,WAAY,KACZC,aAAc,MkEn5YrBL,QAAAC,eAAWilD,EAAAtlD,UAAA,elEy5YJM,IkEz5YP,WAEC,GAAI6jD,GAAuB1kD,KAAKwjD,OAAO3yC,eAAe43B,qBAAqBzoC,KAAKqkD,YAChFK;EAAYpsC,WAEZ,OAAOosC,IlEy5YD3jD,WAAY,KACZC,aAAc,MkErlZP6kD,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAyKnC,OAAAL,IAtMyB9N,EAwMLt4C,GAAAJ,QAAXwmD,IlEg7YNlL,+BAA+Bv5C,YAAY+kD,2DAA2D,SAAS5nD,EAAQkB,EAAOJ,SAE3H+mD,sDAAsD,SAAS7nD,EAAQkB,EAAOJ,GmEnoZpF,GAAOgnD,GAAa9nD,EAAc,qCAClC,IAAO+nD,GAAe/nD,EAAc,uCAGpC,IAAOqlB,GAAWrlB,EAAe,sCACjC,IAAO49C,GAAM59C,EAAgB,qCAE7B,IAAOgoD,GAAahoD,EAAc,6CAClC,IAAOioD,GAAejoD,EAAc,8CACpC,IAAOkoD,GAAiBloD,EAAa,gDAGrC,IAAMmoD,GAAsB,WAA5B,QAAMA,MAUSA,EAAAC,mBAAd,SAAiCnP,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgB3rB,QAAQjI,GAAc,CACpE,IAAK8iC,EAAuBE,sBAC3BF,EAAuBG,4BAExB,OAAOH,GAAuBE,sBAG/B,GAAIpP,GAAmB,MAAQA,EAAgB3rB,QAAQswB,GAAS,CAC/D,IAAKuK,EAAuBI,4BAC3BJ,EAAuBK,kCAExB,OAAOL,GAAuBI,4BAG/B,IAAKJ,EAAuBM,wBAC3BN,EAAuBO,8BAExB,OAAOP,GAAuBM,wBAGjBN,GAAAQ,kBAAd,SAAgC1P,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,GAAIA,GAAmB,MAAQA,EAAgB3rB,QAAQswB,GAAS,CAC/D,IAAKuK,EAAuBS,oBAC3BT,EAAuBU,0BAExB,OAAOV,GAAuBS,oBAG/B,IAAKT,EAAuBW,gBAC3BX,EAAuBY,sBAExB,OAAOZ,GAAuBW,gBAGhBX,GAAAY,qBAAf,WAEC,IAAKZ,EAAuBa,sBAC3Bb,EAAuBc,8BAExBd,GAAuBW,gBAAkB,GAAIb,GAAgBE,EAAuBa,sBACpFb,GAAuBW,gBAAgB/yC,KAAO,iBAGhCoyC,GAAAU,yBAAf,WAEC,IAAKV,EAAuBe,wBAC3Bf,EAAuBgB,gCAExBhB,GAAuBS,oBAAsB,GAAIV,GAAkBC,EAAuBe,wBAC1Ff,GAAuBS,oBAAoB7yC,KAAO,qBAGpCoyC,GAAAgB,+BAAf,WAEC,IAAKhB,EAAuBa,sBAC3Bb,EAAuBc,8BAExB,IAAItnD,GAAI,GAAIomD,GAAgBI,EAAuBa,sBAAsBnjD,MAEzE,KAAK,GAAIpF,GAAW,EAAGA,EAAI,EAAGA,IAC7BkB,EAAEynD,KAAK3oD,EAAG0nD,EAAuBa,sBAElCb,GAAuBe,wBAA0BvnD,EAGnCwmD,GAAAc,6BAAf,WAEC,GAAItnD,GAAkB,GAAImmD,GAAc,EAAG,EAAG,MAAO,EnEomZ/C,ImEjmZFrnD,GAAUkH,CACd,KAAKlH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAKkH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAMlH,EAAI,EAAI,CACtBkB,EAAE0nD,SAAS5oD,EAAGkH,EAAG,YAKpBwgD,EAAuBa,sBAAwBrnD,EAGjCwmD,GAAAO,6BAAf,WAEC,IAAKP,EAAuBW,gBAC3BX,EAAuBY,sBAExBZ,GAAuBM,wBAA0B,GAAIT,GAAcG,EAAuBW,gBAC1FX,GAAuBM,wBAAwBa,OAAS,KACxDnB,GAAuBM,wBAAwBjd,OAAS,KACxD2c,GAAuBM,wBAAwB1yC,KAAO,yBAGxCoyC,GAAAK,iCAAf,WAEC,IAAKL,EAAuBS,oBAC3BT,EAAuBU,0BAExBV,GAAuBI,4BAA8B,GAAIP,GAAcG,EAAuBS,oBAC9FT,GAAuBI,4BAA4Be,OAAS,KAC5DnB,GAAuBI,4BAA4B/c,OAAS,KAC5D2c,GAAuBI,4BAA4BxyC,KAAO,6BAG5CoyC,GAAAG,2BAAf,WAECH,EAAuBE,sBAAwB,GAAIL,EACnDG,GAAuBE,sBAAsBtyC,KAAO,uBAEtD,OAAAoyC,KAEgCjnD,GAAAJ,QAAvBqnD,InE0lZNoB,qCAAqC1mD,UAAU2mD,uCAAuC3mD,UAAUuiB,sCAAsC,sCAAsCs4B,qCAAqC,qCAAqC+L,6CAA6C,6CAA6CC,8CAA8C,8CAA8CC,gDAAgD,kDAAkDrN,kDAAkD,SAASt8C,EAAQkB,EAAOJ,GoEhuZ3lB,GAAM44C,GAAkB,WAAxB,QAAMA,MAKSA,EAAAgC,oBAAd,SAAkCkO,EAAcC,GAE/CpoD,KAAKqoD,YAAYhiD,KAAK8hD,EACtBnoD,MAAKsoD,gBAAgBjiD,KAAK+hD,GAGbnQ,GAAA+B,cAAd,WAEC,GAAIh7C,GAAE,CACN,IAAImpD,EACJ,KAAKnpD,EAAI,EAAGA,EAAGgB,KAAKqoD,YAAY9oD,OAAQP,IAAK,CAE5CmpD,EAAGnoD,KAAKqoD,YAAYrpD,EACpB,IAAImpD,EAAGzzC,QAAQ,MAAQyzC,EAAG7zC,MAAM,UAAY,CAC3C,GAAIi0C,GAASJ,EAAG3zC,QAAU2zC,EAAG3zC,QAAU2zC,CACvC,KACCnoD,KAAKsoD,gBAAgBtpD,GAAGM,KAAKipD,GAE9B,MAAOC,GACNh+B,QAAQC,IAAI,mBAAqB09B,EAAG7zC,KAAO,KAAMtU,KAAKsoD,gBAAgBtpD,GACtEwrB,SAAQC,IAAI+9B,EAAIlF,QAChB,MAAMkF,KAKTxoD,KAAKqoD,cACLroD,MAAKsoD,mBA9BSrQ,GAAAoQ,cACApQ,GAAAqQ,kBA+BhB,OAAArQ,KAC4Bx4C,GAAAJ,QAAnB44C,OpEiuZH5T,4CAA4C,SAAS9lC,EAAQkB,EAAOJ,GqEtwZ1E,GAAO0L,GAAQxM,EAAgB,gCAK/B,IAAOkqD,GAAclqD,EAAc,uCrEwwZnC,IqElwZM8gC,GAAY,WAqCjB,QArCKA,KAAN,GAAA7zB,GAAAxL,IAISA,MAAA0oD,YAA0B,GAAIljD,MAM9BxF,MAAA2oD,YAAuB,GAAI59C,EAE3B/K,MAAAyL,cAAsC,GAAIjG,MAI1CxF,MAAA4oD,SAA0B,GAAIH,GAAeA,EAAehP,SAC5Dz5C,MAAA6oD,YAA6B,GAAIJ,GAAeA,EAAe7D,MAC/D5kD,MAAA8oD,UAA2B,GAAIL,GAAeA,EAAelP,UAC7Dv5C,MAAA+oD,WAA4B,GAAIN,GAAeA,EAAejP,WAC9Dx5C,MAAAgpD,WAA4B,GAAIP,GAAeA,EAAe9D,WAC9D3kD,MAAAipD,WAA4B,GAAIR,GAAeA,EAAenP,WAC9Dt5C,MAAAkpD,YAA6B,GAAIT,GAAeA,EAAe3D,YAC/D9kD,MAAAmpD,kBAAmC,GAAIV,GAAeA,EAAe5D,aAgB5E7kD,MAAKopD,gBAAkB,SAAC76C,GAAqB,MAAA/C,GAAK69C,QAAQ96C,GAC1DvO,MAAKspD,sBAAwB,SAAC/6C,GAAqB,MAAA/C,GAAK+9C,cAAch7C,GACtEvO,MAAKwpD,oBAAsB,SAACj7C,GAAqB,MAAA/C,GAAKi+C,YAAYl7C,GAClEvO,MAAK0pD,oBAAsB,SAACn7C,GAAqB,MAAA/C,GAAKm+C,YAAYp7C,GAClEvO,MAAK4pD,kBAAoB,SAACr7C,GAAqB,MAAA/C,GAAKq+C,UAAUt7C,GAC9DvO,MAAK8pD,qBAAuB,SAACv7C,GAAqB,MAAA/C,GAAKu+C,aAAax7C,GACpEvO,MAAKgqD,oBAAsB,SAACz7C,GAAqB,MAAA/C,GAAKy+C,YAAY17C,GAClEvO,MAAKkqD,mBAAqB,SAAC37C,GAAqB,MAAA/C,GAAK2+C,WAAW57C,IAGnD8wB,EAAA1D,YAAd,WAEC,GAAI37B,KAAKoqD,UACR,MAAOpqD,MAAKoqD,SAEb,OAAQpqD,MAAKoqD,UAAY,GAAI/qB,GAGvBA,GAAA9+B,UAAA2iC,gBAAP,SAAuBN,GAGtB,GAAI5iC,KAAK+iC,mBAAqB/iC,KAAKqqD,yBAA0B,CAC5D,GAAIrqD,KAAKqqD,yBACRrqD,KAAKub,cAAcvb,KAAK8oD,UAAW9oD,KAAKsqD,gBAAiBtqD,KAAKqqD,yBAE/D,IAAIrqD,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAKipD,WAAYjpD,KAAKsqD,iBAI3C,GAAI1nB,GAAkB5iC,KAAK+iC,kBAC1B/iC,KAAKub,cAAevb,KAAKgpD,WAAYhpD,KAAKsqD,gBAE3C,IAAI/7C,EACJ,IAAIg8C,ErEsuZE,IqEnuZF56C,GAAa3P,KAAKyL,cAAclM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAAG,CACpCuP,EAAQvO,KAAKyL,cAAczM,EAC3BurD,GAAah8C,EAAMi1C,MAGnB,OAAO+G,EAAY,CAClB,GAAIA,EAAWntC,mBACdmtC,EAAW5uC,cAAcpN,EAE1Bg8C,GAAaA,EAAW71C,QAK1B1U,KAAKyL,cAAclM,OAAS,CAE5BS,MAAKqqD,yBAA2BrqD,KAAK+iC,iBAErC/iC,MAAK8iC,cAAgB,MAmBfzD,GAAA9+B,UAAAugC,aAAP,SAAoBojB,GAEnBA,EAAKsG,YAAY/6C,iBAAiB,QAASzP,KAAKopD,gBAChDlF,GAAKsG,YAAY/6C,iBAAiB,WAAYzP,KAAKspD,sBACnDpF,GAAKsG,YAAY/6C,iBAAiB,aAAczP,KAAKwpD,oBACrDtF,GAAKsG,YAAY/6C,iBAAiB,YAAazP,KAAKwpD,oBACpDtF,GAAKsG,YAAY/6C,iBAAiB,YAAazP,KAAK0pD,oBACpDxF,GAAKsG,YAAY/6C,iBAAiB,UAAWzP,KAAK4pD,kBAClD1F,GAAKsG,YAAY/6C,iBAAiB,WAAYzP,KAAK4pD,kBACnD1F,GAAKsG,YAAY/6C,iBAAiB,aAAczP,KAAK8pD,qBACrD5F,GAAKsG,YAAY/6C,iBAAiB,YAAazP,KAAKgqD,oBACpD9F,GAAKsG,YAAY/6C,iBAAiB,WAAYzP,KAAKkqD,mBAEnDlqD,MAAK0oD,YAAYriD,KAAK69C,GAGhB7kB,GAAA9+B,UAAA6iC,eAAP,SAAsB8gB,GAErBA,EAAKsG,YAAYj7C,oBAAoB,QAASvP,KAAKopD,gBACnDlF,GAAKsG,YAAYj7C,oBAAoB,WAAYvP,KAAKspD,sBACtDpF,GAAKsG,YAAYj7C,oBAAoB,aAAcvP,KAAKwpD,oBACxDtF,GAAKsG,YAAYj7C,oBAAoB,YAAavP,KAAKwpD,oBACvDtF,GAAKsG,YAAYj7C,oBAAoB,YAAavP,KAAK0pD,oBACvDxF,GAAKsG,YAAYj7C,oBAAoB,WAAYvP,KAAK4pD,kBACtD1F,GAAKsG,YAAYj7C,oBAAoB,UAAWvP,KAAK4pD,kBACrD1F,GAAKsG,YAAYj7C,oBAAoB,aAAcvP,KAAK8pD,qBACxD5F,GAAKsG,YAAYj7C,oBAAoB,YAAavP,KAAKgqD,oBACvD9F,GAAKsG,YAAYj7C,oBAAoB,WAAYvP,KAAKkqD,mBAEtDlqD,MAAK0oD,YAAY+B,MAAMzqD,KAAK0oD,YAAY3rC,QAAQmnC,GAAO,GAOhD7kB,GAAA9+B,UAAAgb,cAAR,SAAsBhN,EAAsBm8C,EAAwBC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGnE,GAAID,EAAa,CAChBn8C,EAAMi2C,QAAUkG,EAAYlG,OAC5Bj2C,GAAMq8C,OAASF,EAAYE,MAC3Br8C,GAAMk2C,SAAWiG,EAAYjG,QAC7Bl2C,GAAMy1C,QAAU0G,EAAYG,OAC5Bt8C,GAAM01C,QAAUyG,EAAYI,QAG7B,GAAIH,GAAY,KACfA,EAAW3qD,KAAK+iC,iBAGjB,IAAI4nB,EAAU,CAEbp8C,EAAMi1C,OAASmH,EAASp8B,aACxBhgB,GAAMipC,gBAAkBmT,EAASnT,eAEjCjpC,GAAM41C,GAAKwG,EAASxG,EAEpB51C,GAAM61C,cAAgBuG,EAASvG,cAAeuG,EAASvG,cAAc57C,QAAU,IAE/E+F,GAAM81C,YAAcsG,EAAStG,YAAasG,EAAStG,YAAY77C,QAAU,IAEzE+F,GAAMpI,MAAQwkD,EAASxkD,UACjB,CAENoI,EAAM41C,GAAK,IACX51C,GAAMi1C,OAAS,IACfj1C,GAAM61C,cAAgBpkD,KAAK2oD,WAC3Bp6C,GAAM81C,YAAcrkD,KAAK2oD,WACzBp6C,GAAMpI,MAAQ,CACdoI,GAAM+1C,iBAAmB,EAI1BtkD,KAAKyL,cAAcpF,KAAKkI,GAOjB8wB,GAAA9+B,UAAAopD,YAAR,SAAoBp7C,GAEnBvO,KAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAKgpD,WAAYhpD,KAAKsqD,gBAAkB/7C,GAGrD8wB,GAAA9+B,UAAA4pD,WAAR,SAAmB57C,GAElBvO,KAAK6iC,YAAc,IAEnB7iC,MAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK8oD,UAAWv6C,GAG7B8wB,GAAA9+B,UAAA0pD,YAAR,SAAoB17C,GAEnBvO,KAAK6iC,YAA+Bt0B,EAAMwJ,MAE1C/X,MAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAevb,KAAKipD,WAAY16C,GAG/B8wB,GAAA9+B,UAAA8oD,QAAR,SAAgB96C,GAEfvO,KAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK6oD,YAAat6C,GAG/B8wB,GAAA9+B,UAAAgpD,cAAR,SAAsBh7C,GAErBvO,KAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAKmpD,kBAAmB56C,GAGrC8wB,GAAA9+B,UAAAkpD,YAAR,SAAoBl7C,GAEnBA,EAAMy8C,gBAENhrD,MAAK6iC,YAA+Bt0B,EAAMwJ,MAE1C/X,MAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK+oD,WAAYx6C,GAG9B8wB,GAAA9+B,UAAAspD,UAAR,SAAkBt7C,GAEjBA,EAAMy8C,gBAENhrD,MAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK4oD,SAAWr6C,GAG7B8wB,GAAA9+B,UAAAwpD,aAAR,SAAqBx7C,GAEpBvO,KAAK+qD,gBAAgBx8C,EAErB,IAAIvO,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAKkpD,YAAa36C,GAI/B8wB,GAAA9+B,UAAAwqD,gBAAR,SAAwBx8C,GAEvB,GAAIvO,KAAK8iC,cACR,MAED,IAAIohB,EACJ,IAAI+G,EACJ,IAAIC,GAAiB38C,EAAMs8C,SAAW,KAAOt8C,EAAMs8C,QAAUt8C,EAAM48C,eAAe,GAAGN,OACrF,IAAIO,GAAiB78C,EAAMu8C,SAAW,KAAOv8C,EAAMu8C,QAAUv8C,EAAM48C,eAAe,GAAGL,OACrF,IAAIn7C,GAAa3P,KAAK0oD,YAAYnpD,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAAK,CACpCklD,EAAOlkD,KAAK0oD,YAAY1pD,EACxBisD,GAAS/G,EAAKsG,YAAYa,uBAC1B,IAAIH,EAASD,EAAOxlD,MAAQylD,EAASD,EAAOvlD,OAAS0lD,EAASH,EAAOrlD,KAAOwlD,EAASH,EAAOplD,OAAQ,CACnGq+C,EAAKjjB,SAAW,IAChBijB,GAAKhjB,SAAW,SACV,CACNgjB,EAAKjjB,SAAWiqB,EAASD,EAAOxlD,IAChCy+C,GAAKhjB,SAAWkqB,EAASH,EAAOrlD,GAChCs+C,GAAKrgB,gBAEL,IAAIqgB,EAAKngB,aAAe/jC,KAAK+iC,kBAC5B,OAIH/iC,KAAK8iC,cAAgB,KAEvB,OAAAzD,KAEsB5/B,GAAAJ,QAAbggC,IrEgrZNxgB,gCAAgCzd,UAAUw5C,uCAAuC,yCAAyC0Q,4CAA4C,SAAS/sD,EAAQkB,EAAOJ,GsEv+ZjM,GAAO0L,GAAQxM,EAAgB,gCAK/B,IAAOgtD,GAAchtD,EAAc,uCAEnC,IAAMitD,GAAY,WA6BjB,QA7BKA,KAAN,GAAAhgD,GAAAxL,IAISA,MAAAyrD,aAAuB,IACvBzrD,MAAA2oD,YAAuB,GAAI59C,EAO3B/K,MAAAyL,cAAsC,GAAIjG,MAO1CxF,MAAA0rD,UAA2B,GAAIH,GAAeA,EAAetF,UAC7DjmD,MAAA2rD,YAA6B,GAAIJ,GAAeA,EAAexF,YAC/D/lD,MAAA4rD,WAA4B,GAAIL,GAAeA,EAAevF,WAC9DhmD,MAAA6rD,UAA2B,GAAIN,GAAeA,EAAezF,UAC7D9lD,MAAA8rD,WAA4B,GAAIP,GAAeA,EAAerF,WAQrElmD,MAAK+rD,aAAe,GAAIvmD,MACxBxF,MAAKgsD,kBAAoB,GAAIrrD,OAC7B6qD,GAAaS,6BAA+B,GAAItrD,OAChD6qD,GAAaU,oCAAsC,GAAIvrD,OAEvDX,MAAKmsD,qBAAuB,SAAC59C,GAAqB,MAAA/C,GAAK4gD,aAAa79C,GACpEvO,MAAKqsD,oBAAsB,SAAC99C,GAAqB,MAAA/C,GAAK8gD,YAAY/9C,GAClEvO,MAAKusD,mBAAqB,SAACh+C,GAAqB,MAAA/C,GAAKghD,WAAWj+C,IAGnDi9C,EAAA7vB,YAAd,WAEC,GAAI37B,KAAKoqD,UACR,MAAOpqD,MAAKoqD,SAEb,OAAQpqD,MAAKoqD,UAAY,GAAIoB,GAOvBA,GAAAjrD,UAAAsjC,eAAP,SAAsB4oB,IAWfjB,GAAAjrD,UAAAmsD,gBAAP,SAAuBD,GAEtB,GAAIztD,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAK2sD,kBAAmB3tD,EAAG,CAC1CgB,KAAK4sD,YAAc5sD,KAAK+rD,aAAa/sD,EAErCgB,MAAK+iC,kBAAoByoB,EAAaS,6BAA8BjsD,KAAK4sD,YAAYxkD,GACrFpI,MAAKqqD,yBAA2BmB,EAAaU,oCAAqClsD,KAAK4sD,YAAYxkD,GACnG,IAAIpI,KAAK+iC,mBAAqB/iC,KAAKqqD,yBAA0B,CAC5D,GAAIrqD,KAAKqqD,yBACRrqD,KAAKub,cAAcvb,KAAK0rD,UAAW1rD,KAAK6sD,gBAAiB7sD,KAAKqqD,yBAA0BrqD,KAAK4sD,YAC9F,IAAI5sD,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK8rD,WAAY9rD,KAAK6sD,gBAAiB7sD,KAAK+iC,kBAAmB/iC,KAAK4sD,aAGzF,GAAIH,GAAkBzsD,KAAK+iC,kBAC1B/iC,KAAKub,cAAcvb,KAAK4rD,WAAY5rD,KAAK6sD,gBAAiB7sD,KAAK+iC,kBAAmB/iC,KAAK4sD,aAGzF,GAAIr+C,EACJ,IAAIg8C,EtEu8ZE,IsEp8ZF56C,GAAa3P,KAAKyL,cAAclM,MACpC,KAAKP,EAAI,EAAGA,EAAI2Q,IAAO3Q,EAAG,CAEzBuP,EAAQvO,KAAKyL,cAAczM,EAC3BurD,GAAah8C,EAAMi1C,MAEnB,OAAO+G,IAAeA,EAAWntC,mBAChCmtC,EAAaA,EAAW71C,MAEzB,IAAI61C,EACHA,EAAW5uC,cAAcpN,GAE3BvO,KAAKyL,cAAclM,OAAS,CAE5BS,MAAKyrD,aAAe,KAEpB,KAAKzsD,EAAI,EAAGA,EAAIgB,KAAK2sD,kBAAmB3tD,EAAG,CAC1CgB,KAAK4sD,YAAc5sD,KAAK+rD,aAAc/sD,EACtCwsD,GAAaU,oCAAqClsD,KAAK4sD,YAAYxkD,IAAOojD,EAAaS,6BAA8BjsD,KAAK4sD,YAAYxkD,KAIjIojD,GAAAjrD,UAAAugC,aAAP,SAAoBojB,GAEnBA,EAAKsG,YAAY/6C,iBAAiB,aAAczP,KAAKmsD,qBACrDjI,GAAKsG,YAAY/6C,iBAAiB,YAAazP,KAAKqsD,oBACpDnI,GAAKsG,YAAY/6C,iBAAiB,WAAYzP,KAAKusD,oBAG7Cf,GAAAjrD,UAAA6iC,eAAP,SAAsB8gB,GAErBA,EAAKsG,YAAYj7C,oBAAoB,aAAcvP,KAAKmsD,qBACxDjI,GAAKsG,YAAYj7C,oBAAoB,YAAavP,KAAKqsD,oBACvDnI,GAAKsG,YAAYj7C,oBAAoB,WAAYvP,KAAKusD,oBAO/Cf,GAAAjrD,UAAAgb,cAAR,SAAsBhN,EAAsBm8C,EAAwBC,EAA6BmC,GAGhGv+C,EAAMi2C,QAAUkG,EAAYlG,OAC5Bj2C,GAAMq8C,OAASF,EAAYE,MAC3Br8C,GAAMk2C,SAAWiG,EAAYjG,QAC7Bl2C,GAAMy1C,QAAU8I,EAAM7pD,CACtBsL,GAAM01C,QAAU6I,EAAM5pD,CACtBqL,GAAMw+C,aAAeD,EAAM1kD,EAG3B,IAAIuiD,EAAU,CAEbp8C,EAAMi1C,OAASmH,EAASp8B,aACxBhgB,GAAMipC,gBAAkBmT,EAASnT,eAEjCjpC,GAAM41C,GAAKwG,EAASxG,EAEpB51C,GAAM61C,cAAgBuG,EAASvG,cAAeuG,EAASvG,cAAc57C,QAAU,IAE/E+F,GAAM81C,YAAcsG,EAAStG,YAAasG,EAAStG,YAAY77C,QAAU,IAEzE+F,GAAMpI,MAAQwkD,EAASxkD,KAEvBoI,GAAM+1C,iBAAmBqG,EAASxkD,UAE5B,CAENoI,EAAM41C,GAAK,IACX51C,GAAMi1C,OAAS,IACfj1C,GAAM61C,cAAgBpkD,KAAK2oD,WAC3Bp6C,GAAM81C,YAAcrkD,KAAK2oD,WACzBp6C,GAAMpI,MAAQ,CACdoI,GAAM+1C,iBAAmB,EAI1BtkD,KAAKyL,cAAcpF,KAAKkI,GAOjBi9C,GAAAjrD,UAAA6rD,aAAR,SAAqB79C,GAGpB,GAAIu+C,GAAmB,GAAIE,EAI3BhtD,MAAK2sD,iBACL3sD,MAAK+rD,aAAa1lD,KAAKymD,EACvB9sD,MAAKgsD,kBAAmBc,EAAM1kD,IAAO0kD,CAIrC9sD,MAAK+iC,kBAAoByoB,EAAaS,6BAA8Ba,EAAM1kD,GAC1E,IAAIpI,KAAK+iC,kBACR/iC,KAAKub,cAAcvb,KAAK2rD,YAAap9C,EAAOvO,KAAK+iC,kBAAmB+pB,EAErE9sD,MAAKyrD,aAAe,KAGbD,GAAAjrD,UAAA+rD,YAAR,SAAoB/9C,IAkBZi9C,GAAAjrD,UAAAisD,WAAR,SAAmBj+C,IAiBpB,OAAAi9C,KAKA,IAAMwB,GAAU,WAAhB,QAAMA,MAKN,MAAAA,KAPAvtD,GAkF+GJ,QAlFtGmsD,ItEg7ZN3sC,gCAAgCzd,UAAUwkD,uCAAuC,yCAAyCoC,8CAA8C,SAASzpD,EAAQkB,EAAOJ,GACnM,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuEjqatB,IAAO4sD,GAAO1uD,EAAgB,+BAE9B,IAAO2uD,GAAY3uD,EAAe,4CAElC,IAAOioD,GAAejoD,EAAc,8CACpC,IAAO4uD,GAAW5uD,EAAe,0CvEsqajC,IuEhqaMgoD,GAAa,SAAA7lD,GAASX,EAAtBwmD,EAAa7lD,EAyBlB,SAzBK6lD,GAyBO6G,EAAyBC,EAAwBvjB,EAAwB+d,GAAzE,GAAAuF,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAvjB,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAA+d,QAAA,GAAsB,CAAtBA,EAAA,MAEpFnnD,EAAApB,KAAAU,KAvBUA,MAAAstD,eAAyB,KAyBnC,IAAIF,YAAwBH,GAC3BG,EAAe,GAAI5G,GAAgB4G,EAEpC,IAAIA,YAAwBD,GAAa,CACxCntD,KAAKutD,QAAwBH,CAE7BptD,MAAK+pC,OAAUsjB,GAAe,KAAO,KAAO,KAC5CrtD,MAAK8pC,OAASA,CACd9pC,MAAK6nD,OAASA,MACR,CACN7nD,KAAKiqC,MAAQmjB,EAAcrpD,OAAOqpD,GAAgB,QAClDptD,MAAKkqC,MAASmjB,GAAe,KAAO,EAAItpD,OAAOspD,IA/BjD1sD,OAAAC,eAAW2lD,EAAAhmD,UAAA,avEiraJM,IuEjraP,WAEC,MAAO0lD,GAAcrlD,WvEkrafH,WAAY,KACZC,aAAc,MuEhpalBL,QAAAC,eAAW2lD,EAAAhmD,UAAA,iBvEspaPM,IuEtpaJ,WAEI,MAAOb,MAAKstD,gBvEupaZ3qD,IuErpaJ,SAAyBC,GAErB,GAAI5C,KAAKstD,gBAAkB1qD,EACvB,MACJ5C,MAAKstD,eAAiB1qD,CACtB5C,MAAK88C,sBvEspaL/7C,WAAY,KACZC,aAAc,MuE5saPulD,GAAArlD,UAAmB,2BAuDlC,OAAAqlD,IAzD4B2G,EA2D5BztD,GAAuBJ,QAAdknD,IvE0paNiH,+BAA+BpsD,UAAUqsD,4CAA4C,4CAA4CxF,8CAA8C,8CAA8CyF,0CAA0C,4CAA4CC,6CAA6C,SAASpvD,EAAQkB,EAAOJ,GAY3X,GwEjuaMuuD,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAG,IAAa,CAC5B,OAAAH,KAEsBnuD,GAAAJ,QAAbuuD,OxEkuaHH,6CAA6C,SAASlvD,EAAQkB,EAAOJ,GAC3E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyEvwatB,IAAO67C,GAAS39C,EAAe,iCAC/B,IAAOkM,GAAclM,EAAc,sCAInC,IAAOw5C,GAAKx5C,EAAgB,+BAE5B,IAAOiC,GAASjC,EAAe,oCAQ/B,IAAOqwC,GAAarwC,EAAc,0CAClC,IAAOymD,GAAoBzmD,EAAa,iDAGxC,IAAOioD,GAAejoD,EAAc,8CzEwwapC,IyE1vaM2uD,GAAY,SAAAxsD,GAASX,EAArBmtD,EAAYxsD,EAqEjB,SArEKwsD,KAAN,GAAA1hD,GAAAxL,IAuEEU,GAAApB,KAAAU,KApEOA,MAAAguD,oBAA8B,KAE9BhuD,MAAAiuD,eAAyB,KACzBjuD,MAAAkuD,OAAgB,CAGhBluD,MAAAu8C,SAA0B,GAAI/2C,MAE/BxF,MAAAq8C,iBAA0B,CAC1Br8C,MAAAmuD,aAAuB,KACtBnuD,MAAAouD,oBAA8B,IAC9BpuD,MAAAquD,sBAA+B,CAC/BruD,MAAAsuD,qBAA8B,CAsB/BtuD,MAAAuuD,aAAsB,CAEtBvuD,MAAAwuD,sBAA+B,CAE9BxuD,MAAAyuD,WAAqB,KAUtBzuD,MAAAs8C,YAAqBJ,EAAUxO,MAE9B1tC,MAAAw8C,QAAkB,IAClBx8C,MAAAy8C,QAAkB,IAClBz8C,MAAA0uD,QAAkB,KAClB1uD,MAAA2gB,OAAgB,QAKjB3gB,MAAA2uD,SAAkB,CAClB3uD,MAAA4uD,QAAiB,CAWvB5uD,MAAKuuD,aAAexqD,OAAO/D,KAAKoI,GAEhCpI,MAAK08C,QAAU,GAAIl3C,MAEnBxF,MAAK6uD,uBAAyB,SAACtgD,GAAgB,MAAA/C,GAAKsjD,eAAevgD,GAEnEvO,MAAK+uD,mBAAqB,MAM3BpuD,OAAAC,eAAWssD,EAAA3sD,UAAA,SzE8saJM,IyE9saP,WAEC,MAAOb,MAAKkuD,QzE+saNvrD,IyE5saP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAKkuD,QAAUtrD,EAClB,MAED5C,MAAKkuD,OAAStrD,CAEd,IAAI5C,KAAKsmB,iBAAmB,KAC3BtmB,KAAKsmB,gBAAkB,GAAI7b,EAE5BzK,MAAKsmB,gBAAgBhX,gBAAkB1M,CAEvC5C,MAAK88C,sBzEwsaC/7C,WAAY,KACZC,aAAc,MyEnsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,kBzEysaJM,IyEzsaP,WAEC,MAAOb,MAAKsmB,iBzE0saN3jB,IyEvsaP,SAA0BC,GAEzB5C,KAAKsmB,gBAAkB1jB,CAEvB5C,MAAK88C,sBzEusaC/7C,WAAY,KACZC,aAAc,MyEjsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,iBzEwsaJM,IyExsaP,WAEC,MAAOb,MAAKiuD,gBzEysaNtrD,IyEtsaP,SAAyBC,GAExB,GAAI5C,KAAKiuD,gBAAkBrrD,EAC1B,MAED5C,MAAKiuD,eAAiBrrD,CAEtB5C,MAAK88C,sBzEqsaC/7C,WAAY,KACZC,aAAc,MyEnsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,azEssaJM,IyEtsaP,WAEC,MAAOb,MAAKgvD,YzEusaNjuD,WAAY,KACZC,aAAc,MyElsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,UzEwsaJM,IyExsaP,WAEC,MAAOb,MAAK2uD,UzEysaN5tD,WAAY,KACZC,aAAc,MyEpsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,gBzE0saJM,IyE1saP,WAEC,MAAOb,MAAK68C,ezE2saN97C,WAAY,KACZC,aAAc,MyElsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,ezE2saJM,IyE3saP,WAEC,MAAOb,MAAK48C,ezE4saNj6C,IyEzsaP,SAAuBC,GAEtB,GAAI5C,KAAK48C,eAAiBh6C,EACzB,MAED,IAAI5C,KAAK48C,cACR58C,KAAK48C,cAAcrtC,oBAAoBwoC,EAAMkX,OAAQjvD,KAAK6uD,uBAE3D7uD,MAAK48C,cAAgBh6C,CAErB,IAAI5C,KAAK48C,cACR58C,KAAK48C,cAAcntC,iBAAiBsoC,EAAMkX,OAAQjvD,KAAK6uD,uBAExD7uD,MAAK88C,sBzEssaC/7C,WAAY,KACZC,aAAc,MyEjsarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,UzEusaJM,IyEvsaP,WAEC,MAAOb,MAAKw8C,SzEwsaN75C,IyErsaP,SAAkBC,GAEjB,GAAI5C,KAAKw8C,SAAW55C,EACnB,MAED5C,MAAKw8C,QAAU55C,CAEf5C,MAAKkvD,sBzEosaCnuD,WAAY,KACZC,aAAc,MyE/rarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,UzEqsaJM,IyErsaP,WAEC,MAAOb,MAAKy8C,SzEssaN95C,IyEnsaP,SAAkBC,GAEjB,GAAI5C,KAAKy8C,SAAW75C,EACnB,MAED5C,MAAKy8C,QAAU75C,CAEf5C,MAAKkvD,sBzEksaCnuD,WAAY,KACZC,aAAc,MyE5rarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,UzEmsaJM,IyEnsaP,WAEC,MAAOb,MAAK0uD,SzEosaN/rD,IyEjsaP,SAAkBC,GAEjB,GAAI5C,KAAK0uD,SAAW9rD,EACnB,MAED5C,MAAK0uD,QAAU9rD,CAEf5C,MAAKkvD,sBzEgsaCnuD,WAAY,KACZC,aAAc,MyE3rarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,SzEisaJM,IyEjsaP,WAEC,MAAOb,MAAK2gB,QzEksaNhe,IyE/raP,SAAiBC,GAEhB,GAAI5C,KAAK2gB,QAAU/d,EAClB,MAED5C,MAAK2gB,OAAS/d,CAEd5C,MAAKkvD,sBzE8raCnuD,WAAY,KACZC,aAAc,MyEzrarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,WzE+raJM,IyE/raP,WAEC,MAAOb,MAAKmvD,WzEgsaNxsD,IyE7raP,SAAmBC,GAElB,GAAI5C,KAAKmvD,WAAavsD,EACrB,MAED5C,MAAKmvD,UAAYvsD,CAEjB5C,MAAKkvD,oBAEL,IAAIlvD,KAAKmvD,UAAUtjC,QAAQ26B,GAAkB,CAC5C,GAAI4I,GAAoDpvD,KAAKmvD,SAC7DnvD,MAAKgvD,WAAaI,EAAgBC,UAAUhgB,SAE5CrvC,MAAK2uD,SAAWS,EAAgBC,UAAUC,KAAKjrD,MAC/CrE,MAAK4uD,QAAUQ,EAAgBC,UAAUC,KAAKlrD,UACxC,CACNpE,KAAKgvD,WAAa,IAClBhvD,MAAK2uD,SAAW,CAChB3uD,MAAK4uD,QAAU,EAIhB5uD,KAAKuvD,uBzEyraCxuD,WAAY,KACZC,aAAc,MyEprarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,czE0raJM,IyE1raP,WAEC,MAAOb,MAAKmuD,czE2raNxrD,IyExraP,SAAsBC,GAErB,GAAI5C,KAAKmuD,cAAgBvrD,EACxB,MAED5C,MAAKmuD,aAAevrD,CAEpB5C,MAAKkvD,sBzEuraCnuD,WAAY,KACZC,aAAc,MyElrarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,qBzEwraJM,IyExraP,WAEC,MAAOb,MAAKguD,qBzEyraNrrD,IyEtraP,SAA6BC,GAE5B,GAAI5C,KAAKguD,qBAAuBprD,EAC/B,MACD5C,MAAKguD,oBAAsBprD,CAC3B5C,MAAKkvD,sBzEuraCnuD,WAAY,KACZC,aAAc,MyEjrarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,sBzEwraJM,IyExraP,WAEC,MAAOb,MAAKouD,qBzEyraNzrD,IyEtraP,SAA8BC,GAE7B,GAAI5C,KAAKouD,qBAAuBxrD,EAC/B,MAED5C,MAAKouD,oBAAsBxrD,CAE3B5C,MAAKkvD,sBzEqraCnuD,WAAY,KACZC,aAAc,MyE7qarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,uBzEsraJM,IyEtraP,WAEC,MAAOb,MAAKsuD,sBzEuraN3rD,IyEpraP,SAA+BC,GAE9B,GAAI5C,KAAKsuD,sBAAwB1rD,EAChC,MAED5C,MAAKsuD,qBAAuB1rD,CAE5B5C,MAAKkvD,sBzEmraCnuD,WAAY,KACZC,aAAc,MyE3qarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,wBzEoraJM,IyEpraP,WAEC,MAAOb,MAAKquD,uBzEqraN1rD,IyElraP,SAAgCC,GAE/B,GAAI5C,KAAKquD,uBAAyBzrD,EACjC,MAED5C,MAAKquD,sBAAwBzrD,CAE7B5C,MAAKkvD,sBzEiraCnuD,WAAY,KACZC,aAAc,MyE3qadksD,GAAA3sD,UAAAU,QAAP,WAEC,GAAIjC,EACJ,IAAI2Q,EAEJA,GAAM3P,KAAKu8C,SAASh9C,MACpB,KAAKP,EAAI,EAAGA,EAAI2Q,EAAK3Q,IACpBgB,KAAKu8C,SAASv9C,GAAGiC,SAElBjB,MAAKu8C,SAAW,GAAI/2C,OAMrB7E,QAAAC,eAAWssD,EAAA3sD,UAAA,azE8qaJM,IyE9qaP,WAEC,MAAOb,MAAKyuD,YzE+qaN9rD,IyE5qaP,SAAqBC,GAEpB,GAAI5C,KAAKyuD,WAAa7rD,EACrB,MAED5C,MAAKyuD,WAAa7rD,CAElB5C,MAAKkvD,sBzE2qaCnuD,WAAY,KACZC,aAAc,MyE/parBL,QAAAC,eAAWssD,EAAA3sD,UAAA,azE4qaJM,IyE5qaP,WAEC,MAAOb,MAAKs8C,azE6qaN35C,IyE1qaP,SAAqBC,GAEpB,GAAI5C,KAAKs8C,aAAe15C,EACvB,MAED5C,MAAKs8C,YAAc15C,CAEnB5C,MAAK88C,sBzEyqaC/7C,WAAY,KACZC,aAAc,MyElqarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,sBzE0qaJM,IyE1qaP,WAEC,MAAOb,MAAKwvD,qBzE2qaN7sD,IyExqaP,SAA8BC,GAE7B,GAAI5C,KAAKwvD,qBAAuB5sD,EAC/B,MAED5C,MAAKwvD,oBAAsB5sD,CAE3B5C,MAAKkvD,sBzEuqaCnuD,WAAY,KACZC,aAAc,MyEhqarBL,QAAAC,eAAWssD,EAAA3sD,UAAA,kBzEwqaJM,IyExqaP,WAEC,MAAOb,MAAKq8C,kBzEyqaN15C,IyEtqaP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI5C,KAAKq8C,kBAAoBz5C,EAC5B,MAED5C,MAAKq8C,iBAAmBz5C,CAExB5C,MAAKkvD,sBzEoqaCnuD,WAAY,KACZC,aAAc,MyE/parBL,QAAAC,eAAWssD,EAAA3sD,UAAA,SzEqqaJM,IyErqaP,WAEC,MAAOb,MAAK4uD,SzEsqaN7tD,WAAY,KACZC,aAAc,MyExpadksD,GAAA3sD,UAAA4lB,UAAP,SAAiBspC,GAEhBzvD,KAAK08C,QAAQr2C,KAAKopD,EAElB,IAAIC,EACJ,IAAI1pC,GAAiCypC,EAAMzpC,QAE3C,IAAIA,EACH0pC,EAA+B1pC,EAAS0pC,YAEzC,IAAID,EAAMzpC,SAAU,CACnB,GAAIhmB,KAAK68C,eAAiB6S,GAAgB1vD,KAAK68C,cAAe,CAC7D,KAAM,IAAI39C,OAAM,iGACV,CACN,GAAIc,KAAK68C,eAAiB6S,EAAc,CAEvC1vD,KAAK68C,cAAgB6S,CAErB1vD,MAAK2vD,wBAKRF,EAAM9zC,cAAc,GAAIqpC,GAAqBA,EAAqBG,qBAAsBnlD,OASlFktD,GAAA3sD,UAAA2lB,aAAP,SAAoBupC,GAEnBzvD,KAAK08C,QAAQ1/B,OAAOhd,KAAK08C,QAAQ3/B,QAAQ0yC,GAAQ,EAEjD,IAAIzvD,KAAK08C,QAAQn9C,QAAU,EAAG,CAC7BS,KAAK68C,cAAgB,IAErB78C,MAAK2vD,sBAGNF,EAAM9zC,cAAc,GAAIqpC,GAAqBA,EAAqBG,qBAAsBnlD,OAQzFW,QAAAC,eAAWssD,EAAA3sD,UAAA,WzE2paJM,IyE3paP,WAEC,MAAOb,MAAK08C,SzE4paN37C,WAAY,KACZC,aAAc,MyErpadksD,GAAA3sD,UAAA2uD,mBAAP,WAEC,GAAIv/C,GAAa3P,KAAKu8C,SAASh9C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAKu8C,SAASv9C,GAAGg+C,mBAGXkQ,GAAA3sD,UAAAovD,oBAAR,WAEC,GAAIhgD,GAAa3P,KAAKu8C,SAASh9C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAKu8C,SAASv9C,GAAG2wD,sBAGZzC,GAAA3sD,UAAAu8C,mBAAP,WAEC,GAAIntC,GAAa3P,KAAKu8C,SAASh9C,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAKu8C,SAASv9C,GAAG+9C,mBAMXmQ,GAAA3sD,UAAAuuD,eAAR,SAAuBvgD,GAEtBvO,KAAK88C,qBAGCoQ,GAAA3sD,UAAAgvD,oBAAP,WAEC,IAAKvvD,KAAK4vD,aACT5vD,KAAK4vD,aAAe,GAAIhhB,GAAcA,EAAcW,aAErDvvC,MAAK2b,cAAc3b,KAAK4vD,cAGlB1C,GAAA3sD,UAAA28C,YAAP,SAAmB5a,GAElBtiC,KAAKu8C,SAASl2C,KAAKi8B,EAEnB,OAAOA,GAGD4qB,GAAA3sD,UAAA48C,eAAP,SAAsB7a,GAErBtiC,KAAKu8C,SAASv/B,OAAOhd,KAAKu8C,SAASx/B,QAAQulB,GAAS,EAEpD,OAAOA,GAET,OAAA4qB,IApnB2B1sD,EAsnB3Bf,GAAsBJ,QAAb6tD,IzE8oaN5P,iCAAiCl8C,UAAUu5C,+BAA+Bv5C,UAAUmd,sCAAsCnd,UAAUD,oCAAoCC,UAAU2uC,0CAA0C,0CAA0CgV,iDAAiD,iDAAiDkD,8CAA8C,gDAAgD4H,6DAA6D,SAAStxD,EAAQkB,EAAOJ,GAC9hB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0EzybtB,IAAOG,GAASjC,EAAe,oC1Emzb/B,I0ElybMuxD,GAAe,SAAApvD,GAASX,EAAxB+vD,EAAepvD,EAqBpB,SArBKovD,KAuBJpvD,EAAApB,KAAAU,KAnBMA,MAAA+vD,iBAA0B,CAC1B/vD,MAAAgwD,uBAAgC,CAChChwD,MAAAiwD,wBAAiC,CACjCjwD,MAAAkwD,8BAAuC,CACvClwD,MAAAmwD,iBAA0B,EAqB1BL,EAAAvvD,UAAAU,QAAP,YAOAN,QAAAC,eAAWkvD,EAAAvvD,UAAA,a1EoxbJM,I0EpxbP,WAEC,MAAOivD,GAAgB5uD,W1EqxbjBH,WAAY,KACZC,aAAc,M0EhxbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,wB1EsxbJM,I0EtxbP,WAEC,MAAOb,MAAKgwD,wB1EuxbNjvD,WAAY,KACZC,aAAc,M0ElxbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,kB1EwxbJM,I0ExxbP,WAEC,MAAOb,MAAK+vD,kB1EyxbNhvD,WAAY,KACZC,aAAc,M0EpxbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,+B1E0xbJM,I0E1xbP,WAEC,MAAOb,MAAKkwD,+B1E2xbNnvD,WAAY,KACZC,aAAc,M0EtxbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,yB1E4xbJM,I0E5xbP,WAEC,MAAOb,MAAKiwD,yB1E6xbNlvD,WAAY,KACZC,aAAc,M0ExxbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,kB1E8xbJM,I0E9xbP,WAEC,MAAOb,MAAKmwD,kB1E+xbNpvD,WAAY,KACZC,aAAc,M0E1xbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,e1EgybJM,I0EhybP,WAEC,MAAOb,MAAKowD,e1EiybNrvD,WAAY,KACZC,aAAc,M0E5xbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,qB1EkybJM,I0ElybP,WAEC,MAAOb,MAAKqwD,qB1EmybNtvD,WAAY,KACZC,aAAc,M0E9xbrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,sB1EoybJM,I0EpybP,WAEC,MAAOb,MAAKswD,sB1EqybNvvD,WAAY,KACZC,aAAc,M0EhybrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,4B1EsybJM,I0EtybP,WAEC,MAAOb,MAAKuwD,4B1EuybNxvD,WAAY,KACZC,aAAc,M0ElybrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,e1EwybJM,I0ExybP,WAEC,MAAOb,MAAKwwD,e1EyybNzvD,WAAY,KACZC,aAAc,M0EpybrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,qB1E0ybJM,I0E1ybP,WAEC,MAAOb,MAAKywD,qB1E2ybN1vD,WAAY,KACZC,aAAc,M0EtybrBL,QAAAC,eAAWkvD,EAAAvvD,UAAA,mB1E4ybJM,I0E5ybP,WAEC,MAAOb,MAAK0wD,mB1E6ybN3vD,WAAY,KACZC,aAAc,M0Exybd8uD,GAAAvvD,UAAAowD,cAAP,SAAqB9zC,GAEpB7c,KAAK4wD,mBAAmB/zC,GAOjBizC,GAAAvvD,UAAAqwD,mBAAR,SAA2B/zC,G1E6ybpB,G0E1ybFg0C,GAAqBh0C,EAAWi0C,aAAaj3C,aACjD,IAAIk3C,EAEJ,IAAIt6B,GAAYo6B,EAAU5tD,EAAGyzB,EAAYm6B,EAAU3tD,EAAGyzB,EAAYk6B,EAAUtqD,CAC5E,IAAII,GAAWC,EAAWoS,CAC1B,IAAIvR,GAAUupD,EAAe,CAC7B,IAAIhyD,EAGJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKmwD,mBAAoBnxD,EAAG,CAE3C+xD,EAAW/wD,KAAKwwD,cAAcxxD,GAAG6a,aACjClT,GAAK8vB,EAAKs6B,EAAS9tD,CACnB2D,GAAK8vB,EAAKq6B,EAAS7tD,CACnB8V,GAAK2d,EAAKo6B,EAASxqD,CAEnBkB,GAAId,EAAGA,EAAKC,EAAGA,EAAKoS,EAAGA,CAGvBvR,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtBzH,MAAKywD,oBAAoBzxD,GAAKyI,CAC9BupD,IAASvpD,EAIVupD,EAAQ,EAAEA,CAEV,KAAKhyD,EAAI,EAAGA,EAAIgB,KAAKmwD,mBAAoBnxD,EACxCgB,KAAKywD,oBAAoBzxD,IAAMgyD,EAlLnBlB,GAAA5uD,UAAmB,qBAoLlC,OAAA4uD,IAtL8BtvD,EAwLLf,GAAAJ,QAAhBywD,I1EsybN3uD,oCAAoCC,YAAY6vD,+DAA+D,SAAS1yD,EAAQkB,EAAOJ,GAC1I,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Er/btB,IAAO03C,GAAKx5C,EAAgB,+BAG5B,IAAOg0C,GAAgBh0C,EAAc,+CACrC,IAAOw1C,GAAUx1C,EAAe,yCAChC,IAAOy8C,GAAUz8C,EAAe,yCAChC,IAAOkiB,GAAUliB,EAAe,uCAChC,IAAOuxD,GAAevxD,EAAc,4D3E2/bpC,I2Ep/bM2yD,GAAiB,SAAAxwD,GAASX,EAA1BmxD,EAAiBxwD,EAStB,SATKwwD,GASOC,GATb,GAAA3lD,GAAAxL,IAWEU,GAAApB,KAAAU,KAEAA,MAAKoxD,4BAA8B,SAAC7iD,GAAqB,MAAA/C,GAAK6lD,mBAAmB9iD,GAEjFvO,MAAKmxD,OAASA,EAMfxwD,OAAAC,eAAWswD,EAAA3wD,UAAA,U3E++bJM,I2E/+bP,WAEC,MAAOb,MAAKsxD,S3Eg/bN3uD,I2E7+bP,SAAkBC,GAEjB,GAAI2uD,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAI5vC,EAEJ,IAAI/hB,KAAKsxD,QACRtxD,KAAK4xD,gBAEN5xD,MAAKsxD,QAAU1uD,CACf5C,MAAK0wD,kBAAoB9tD,CACzB5C,MAAKowD,cAAgB,GAAI5qD,MACzBxF,MAAKswD,qBAAuB,GAAI9qD,MAChCxF,MAAKqwD,oBAAsB,GAAI7qD,MAC/BxF,MAAKuwD,2BAA6B,GAAI/qD,MACtCxF,MAAKwwD,cAAgB,GAAIhrD,MAEzB,IAAImK,GAAa/M,EAAMrD,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAAG,CACpC+iB,EAAQnf,EAAM5D,EACd+iB,GAAMtS,iBAAiBgR,EAAWuB,oBAAqBhiB,KAAKoxD,4BAE5D,IAAIrvC,YAAiBi5B,GAAY,CAChC,GAAIj5B,EAAM5T,aACTnO,KAAKswD,qBAAqBmB,KAAwC1vC,MAElE/hB,MAAKowD,cAAcmB,KAAiCxvC,MAE/C,IAAIA,YAAiBwwB,GAAkB,CAC7C,GAAIxwB,EAAM5T,aACTnO,KAAKuwD,2BAA2BmB,KAAoD3vC,MAEpF/hB,MAAKqwD,oBAAoBmB,KAA6CzvC,MAEjE,IAAIA,YAAiBgyB,GAAY,CACvC/zC,KAAKwwD,cAAcmB,KAAiC5vC,GAItD,GAAI/hB,KAAKgwD,wBAA0BwB,GAAwBxxD,KAAK+vD,kBAAoBwB,GAAkBvxD,KAAKmwD,kBAAoBwB,GAAkB3xD,KAAKiwD,yBAA2BwB,GAAyBzxD,KAAKkwD,+BAAiCwB,EAC/O,MAED1xD,MAAKgwD,uBAAyBwB,CAC9BxxD,MAAKkwD,8BAAgCwB,CACrC1xD,MAAK+vD,iBAAmBwB,CACxBvxD,MAAKiwD,wBAA0BwB,CAC/BzxD,MAAKmwD,iBAAmBwB,CAGxB3xD,MAAKywD,oBAAsB,GAAIjrD,OAAcpC,KAAKmB,KAAKotD,EAAe,GAAG,EAGzE3xD,MAAK2b,cAAc,GAAIo8B,GAAMA,EAAMkX,U3Eq+b7BluD,WAAY,KACZC,aAAc,M2E/9bbkwD,GAAA3wD,UAAAqxD,eAAR,WAEC,GAAIjiD,GAAa3P,KAAKsxD,QAAQ/xD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EACjCgB,KAAKsxD,QAAQtyD,GAAGuQ,oBAAoBkR,EAAWuB,oBAAqBhiB,KAAKoxD,6BAMnEF,GAAA3wD,UAAA8wD,mBAAR,SAA2B9iD,GAK1B,GAAIwT,GAA8BxT,EAAMwJ,MAExC,IAAIgK,YAAiBi5B,GACpBh7C,KAAK6xD,mBAAgC9vC,OACjC,IAAIA,YAAiBwwB,GACzBvyC,KAAK8xD,yBAA4C/vC,EAElD/hB,MAAK2b,cAAc,GAAIo8B,GAAMA,EAAMkX,SAM5BiC,GAAA3wD,UAAAuxD,yBAAR,SAAiC/vC,GAEhC,GAAIgwC,GAAyChwC,CAE7C,IAAIA,EAAM5T,aAAc,GACrBnO,KAAKgwD,yBACLhwD,KAAKkwD,6BAGPlwD,MAAKqwD,oBAAoBrzC,OAAOhd,KAAKqwD,oBAAoBtzC,QAAQg1C,GAAK,EACtE/xD,MAAKuwD,2BAA2BlqD,KAAK0b,OAE/B,GACJ/hB,KAAKgwD,yBACLhwD,KAAKkwD,6BAEPlwD,MAAKuwD,2BAA2BvzC,OAAOhd,KAAKuwD,2BAA2BxzC,QAAQg1C,GAAK,EACpF/xD,MAAKqwD,oBAAoBhqD,KAAK0b,IAOxBmvC,GAAA3wD,UAAAsxD,mBAAR,SAA2B9vC,GAE1B,GAAIiwC,GAA6BjwC,CAEjC,IAAIA,EAAM5T,aAAc,GACrBnO,KAAK+vD,mBACL/vD,KAAKiwD,uBACPjwD,MAAKowD,cAAcpzC,OAAOhd,KAAKowD,cAAcrzC,QAAQi1C,GAAK,EAC1DhyD,MAAKswD,qBAAqBjqD,KAAK0b,OACzB,GACJ/hB,KAAK+vD,mBACL/vD,KAAKiwD,uBAEPjwD,MAAKswD,qBAAqBtzC,OAAOhd,KAAKswD,qBAAqBvzC,QAAQi1C,GAAK,EACxEhyD,MAAKowD,cAAc/pD,KAAK0b,IAG3B,OAAAmvC,IA9JgCpB,EAgKLrwD,GAAAJ,QAAlB6xD,I3Eu9bNvW,+BAA+Bv5C,UAAUixC,+CAA+C,+CAA+CyB,yCAAyC,yCAAyCgH,yCAAyC,yCAAyCv4B,uCAAuC,uCAAuCstC,4DAA4D,8DAA8DoC,kEAAkE,SAAS1zD,EAAQkB,EAAOJ,GAChlB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4EzoctB,IAAOwK,GAAatM,EAAc,qCAClC,IAAOowC,GAASpwC,EAAe,iCAC/B,IAAOw5C,GAAKx5C,EAAgB,+BAC5B,IAAOulB,GAAevlB,EAAc,yCAEpC,IAAO2zD,GAAoB3zD,EAAa,mDAKxC,IAAO2gC,GAAM3gC,EAAgB,qCAC7B,IAAO+zC,GAAuB/zC,EAAY,qEAG1C,IAAM4zD,GAAmB,SAAAzxD,GAASX,EAA5BoyD,EAAmBzxD,EAgBxB,SAhBKyxD,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEX1xD,EAAApB,KAAAU,KAfOA,MAAAqyD,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAIlzD,OAAM,iDAEjBc,MAAKsyD,aAAeF,CACpBpyD,MAAKuyD,kBAAoB,GAAIzuC,GAAgB9jB,KAC7CA,MAAKmnB,OAGCgrC,EAAA5xD,UAAAiyD,cAAP,SAAqBrsD,GAEpB,MAAOnG,MAAKyyD,aAAatsD,GAGnBgsD,GAAA5xD,UAAAmyD,cAAP,SAAqBvsD,EAAuBvD,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIuD,GAASnG,KAAKsyD,aACjB,KAAM,IAAIpzD,OAAM,qDAEjBc,MAAKyyD,aAAatsD,GAASvD,EAGrBuvD,GAAA5xD,UAAAoyD,oBAAP,SAA2Bn3C,GAE1B,MAAOxb,MAAK4yD,cAAcp3C,GAAWq2B,eAG9BsgB,GAAA5xD,UAAA4mB,KAAR,WAECnnB,KAAKyyD,aAAe,GAAIjtD,OAAcxF,KAAKsyD,aAC3CtyD,MAAK6yD,oBAAsB,GAAIrtD,OAAcxF,KAAKsyD,aAElD,IAAI1zD,GAAW,CACf,KAAK,GAAII,GAAmBgB,KAAKsyD,aAAe,EAAGtzD,GAAK,IAAKA,EAAG,CAC/DgB,KAAKyyD,aAAazzD,GAAKJ,CACvBA,IAAK,GAGNoB,KAAK8yD,aAAettD,OAAe,EAAG,GAAI,EAAG,EAC7CxF,MAAK+yD,aAAevtD,MAAc,EAAG,GAAI,GAAI,EAC7CxF,MAAKgzD,eAAiB,GAAIxtD,OAAiB,EAC3CxF,MAAKizD,aAAe,GAAIztD,MACxBxF,MAAK4yD,cAAgB,GAAIptD,MAEzB,KAAKxG,EAAI,EAAGA,EAAIgB,KAAKsyD,eAAgBtzD,EAAG,CACvCgB,KAAKizD,aAAaj0D,GAAK,GAAIkzD,EAC3BlyD,MAAK4yD,cAAc5zD,GAAK,GAAIkgC,GAAOl/B,KAAKizD,aAAaj0D,KAIhDmzD,GAAA5xD,UAAA2yD,kBAAP,SAAyBtwD,GAExBlC,EAAAH,UAAM2yD,kBAAiB5zD,KAAAU,KAAC4C,EAExB5C,MAAKmzD,yBAGEhB,GAAA5xD,UAAA4yD,uBAAR,WAECnzD,KAAKqyD,sBAAwB,KAG9B1xD,QAAAC,eAAWuxD,EAAA5xD,UAAA,e5EmmcJM,I4EnmcP,WAEC,MAAOb,MAAKsyD,c5EomcN3vD,I4EjmcP,SAAuBC,GAEtB,GAAIA,GAAS5C,KAAKsyD,aACjB,MAED;GAAI1vD,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAI1D,OAAM,iDAEjBc,MAAKsyD,aAAe1vD,CACpB5C,MAAKmzD,wBACLnzD,MAAKmnB,MACLnnB,MAAK2b,cAAc,GAAIo8B,GAAMA,EAAMkX,U5Egmc7BluD,WAAY,KACZC,aAAc,M4E9lcdmxD,GAAA5xD,UAAA6yD,cAAP,SAAqBr7C,EAAwB0D,EAAa8B,GAEzD,GAAIvd,KAAKqyD,sBACRryD,KAAKqzD,oBAENrzD,MAAKszD,kBAAkBC,WAAavzD,KAAKwzD,YACzCxzD,MAAKszD,kBAAkB55C,OAAS1Z,KAAKyzD,oBACrCzzD,MAAKszD,kBAAkB95C,OACvBiC,GAAMgjB,mBAAmBz+B,KAAKszD,kBAE9B/1C,GAASm2C,iBAAiB1zD,KAAKszD,kBAAmBv7C,EAAOs3C,UAAUsE,QAAS3zD,KAAKsyD,aAActyD,KAAKgzD,eAAgBhzD,KAAK4yD,eAGlHT,GAAA5xD,UAAA8yD,mBAAR,WAEC,GAAIO,GAAc5zD,KAAK6zD,eAAe,EAEtC7zD,MAAKgzD,eAAe,GAAK,GAAIrkB,GAAU,EAAG,EAAGilB,EAAMA,EACnD5zD,MAAKgzD,eAAe,GAAK,GAAIrkB,GAAUilB,EAAM,EAAGA,EAAMA,EACtD5zD,MAAKgzD,eAAe,GAAK,GAAIrkB,GAAU,EAAGilB,EAAMA,EAAMA,EACtD5zD,MAAKgzD,eAAe,GAAK,GAAIrkB,GAAUilB,EAAMA,EAAMA,EAAMA,EAEzD5zD,MAAKqyD,sBAAwB,MAGvBF,GAAA5xD,UAAAuzD,uBAAP,SAA8BC,GAE7B,GAAI1/B,EACJ,IAAI8N,GAAyB4xB,EAAW5xB,UACxC,IAAI6xB,GAAwB7xB,EAAW8xB,IACvC,IAAIC,GAAyB/xB,EAAWgyB,IAAMH,CAE9Ch0D,MAAKo0D,oCAAoCL,EAAYA,EAAW5xB,WAAWkyB,eAAgBr0D,KAAKs0D,SAChGt0D,MAAKs0D,SAASxlD,YAAY,IAAK,IAAK,EACpC9O,MAAKu0D,yBAAyBlgC,OAASr0B,KAAKs0D,QAC5Ct0D,MAAKw0D,kBAAkBT,EAEvB,KAAK,GAAI/0D,GAAmB,EAAGA,EAAIgB,KAAKsyD,eAAgBtzD,EAAG,CAC1Dq1B,EAASr0B,KAAKizD,aAAaj0D,GAAGq1B,MAE9Br0B,MAAK6yD,oBAAoB7zD,GAAKg1D,EAAiBh0D,KAAKyyD,aAAazzD,GAAGk1D,CACpEl0D,MAAK4yD,cAAc5zD,GAAGmK,UAAUusB,SAAW11B,KAAKyzD,qBAAqBtqD,UAAUusB,QAE/E11B,MAAKy0D,0BAA0BpgC,EAAQr0B,KAAKyyD,aAAazzD,GAAIgB,KAAK8yD,aAAa9zD,GAAIgB,KAAK+yD,aAAa/zD,GAErGgB,MAAKizD,aAAaj0D,GAAGq1B,OAASA,GAIxB89B,GAAA5xD,UAAAk0D,0BAAR,SAAkCpgC,EAAiBqgC,EAAmBC,EAAmBC,GAExF,GAAIx8C,GAAoBvN,EAAc4N,kBACtC,IAAIo8C,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIh8B,GAAcn1B,OAAOoxD,kBAAmBh8B,EAAcp1B,OAAOoxD,kBAAmB/7B,CACpF,IAAIC,GAAct1B,OAAOqxD,kBAAmB97B,EAAcv1B,OAAOqxD,kBAAmB77B,EAAcx1B,OAAOqxD,iBACzG,IAAIp2D,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACd61D,EAAK70D,KAAKq1D,eAAer2D,EACzB81D,GAAK90D,KAAKq1D,eAAer2D,EAAI,EAC7B+1D,GAAK/0D,KAAKq1D,eAAer2D,EAAI,EAC7Bg2D,GAAKH,GAAM70D,KAAKq1D,eAAer2D,EAAI,IAAM61D,GAAIH,CAC7CO,GAAKH,GAAM90D,KAAKq1D,eAAer2D,EAAI,IAAM81D,GAAIJ,CAC7CQ,GAAKH,GAAM/0D,KAAKq1D,eAAer2D,EAAI,IAAM+1D,GAAIL,CAC7C,IAAIG,EAAK37B,EACRA,EAAO27B,CACR,IAAIA,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAK37B,EACRA,EAAO27B,CACR,IAAIA,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAKx7B,EACRA,EAAOw7B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK97B,EACRA,EAAO87B,CACR,IAAIA,EAAK37B,EACRA,EAAO27B,CACR,IAAIC,EAAK37B,EACRA,EAAO27B,CACRl2D,IAAK,EAGNo6B,EAAO,CAEP,IAAI3xB,GAAY4xB,EAAOH,CACvB,IAAIo8B,GAAYh8B,EAAOH,CACvB,IAAIl5B,GAAW,GAAGs5B,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQl5B,KAAKu1D,MACd,IAAIp8B,EAAO,EACVA,GAAQn5B,KAAKu1D,MACdr8B,GAAO91B,KAAKC,MAAM61B,EAAKl5B,KAAKu1D,QAAQv1D,KAAKu1D,MACzCp8B,GAAO/1B,KAAKC,MAAM81B,EAAKn5B,KAAKu1D,QAAQv1D,KAAKu1D,MAEzC,IAAIC,GAAe,EAAEx1D,KAAKu1D,MAC1B9tD,GAAIrE,KAAKC,MAAMoE,EAAE+tD,EAAQ,GAAGA,CAC5BF,GAAIlyD,KAAKC,MAAMiyD,EAAEE,EAAQ,GAAGA,CAE5Bn8B,GAAOH,EAAOzxB,CACd6xB,GAAOH,EAAOm8B,CAEd7tD,GAAI,EAAEA,CACN6tD,GAAI,EAAEA,CAENl9C,GAAI,GAAK,EAAE3Q,CACX2Q,GAAI,GAAK,EAAEk9C,CACXl9C,GAAI,IAAMnY,CACVmY,GAAI,MAAQihB,EAAOH,GAAMzxB,CACzB2Q,GAAI,MAAQkhB,EAAOH,GAAMm8B,CACzBl9C,GAAI,KAAOghB,EAAKn5B,CAChBmY,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFic,GAAO1b,gBAAgBP,EACvBic,GAAOvlB,YAAY,IAAK,IAAK,EAC7BulB,GAAOlY,kBAAkBw4C,EAAYC,EAAY,EACjDvgC,GAAOvlB,YAAY,GAAI,GAAI,GAGrBqjD,GAAA5xD,UAAAkP,iBAAP,SAAwB6D,EAAaC,GAEpCvT,KAAKuyD,kBAAkB9iD,iBAAiB6D,EAAMC,GAGxC4+C,GAAA5xD,UAAAgP,oBAAP,SAA2B+D,EAAaC,GAEvCvT,KAAKuyD,kBAAkBhjD,oBAAoB+D,EAAMC,GAG3C4+C,GAAA5xD,UAAAob,cAAP,SAAqBpN,GAEpB,MAAOvO,MAAKuyD,kBAAkB52C,cAAcpN,GAGtC4jD,GAAA5xD,UAAA8Z,iBAAP,SAAwB/G,GAEvB,MAAOtT,MAAKuyD,kBAAkBl4C,iBAAiB/G,GAGhD3S,QAAAC,eAAIuxD,EAAA5xD,UAAA,wB5E+jcGM,I4E/jcP,WAEC,MAAOb,MAAK6yD,qB5EgkcN9xD,WAAY,KACZC,aAAc,M4E/jctB,OAAAmxD,IA/PkC7f,EAiQL7yC,GAAAJ,QAApB8yD,I5EmkcNxX,+BAA+Bv5C,UAAUqjB,yCAAyCrjB,UAAUsd,qCAAqCtd,UAAU0uC,iCAAiC1uC,UAAUq0D,mDAAmDr0D,UAAU8iC,qCAAqC,qCAAqC0P,qEAAqE,uEAAuEiI,kEAAkE,SAASt9C,EAAQkB,EAAOJ,GACtiB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Ex1ctB,IAAOq1D,GAASn3D,EAAe,iCAM/B,IAAO2gC,GAAM3gC,EAAgB,qCAE7B,IAAOo3D,GAAgBp3D,EAAc,8DAErC,IAAOkoD,GAAiBloD,EAAa,gDAErC,IAAMw8C,GAAmB,SAAAr6C,GAASX,EAA5Bg7C,EAAmBr6C,EAMxB,SANKq6C,KAQJr6C,EAAApB,KAAAU,KAEAA,MAAK6zD,eAAiB,GACtB7zD,MAAK41D,aAAe,GAAIpwD,MACxBxF,MAAK61D,cAGE9a,EAAAx6C,UAAAs1D,YAAR,WAEC71D,KAAK4yD,cAAgB,GAAIptD,MACzBxF,MAAK81D,aAAe,GAAItwD,MAGxBxF,MAAK+1D,UAAU,EAAG,GAAI,EACtB/1D,MAAK+1D,UAAU,GAAI,GAAI,EACvB/1D,MAAK+1D,WAAW,GAAI,EAAG,EACvB/1D,MAAK+1D,UAAU,GAAI,EAAG,EACtB/1D,MAAK+1D,UAAU,EAAG,EAAG,EACrB/1D,MAAK+1D,UAAU,EAAG,IAAK,GAGhBhb,GAAAx6C,UAAAw1D,UAAR,SAAkB5lD,EAAkBC,EAAkBC,GAErD,GAAI2lD,GAAa,GAAI92B,EACrB82B,GAAI7lD,UAAYA,CAChB6lD,GAAI5lD,UAAYA,CAChB4lD,GAAI3lD,UAAYA,CAChB2lD,GAAI7zB,WAAW8xB,KAAO,GAEtB,IAAI9xB,GAA2D6zB,EAAI7zB,UACnEA,GAAW8zB,YAAc,EACzBj2D,MAAK81D,aAAazvD,KAAK87B,EACvB6zB,GAAI7zB,WAAWC,cAAgB,CAC/BpiC,MAAK4yD,cAAcvsD,KAAK2vD,GAIlBjb,GAAAx6C,UAAA21D,oBAAP,WAEE,MAAO,IAAIzP,GAAkB,GAAIiP,GAAU11D,KAAK6zD,iBAI3C9Y,GAAAx6C,UAAAuzD,uBAAP,SAA8BC,GAE7B,GAAIhyC,GAAgC/hB,KAAY,OAChD,IAAIm2D,GAAqBp0C,EAAMm5B,SAC/B,IAAItlC,GAAe5V,KAAKo2D,QAAQv8C,aAGhC,KAAK,GAAI7a,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCgB,KAAK81D,aAAa92D,GAAGm1D,IAAMgC,CAC3Bn2D,MAAK4yD,cAAc5zD,GAAGmK,UAAU2M,SAAWF,CAC3C5V,MAAK41D,aAAa52D,GAAK,MAKlB+7C,GAAAx6C,UAAA6yD,cAAP,SAAqBr7C,EAA0B0D,EAAa8B,GAE3D,IAAK,GAAIve,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIgB,KAAK41D,aAAa52D,GAAI,CACzBgB,KAAKszD,kBAAkB55C,OAAS1Z,KAAK4yD,cAAc5zD,EACnDgB,MAAKszD,kBAAkB95C,OACvBiC,GAAMgjB,mBAAmBz+B,KAAKszD,kBAC9B/1C,GAAS84C,SAASr2D,KAAKszD,kBAAmBv7C,EAAOu+C,YAAYC,UAAW,KAAMv3D,KAIlF,OAAA+7C,IA7EkC4a,EA+ELl2D,GAAAJ,QAApB07C,I7Eg0cNyb,iCAAiCp1D,UAAU8iC,qCAAqC,qCAAqCuyB,8DAA8D,8DAA8DvO,gDAAgD,kDAAkDtU,sEAAsE,SAASr1C,EAAQkB,EAAOJ,GACpb,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Eh6ctB,IAAO4sD,GAAO1uD,EAAgB,+BAC9B,IAAOqM,GAAQrM,EAAgB,gCAG/B,IAAO2zD,GAAoB3zD,EAAa,mDAIxC,IAAO2gC,GAAM3gC,EAAgB,qCAE7B,IAAOo3D,GAAgBp3D,EAAc,8DACrC,IAAOioD,GAAejoD,EAAc,8CAEpC,IAAM+zC,GAAuB,SAAA5xC,GAASX,EAAhCuyC,EAAuB5xC,EAc5B,SAdK4xC,KAgBJ5xC,EAAApB,KAAAU,KAXMA,MAAA02D,cAAuB,GAGvB12D,MAAAu1D,OAAgB,EAUtBv1D,MAAKwzD,eACLxzD,MAAKu0D,yBAA2B,GAAIrC,EACpClyD,MAAKyzD,qBAAuB,GAAIv0B,GAAOl/B,KAAKu0D,yBAC5Cv0D,MAAKq1D,iBACLr1D,MAAKs0D,SAAW,GAAI1pD,GAGrBjK,OAAAC,eAAW0xC,EAAA/xC,UAAA,Q9E+4cJM,I8E/4cP,WAEC,MAAOb,MAAKu1D,Q9Eg5cN5yD,I8E74cP,SAAgBC,GAEf5C,KAAKu1D,OAAS3yD,G9E84cR7B,WAAY,KACZC,aAAc,M8E54crBL,QAAAC,eAAW0xC,EAAA/xC,UAAA,e9E+4cJM,I8E/4cP,WAEC,MAAOb,MAAK02D,e9Eg5cN/zD,I8E74cP,SAAuBC,GAEtB5C,KAAK02D,cAAgB9zD,G9E84cf7B,WAAY,KACZC,aAAc,M8E34crBL,QAAAC,eAAW0xC,EAAA/xC,UAAA,oB9E+4cJM,I8E/4cP,WAEC,MAAOb,MAAKyzD,qBAAqB5hB,gB9Eg5c3B9wC,WAAY,KACZC,aAAc,M8E74crBL,QAAAC,eAAW0xC,EAAA/xC,UAAA,S9Ei5cJM,I8Ej5cP,WAEC,MAAOb,MAAK22D,OAAS32D,KAAK42D,Q9Ek5cpB71D,WAAY,KACZC,aAAc,M8Eh5cdsxC,GAAA/xC,UAAAs2D,aAAP,SAAoBC,GAEnB,GAAI92D,KAAK+2D,WAAaD,EACrB,MAEDp2D,GAAAH,UAAMs2D,aAAYv3D,KAAAU,KAAC82D,EAEnB,IAAI92D,KAAK+2D,UAAW,CACnB/2D,KAAKg3D,kBAAoB,IACzBh3D,MAAK6zD,eAAiBiD,EAAS1yD,UACzB,CACNpE,KAAKg3D,kBAAoB,OAIpB1kB,GAAA/xC,UAAA21D,oBAAP,WAEC,MAAO,IAAI1P,GAAgB,GAAIyG,GAAQjtD,KAAK6zD,eAAgB7zD,KAAK6zD,iBAI3DvhB,GAAA/xC,UAAA6yD,cAAP,SAAqBr7C,EAAwB0D,EAAa8B,GAEzDvd,KAAKszD,kBAAkB55C,OAAS1Z,KAAKyzD,oBACrCzzD,MAAKszD,kBAAkBC,WAAavzD,KAAKwzD,YACzCxzD,MAAKszD,kBAAkB95C,OACvBiC,GAAMgjB,mBAAmBz+B,KAAKszD,kBAC9B/1C,GAAS84C,SAASr2D,KAAKszD,kBAAmBv7C,EAAOs3C,UAAUsE,SAIrDrhB,GAAA/xC,UAAAi0D,kBAAP,SAAyBT,GAExB,GAAIkD,GAAoCj3D,KAAKyzD,qBAAqByD,aAClE,IAAIC,GAAmCpD,EAAWmD,aAClDl3D,MAAKwzD,aAAaj0D,OAAS,CAE3BS,MAAKwzD,aAAa,GAAKyD,EAAmB,EAC1Cj3D,MAAKwzD,aAAa,GAAKyD,EAAmB,EAC1Cj3D,MAAKwzD,aAAa,GAAKyD,EAAmB,EAC1Cj3D,MAAKwzD,aAAa,GAAKyD,EAAmB,EAE1C,IAAIl1C,GAA4C/hB,KAAKo2D,OACrD,IAAIgB,GAAer1C,EAAMs1C,cACzB,IAAIC,GAAcF,EAAIn0D,CACtB,IAAIs0D,GAAcH,EAAIl0D,CACtB,IAAIs0D,GAAcJ,EAAI7wD,CACtB,IAAIL,GAAW,CACf,KAAK,GAAIlH,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIo0B,GAAgB+jC,EAAkBn4D,EACtC,IAAIo0B,EAAMr0B,EAAEu4D,EAAOlkC,EAAMlzB,EAAEq3D,EAAOnkC,EAAMC,EAAEmkC,EAAO,EAChDx3D,KAAKwzD,aAAattD,KAAOktB,GAKrBkf,GAAA/xC,UAAAuzD,uBAAP,SAA8BC,GAE7B/zD,KAAKo0D,oCAAoCL,EAAYA,EAAW5xB,WAAWkyB,eAAgBr0D,KAAKs0D,SAChGt0D,MAAKu0D,yBAAyBlgC,OAASr0B,KAAKs0D,QAC5Ct0D,MAAKw0D,kBAAkBT,GAGjBzhB,GAAA/xC,UAAA6zD,oCAAP,SAA2CL,EAAmB0D,EAAuBpjC,GAEpF,GAAIjc,GAAoB,GAAI5S,MAC5B,IAAI4xD,EACJ,IAAIn0D,GAAUC,EAAUqD,CACxB,IAAI2yB,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAIt6B,EAEJ,IAAI+iB,GAA4C/hB,KAAKo2D,OACrDgB,GAAMr1C,EAAMs1C,cACZr3D,MAAKyzD,qBAAqBtqD,UAAUusB,SAAW11B,KAAKo2D,QAAQvlD,cAC5D5N,GAAIG,KAAKC,OAAO0wD,EAAW9wD,EAAIm0D,EAAIn0D,EAAEjD,KAAK02D,eAAe12D,KAAKu1D,QAAQv1D,KAAKu1D,MAC3EryD,GAAIE,KAAKC,OAAO0wD,EAAW7wD,EAAIk0D,EAAIl0D,EAAElD,KAAK02D,eAAe12D,KAAKu1D,QAAQv1D,KAAKu1D,MAC3EhvD,GAAInD,KAAKC,OAAO0wD,EAAWxtD,EAAI6wD,EAAI7wD,EAAEvG,KAAK02D,eAAe12D,KAAKu1D,QAAQv1D,KAAKu1D,MAC3Ev1D,MAAKyzD,qBAAqBxwD,EAAIA,CAC9BjD,MAAKyzD,qBAAqBvwD,EAAIA,CAC9BlD,MAAKyzD,qBAAqBltD,EAAIA,CAE9BvG,MAAKs0D,SAAS1jD,SAAS5Q,KAAKyzD,qBAAqBn+C,sBACjDtV,MAAKs0D,SAAS/3C,QAAQw3C,EAAWljD,eACjC7Q,MAAKs0D,SAASthB,iBAAiBykB,EAASz3D,KAAKq1D,eAE7Cn8B,GAAOG,EAAOr5B,KAAKq1D,eAAe,EAClCl8B,GAAOG,EAAOt5B,KAAKq1D,eAAe,EAClCr1D,MAAK22D,OAAS32D,KAAKq1D,eAAe,EAElCr2D,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdiE,EAAIjD,KAAKq1D,eAAer2D,EACxBkE,GAAIlD,KAAKq1D,eAAer2D,EAAI,EAC5BuH,GAAIvG,KAAKq1D,eAAer2D,EAAI,EAC5B,IAAIiE,EAAIi2B,EACPA,EAAOj2B,CACR,IAAIA,EAAIo2B,EACPA,EAAOp2B,CACR,IAAIC,EAAIi2B,EACPA,EAAOj2B,CACR,IAAIA,EAAIo2B,EACPA,EAAOp2B,CACR,IAAIqD,EAAIvG,KAAK22D,OACZ32D,KAAK22D,OAASpwD,CACfvH,IAAK,EAGNgB,KAAK42D,OAAS,CAEd,IAAInvD,GAAW4xB,EAAOH,CACtB,IAAIo8B,GAAWh8B,EAAOH,CACtB,IAAIl5B,GAAW,GAAGD,KAAK22D,OAAS32D,KAAK42D,OAErC,IAAI19B,EAAO,EACVA,GAAQl5B,KAAKu1D,MAEd,IAAIp8B,EAAO,EACVA,GAAQn5B,KAAKu1D,MAEdr8B,GAAO91B,KAAKC,MAAM61B,EAAKl5B,KAAKu1D,QAAQv1D,KAAKu1D,MACzCp8B,GAAO/1B,KAAKC,MAAM81B,EAAKn5B,KAAKu1D,QAAQv1D,KAAKu1D,MAEzC,IAAIC,GAAe,EAAEx1D,KAAKu1D,MAC1B9tD,GAAIrE,KAAKC,MAAMoE,EAAE+tD,EAAQ,GAAGA,CAC5BF,GAAIlyD,KAAKC,MAAMiyD,EAAEE,EAAQ,GAAGA,CAE5Bn8B,GAAOH,EAAOzxB,CACd6xB,GAAOH,EAAOm8B,CAEd7tD,GAAI,EAAEA,CACN6tD,GAAI,EAAEA,CAENl9C,GAAI,GAAK,EAAE3Q,CACX2Q,GAAI,GAAK,EAAEk9C,CACXl9C,GAAI,IAAMnY,CACVmY,GAAI,MAAQihB,EAAOH,GAAMzxB,CACzB2Q,GAAI,MAAQkhB,EAAOH,GAAMm8B,CACzBl9C,GAAI,KAAOpY,KAAK42D,OAAO32D,CACvBmY,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFic,GAAO1b,gBAAgBP,GAEzB,OAAAk6B,IAzMsCqjB,EA2MtCl2D,GAAiCJ,QAAxBizC,I9Ew3cNkb,+BAA+BpsD,UAAUqd,gCAAgCrd,UAAUq0D,mDAAmDr0D,UAAU8iC,qCAAqC,qCAAqCuyB,8DAA8D,8DAA8DxO,8CAA8C,gDAAgDyP,0EAA0E,SAASn5D,EAAQkB,EAAOJ,GACzhB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+EpldtB,IAAOiyC,GAAuB/zC,EAAY,qEAE1C,IAAMo5D,GAA2B,SAAAj3D,GAASX,EAApC43D,EAA2Bj3D,EAIhC,SAJKi3D,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEXl3D,EAAApB,KAAAU,KAEAA,MAAK43D,cAAgBA,EAMtBj3D,OAAAC,eAAW+2D,EAAAp3D,UAAA,iB/EkldJM,I+ElldP,WAEC,MAAOb,MAAK63D,gB/EmldNl1D,I+EhldP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAET5C,MAAK63D,eAAiBj1D,G/EildhB7B,WAAY,KACZC,aAAc,M+E/kdd22D,GAAAp3D,UAAAuzD,uBAAP,SAA8BC,GAE7B,GAAI0D,GAAwB1D,EAAW5xB,WAAWkyB,cAElD,KAAK,GAAIr1D,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAIwI,GAAWiwD,EAAQz4D,EACvBgB,MAAKq1D,eAAer2D,GAAKwI,CACzBxH,MAAKq1D,eAAer2D,EAAI,IAAMwI,GAAKiwD,EAAQz4D,EAAI,IAAMwI,GAAGxH,KAAK63D,eAG9D73D,KAAKo0D,oCAAoCL,EAAY/zD,KAAKq1D,eAAgBr1D,KAAKs0D,SAC/Et0D,MAAKu0D,yBAAyBlgC,OAASr0B,KAAKs0D,SAE9C,OAAAqD,IAzC0CrlB,EA2C1C7yC,GAAqCJ,QAA5Bs4D,I/EgldN/jB,qEAAqE,uEAAuE6iB,+DAA+D,SAASl4D,EAAQkB,EAAOJ,GgF9ndtO,GAAO2L,GAAmBzM,EAAa,6CAMvC,IAAOu5D,GAAqBv5D,EAAY,oDAIxC,IAAMo3D,GAAgB,WAYrB,QAZKA,KAME31D,KAAA6zD,eAAwB,IAGvB7zD,MAAA+3D,mBAA6B,IAKpC/3D,MAAKszD,kBAAoBtzD,KAAKg4D,yBAGxBrC,EAAAp1D,UAAAy3D,uBAAP,WAEC,MAAO,IAAIF,GAGZn3D,QAAAC,eAAW+0D,EAAAp1D,UAAA,qBhF2mdJM,IgF3mdP,WAEC,MAAOb,MAAK+3D,oBhF4mdNp1D,IgFzmdP,SAA6BC,GAE5B5C,KAAK+3D,mBAAqBn1D,GhF0mdpB7B,WAAY,KACZC,aAAc,MgFxmdd20D,GAAAp1D,UAAA03D,cAAP,WAECj4D,KAAKk4D,iBAAmB,KAGlBvC,GAAAp1D,UAAAs2D,aAAP,SAAoBC,GAEnB,GAAI92D,KAAK+2D,YAAc/2D,KAAKg3D,kBAC3Bh3D,KAAK+2D,UAAU91D,SAEhBjB,MAAK+2D,UAAYD,EAGlBn2D,QAAAC,eAAW+0D,EAAAp1D,UAAA,ShFsmdJM,IgFtmdP,WAEC,MAAOb,MAAKo2D,ShFumdNzzD,IgFpmdP,SAAiBC,GAEhB5C,KAAKo2D,QAAUxzD,GhFqmdT7B,WAAY,KACZC,aAAc,MgFnmdrBL,QAAAC,eAAW+0D,EAAAp1D,UAAA,YhFsmdJM,IgFtmdP,WAEC,IAAKb,KAAK+2D,UACT/2D,KAAK+2D,UAAY/2D,KAAKk2D,qBAEvB,OAAOl2D,MAAK+2D,WhFsmdNh2D,WAAY,KACZC,aAAc,MgFpmdrBL,QAAAC,eAAW+0D,EAAAp1D,UAAA,gBhFumdJM,IgFvmdP,WAEC,MAAOb,MAAK6zD,gBhFwmdNlxD,IgFrmdP,SAAwBC,GAEvB,GAAIA,GAAS5C,KAAK6zD,eACjB,MAED7zD,MAAKkzD,kBAAkBtwD,IhFqmdjB7B,WAAY,KACZC,aAAc,MgFnmdd20D,GAAAp1D,UAAAU,QAAP,WAECjB,KAAKszD,kBAAoB,IAEzB,IAAItzD,KAAK+2D,YAAc/2D,KAAKg3D,kBAC3Bh3D,KAAK+2D,UAAU91D,SAEhBjB,MAAK+2D,UAAY,KAGXpB,GAAAp1D,UAAA21D,oBAAP,WAEC,KAAM,IAAIlrD,GAGJ2qD,GAAAp1D,UAAA43D,gBAAP,SAAuBC,EAAiC76C,GAEvDvd,KAAKk4D,iBAAmB,KAExBl4D,MAAK8zD,uBAAuBsE,EAAgB1+C,OAE5C,KAAK1Z,KAAK+2D,UACT/2D,KAAK+2D,UAAY/2D,KAAKk2D,qBAEvBl2D,MAAKozD,cAAcpzD,KAAK+2D,UAAWqB,EAAgB38C,MAAO8B,GAGpDo4C,GAAAp1D,UAAAuzD,uBAAP,SAA8BC,GAE7B,KAAM,IAAI/oD,GAGJ2qD,GAAAp1D,UAAA6yD,cAAP,SAAqBr7C,EAAoB0D,EAAa8B,GAErD,KAAM,IAAIvS,GAGJ2qD,GAAAp1D,UAAA2yD,kBAAP,SAAyBtwD,GAExB5C,KAAK6zD,eAAiBjxD,CAEtB,IAAI5C,KAAKg3D,kBAAmB,CAC3B,KAAM93D,OAAM,2DACN,IAAIc,KAAK+2D,UAAW,CAC1B/2D,KAAK+2D,UAAU91D,SACfjB,MAAK+2D,UAAY,MAGpB,OAAApB,KAEAl2D,GAA0BJ,QAAjBs2D,IhFuldNt3C,6CAA6Cjd,UAAUi3D,oDAAoD,sDAAsDC,2CAA2C,SAAS/5D,EAAQkB,EAAOJ,GACvO,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiFpudtB,IAAOk4D,GAAUh6D,EAAe,0CjF0udhC,IiFjudMi6D,GAAU,SAAA93D,GAASX,EAAnBy4D,EAAU93D,EAIf,SAJK83D,GAIOC,EAAqB/+C,EAAe8B,GAE/C9a,EAAApB,KAAAU,KAAMy4D,EAAM/+C,EAAQ8B,GAMdg9C,EAAAj4D,UAAAm4D,gBAAP,SAAuBh6B,IAVT85B,GAAApwD,GAAY,YAc3B,OAAAowD,IAhByBD,EAkBzB94D,GAAoBJ,QAAXm5D,IjF+tdNG,0CAA0C,4CAA4CC,qDAAqD,SAASr6D,EAAQkB,EAAOJ,GACtK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkF/vdtB,IAAOk4D,GAAUh6D,EAAe,0ClFqwdhC,IkF5vdMs6D,GAAoB,SAAAn4D,GAASX,EAA7B84D,EAAoBn4D,EAUzB,SAVKm4D,GAUOJ,EAAqBK,EAAmCt9C,GAEnE9a,EAAApB,KAAAU,KAAMy4D,EAAMK,EAAkBt9C,EAE9Bxb,MAAK+4D,kBAAoBD,EAMnBD,EAAAt4D,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAIA,EAAUs6B,UAAUh5D,MACvB0+B,EAAUu6B,sBAAsBj5D,KAAK+4D,mBAOhCF,GAAAt4D,UAAA24D,gBAAP,WAEC,MAAO,OA9BML,GAAAzwD,GAAY,sBAgC3B,OAAAywD,IAlCmCN,EAoCL94D,GAAAJ,QAArBw5D,IlFqvdNF,0CAA0C,4CAA4CA,2CAA2C,SAASp6D,EAAQkB,EAAOJ,GAC5J,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmFtydtB,IAAO0K,GAAQxM,EAAgB,gCAG/B,IAAOg0B,GAAsBh0B,EAAY,mDACzC,IAAO43B,GAAc53B,EAAc,2CAEnC,IAAO0M,GAAU1M,EAAe,uCAChC,IAAOy4B,GAAUz4B,EAAe,uCAEhC,IAAO0/B,GAAQ1/B,EAAgB,wCnFwyd/B,ImF9xdMg6D,GAAU,SAAA73D,GAASX,EAAnBw4D,EAAU73D,EAWf,SAXK63D,GAWOE,EAAqBp2C,EAAsB7G,GAEtD9a,EAAApB,KAAAU,KATMA,MAAAm5D,kBAAkC,GAAI3zD,MAU5CxF,MAAKo5D,MAAQX,CACbz4D,MAAKq5D,QAAUh3C,CACfriB,MAAKu+B,WAAa/iB,CAClBxb,MAAKs5D,cAAgB,CAErBt5D,MAAK4P,cAEL5P,MAAKgT,aAAehT,KAAKq5D,QAAQrmD,aAGlCrS,OAAAC,eAAW23D,EAAAh4D,UAAA,UnFmxdJM,ImFnxdP,WAEC,MAAOb,MAAKq5D,SnFoxdNt4D,WAAY,KACZC,aAAc,MmFlxddu3D,GAAAh4D,UAAAg5D,iBAAP,WAEC,GAAIv5D,KAAKw5D,SACRx5D,KAAKw5D,SAASC,YAAYz5D,KAE3BA,MAAKw5D,SAAW,KAOVjB,GAAAh4D,UAAA24D,gBAAP,WAEC,MAAOl5D,MAAKqiB,OAAOlU,aASboqD,GAAAh4D,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKjzB,KAAKq5D,QAAQnmD,cACjB,MAAO,MAER,OAAO,MAODqlD,GAAAh4D,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAIA,EAAUs6B,UAAUh5D,MAAO,CAC9B0+B,EAAUg7B,YAAsB15D,KAAKq5D,QAErC,IAAIr5D,KAAK25D,wBAA0Bj7B,EAAUk7B,kBAC5Cl7B,EAAUg7B,YAAY15D,KAAK65D,gBAOvBtB,GAAAh4D,UAAAu5D,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAKh6D,KAAKq5D,QAAQnmD,cACjB,MAAO,MAER,IAAI3J,GAAwCvJ,KAAKq5D,QAAQY,oBACzD1wD,GAAmB2wD,iBAAmBl6D,KAAKq5D,QAAQ/jD,sBAAsB5C,gBAAgBqnD,EACzFxwD,GAAmB4wD,kBAAoBn6D,KAAKq5D,QAAQ/jD,sBAAsBmzB,qBAAqBuxB,EAE/F,KAAKzwD,EAAmB86C,YACvB96C,EAAmB86C,YAAc,GAAIt5C,EAEtC,IAAIi5B,GAA0BhkC,KAAK+U,QAAQ2e,gBAAgBnqB,EAAmB2wD,iBAAkB3wD,EAAmB4wD,kBAAmB5wD,EAAmB86C,YAEzJ,IAAIrgB,EAAmB,EACtB,MAAO,MAERz6B,GAAmBy6B,iBAAmBA,CACtCz6B,GAAmBwwD,YAAcA,CACjCxwD,GAAmBywD,aAAeA,CAClCzwD,GAAmB6wD,wBAA0Bp2B,GAAoB,CAEjE,OAAO,MAODu0B,GAAAh4D,UAAA85D,oBAAP,WAEC,MAAOr6D,MAAK+U,QAAQulD,gBAGd/B,GAAAh4D,UAAA8a,oBAAP,WAECrb,KAAK+U,QAAQiQ,YAEbhlB,MAAKu+B,WAAWg8B,eAAev6D,MAGzBu4D,GAAAh4D,UAAAqP,aAAP,WAEC,GAAI5P,KAAKq5D,QAAQ9iB,YAActrC,EAAW+D,iBACzChP,KAAK+U,QAAU,GAAIwd,GAAuBvyB,KAAKq5D,aAC3C,IAAIr5D,KAAKq5D,QAAQ9iB,YAActrC,EAAW4rB,OAC9C72B,KAAK+U,QAAU,GAAIohB,GAAen2B,KAAKq5D,aACnC,IAAIr5D,KAAKq5D,QAAQ9iB,YAActrC,EAAW6rB,KAC9C92B,KAAK+U,QAAU,GAAIiiB,EAEpBh3B,MAAKw6D,oBA7HQjC,GAAAnwD,GAAY,YA+H3B,OAAAmwD,IAjIyBt6B,EAmILx+B,GAAAJ,QAAXk5D,InF6vdN15C,gCAAgCzd,UAAU+wB,mDAAmD,mDAAmD8D,2CAA2C,2CAA2CjX,uCAAuC,uCAAuC+X,uCAAuC,uCAAuC8H,wCAAwC,0CAA0C47B,+CAA+C,SAASl8D,EAAQkB,EAAOJ,GAC9hB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoFz5dtB,IAAOk4D,GAAUh6D,EAAe,0CpF+5dhC,IoFt5dMm8D,GAAc,SAAAh6D,GAASX,EAAvB26D,EAAch6D,EAUnB,SAVKg6D,GAUOjC,EAAqBkC,EAAuBn/C,GAEvD9a,EAAApB,KAAAU,KAAMy4D,EAAMkC,EAAYn/C,EAExBxb,MAAK46D,YAAcD,EAMbD,EAAAn6D,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAIA,EAAUs6B,UAAUh5D,MACvB0+B,EAAUm8B,gBAAgB76D,KAAK46D,aAO1BF,GAAAn6D,UAAA24D,gBAAP,WAEC,MAAO,OA9BMwB,GAAAtyD,GAAY,gBAgC3B,OAAAsyD,IAlC6BnC,EAoC7B94D,GAAwBJ,QAAfq7D,IpF+4dN/B,0CAA0C,4CAA4C95B,yCAAyC,SAAStgC,EAAQkB,EAAOJ,GqF17d1J,GAAO2L,GAAmBzM,EAAa,6CrF+7dvC,IqFv7dM0/B,GAAQ,WAqEb,QArEKA,KAOEj+B,KAAA86D,gBAAyB,CAIzB96D,MAAAs5D,cAAuB,CA4D7Bt5D,MAAK+6D,aAAe,GAAIv1D,OAtDzB7E,OAAAC,eAAWq9B,EAAA19B,UAAA,gBrFm7dJM,IqFn7dP,WAEC,MAAOb,MAAKg7D,uBrFo7dNr4D,IqFj7dP,SAAwBC,GAEvB,GAAI5C,KAAKg7D,uBAAyBp4D,EACjC,MAED5C,MAAKg7D,sBAAwBp4D,CAE7B5C,MAAKi7D,6BAA6Bj7D,KAAKw5D,SAAUx5D,KAAKw5D,SAAS0B,qBAAuB,QrFg7dhFn6D,WAAY,KACZC,aAAc,MqF76drBL,QAAAC,eAAWq9B,EAAA19B,UAAA,wBrFg7dJM,IqFh7dP,WAEC,MAAOb,MAAKm7D,uBrFi7dNx4D,IqF96dP,SAAgCC,GAE/B,GAAI5C,KAAKm7D,uBAAyBv4D,EACjC,MAED5C,MAAKm7D,sBAAwBv4D,CAE7B,KAAK,GAAI5D,GAAW,EAAGA,EAAIgB,KAAK86D,kBAAmB97D,EAClDgB,KAAK+6D,aAAa/7D,GAAGi8D,6BAA6Bj7D,KAAKm7D,wBrF66dlDp6D,WAAY,KACZC,aAAc,MqFx6drBL,QAAAC,eAAWq9B,EAAA19B,UAAA,UrF86dJM,IqF96dP,WAEC,MAAOb,MAAKw5D,UrF+6dNz4D,WAAY,KACZC,aAAc,MqFz6drBL,QAAAC,eAAWq9B,EAAA19B,UAAA,iBrFg7dJM,IqFh7dP,WAEC,MAAOb,MAAKs5D,erFi7dNv4D,WAAY,KACZC,aAAc,MqFh6ddi9B,GAAA19B,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASDgL,GAAA19B,UAAAu5D,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAOD/7B,GAAA19B,UAAA24D,gBAAP,WAEC,MAAO,MAQDj7B,GAAA19B,UAAA66D,uBAAP,SAA8B/4C,GAE7B,MAAOriB,MAODi+B,GAAA19B,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAI1+B,KAAKq7D,eAAiB,IAAMr7D,KAAK25D,uBACpC,MAED,IAAIj7B,EAAUs6B,UAAUh5D,MAAO,CAC9B,GAAIhB,GAAW,CAEf,OAAOA,EAAIgB,KAAK86D,gBACf96D,KAAK+6D,aAAa/7D,KAAK05D,gBAAgBh6B,EAExC,IAAI1+B,KAAK25D,wBAA0Bj7B,EAAUk7B,kBAC5Cl7B,EAAUg7B,YAAY15D,KAAK65D,gBAQvB57B,GAAA19B,UAAA+6D,iBAAP,SAAwB58B,GAEvB,GAAI1+B,KAAK65D,eAAiB,KACzB75D,KAAK65D,cAAgB75D,KAAKq6D,qBAE3B37B,GAAUg7B,YAAY15D,KAAK65D,eAQrB57B,GAAA19B,UAAAg7D,SAAP,SAAgBC,GAEfA,EAAKhC,SAAWx5D,IAChBA,MAAKs5D,eAAiBkC,EAAKH,aAC3Br7D,MAAK+6D,aAAc/6D,KAAK86D,mBAAsBU,CAE9CA,GAAKP,6BAA6Bj7D,KAAKk7D,qBAEvC,IAAIO,GAAqBD,EAAKH,aAC9BG,GAAOx7D,IAEP,GAAG,CACFw7D,EAAKlC,eAAiBmC,SACbD,EAAOA,EAAKhC,WAAa,MAQ7Bv7B,GAAA19B,UAAAk5D,YAAP,SAAmB+B,GAElB,GAAIr1D,GAAenG,KAAK+6D,aAAah+C,QAAQy+C,EAC7Cx7D,MAAK+6D,aAAa50D,GAASnG,KAAK+6D,eAAe/6D,KAAK86D,gBACpD96D,MAAK+6D,aAAaW,KAElBF,GAAKP,6BAA6B,MAElC,IAAIQ,GAAqBD,EAAKH,aAC9BG,GAAOx7D,IAEP,GAAG,CACFw7D,EAAKH,eAAiBI,SACbD,EAAOA,EAAKhC,WAAa,MAG5Bv7B,GAAA19B,UAAA06D,6BAAR,SAAqCr4D,GAEpC,GAAI5C,KAAK25D,wBAA0B35D,KAAKg7D,uBAAyBp4D,EAChE,MAED5C,MAAK25D,uBAAyB35D,KAAKg7D,uBAAyBp4D,CAE5D,KAAK,GAAI5D,GAAW,EAAGA,EAAIgB,KAAK86D,kBAAmB97D,EAClDgB,KAAK+6D,aAAa/7D,GAAGi8D,6BAA6Bj7D,KAAKm7D,sBAExD,IAAIn7D,KAAK25D,uBAAwB,CAChC35D,KAAK65D,cAAgB75D,KAAKq6D,0BACpB,CAENr6D,KAAK65D,cAAgB,MAKhB57B,GAAA19B,UAAAi6D,kBAAP,WAEC,GAAIx6D,KAAK25D,uBAAwB,CAEhC35D,KAAK65D,cAAgB75D,KAAKq6D,uBAIrBp8B,GAAA19B,UAAA85D,oBAAP,WAEC,KAAM,IAAIrvD,GAEZ,OAAAizB,KAEAx+B,GAAkBJ,QAAT4+B,IrFy4dN5f,6CAA6Cjd,YAAYu6D,yCAAyC,SAASp9D,EAAQkB,EAAOJ,GAI7H,GsFnneMu8D,GAAQ,WAEb,QAFKA,MAKN,MAAAA,KAEAn8D,GAAkBJ,QAATu8D,OtFmneH98B,0CAA0C,SAASvgC,EAAQkB,EAAOJ,GuFvnexE,GAAOm5D,GAAUj6D,EAAe,0CAChC,IAAOs6D,GAAoBt6D,EAAa,oDACxC,IAAOg6D,GAAUh6D,EAAe,0CAChC,IAAOm8D,GAAcn8D,EAAc,8CACnC,IAAOs9D,GAAct9D,EAAc,8CACnC,IAAOu9D,GAAUv9D,EAAe,0CAEhC,IAAOq9D,GAAQr9D,EAAgB,wCAC/B,IAAOw9D,GAAcx9D,EAAc,yCvF2nenC,IuFrneM2/B,GAAS,WAad,QAbKA,GAaO89B,GAHJh8D,KAAAi8D,aAAuB,KAK9Bj8D,MAAKk8D,UAAYF,GAAuB,GAAIJ,EAE5C57D,MAAKm8D,gBAAkB,GAAIJ,GAAevD,EAAYx4D,KACtDA,MAAKo8D,0BAA4B,GAAIL,GAAelD,EAAsB74D,KAC1EA,MAAKq8D,gBAAkB,GAAIN,GAAexD,EAAYv4D,KACtDA,MAAKs8D,oBAAsB,GAAIP,GAAerB,EAAgB16D,KAC9DA,MAAKu8D,oBAAsB,GAAIR,GAAeF,EAAgB77D,KAC9DA,MAAKw8D,gBAAkB,GAAIT,GAAeD,EAAY97D,MAGvDW,OAAAC,eAAWs9B,EAAA39B,UAAA,YvFwmeJM,IuFxmeP,WAEC,MAAOb,MAAKk8D,WvFymeNn7D,WAAY,KACZC,aAAc,MuFvmedk9B,GAAA39B,UAAAo+B,SAAP,SAAgBD,GAEf,GAAI1+B,KAAKi8D,aAAc,CACtB,GAAIx9D,GAAeuB,KAAKy8D,YACxB,OAAOh+D,EAAG,CAETA,EAAE4jB,OAAOnF,kBACTze,GAAIA,EAAEi+D,kBAEP18D,KAAK28D,iBAIN38D,KAAKk8D,UAAUxD,gBAAgBh6B,GAGzBR,GAAA39B,UAAAg6D,eAAP,SAAsBiB,GAErB,GAAI/8D,GAAeuB,KAAKy8D,YAExB,OAAOh+D,EAAG,CACT,GAAI+8D,GAAQ/8D,EACX,MAEDA,GAAIA,EAAEi+D,kBAGPlB,EAAKkB,kBAAoB18D,KAAKy8D,YAE9Bz8D,MAAKy8D,aAAejB,CACpBx7D,MAAKi8D,aAAe,KAGd/9B,GAAA39B,UAAAq8D,cAAP,SAAqBpB,GAEpB,GAAI/8D,EAEJ+8D,GAAKjC,kBAEL,IAAIiC,GAAQx7D,KAAKy8D,aAAc,CAC9Bz8D,KAAKy8D,aAAejB,EAAKkB,sBACnB,CACNj+D,EAAIuB,KAAKy8D,YACT,OAAOh+D,GAAKA,EAAEi+D,mBAAqBlB,EAClC/8D,EAAIA,EAAEi+D,iBAEP,IAAIj+D,EACHA,EAAEi+D,kBAAoBlB,EAAKkB,kBAG7BlB,EAAKkB,kBAAoB,IAEzB,KAAK18D,KAAKy8D,aACTz8D,KAAKi8D,aAAe,MAGd/9B,GAAA39B,UAAAo8D,eAAR,WAEC,GAAInB,GAAkBx7D,KAAKy8D,YAC3B,IAAII,EACJ,IAAIp+D,EACJuB,MAAKy8D,aAAe,IACpBz8D,MAAKi8D,aAAe,KAEpB,GAAG,CACFY,EAAa78D,KAAKk8D,UAAUd,uBAAuBI,EAAKn5C,OAExD,IAAIm5C,EAAK9mD,QAAUmoD,EAAY,CAC9BrB,EAAKjC,kBACLsD,GAAWtB,SAASC,GAGrB/8D,EAAI+8D,EAAKkB,iBACTlB,GAAKkB,kBAAoB,YAEhBlB,EAAO/8D,IAAM,MAOjBy/B,GAAA39B,UAAAygC,iBAAP,SAAwBtnB,GAEvB1Z,KAAKu6D,eAAev6D,KAAKm8D,gBAAgBW,QAAQpjD,IAM3CwkB,GAAA39B,UAAAmzC,2BAAP,SAAkColB,GAEjC94D,KAAKu6D,eAAev6D,KAAKo8D,0BAA0BU,QAAQhE,IAMrD56B,GAAA39B,UAAAqvC,iBAAP,SAAwBvtB,GAEvBriB,KAAKu6D,eAAev6D,KAAKq8D,gBAAgBS,QAAQz6C,IAM3C6b,GAAA39B,UAAA6zC,qBAAP,SAA4BumB,GAE3B36D,KAAKu6D,eAAev6D,KAAKs8D,oBAAoBQ,QAAQnC,IAM/Cz8B,GAAA39B,UAAAo7C,qBAAP,SAA4BohB,GAE3B/8D,KAAKu6D,eAAev6D,KAAKu8D,oBAAoBO,QAAQC,IAM/C7+B,GAAA39B,UAAA68C,iBAAP,SAAwB4f,GAEvBh9D,KAAKu6D,eAAev6D,KAAKw8D,gBAAgBM,QAAQE,IAM3C9+B,GAAA39B,UAAA0xC,mBAAP,SAA0Bv4B,GAEzB1Z,KAAK48D,cAAc58D,KAAKm8D,gBAAgBc,YAAYvjD,IAM9CwkB,GAAA39B,UAAAozC,6BAAP,SAAoCmlB,GAEnC94D,KAAK48D,cAAc58D,KAAKo8D,0BAA0Ba,YAAYnE,IAMxD56B,GAAA39B,UAAAsvC,mBAAP,SAA0BxtB,GAEzBriB,KAAK48D,cAAc58D,KAAKq8D,gBAAgBY,YAAY56C,IAM9C6b,GAAA39B,UAAA8zC,uBAAP,SAA8BsmB,GAE7B36D,KAAK48D,cAAc58D,KAAKs8D,oBAAoBW,YAAYtC,IAMlDz8B,GAAA39B,UAAAq7C,uBAAP,SAA8BmhB,GAE7B/8D,KAAK48D,cAAc58D,KAAKu8D,oBAAoBU,YAAYF,IAMlD7+B,GAAA39B,UAAA88C,mBAAP,SAA0B2f,GAEzBh9D,KAAK48D,cAAc58D,KAAKw8D,gBAAgBS,YAAYD,IAEtD,OAAA9+B,KAEAz+B,GAAmBJ,QAAV6+B,IvF6jeNo6B,0CAA0C,0CAA0CM,oDAAoD,oDAAoDD,0CAA0C,0CAA0C8B,8CAA8C,8CAA8CkB,wCAAwC,wCAAwCuB,8CAA8C,8CAA8CC,0CAA0C,0CAA0CC,yCAAyC,2CAA2CF,+CAA+C,SAAS3+D,EAAQkB,EAAOJ,GAC1wB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwFnyetB,IAAOk4D,GAAUh6D,EAAe,0CxFyyehC,IwFhyeMs9D,GAAc,SAAAn7D,GAASX,EAAvB87D,EAAcn7D,EAUnB,SAVKm7D,GAUOpD,EAAqBsE,EAAuBvhD,GAEvD9a,EAAApB,KAAAU,KAAMy4D,EAAMsE,EAAYvhD,EAExBxb,MAAKq9D,YAAcN,EAMblB,EAAAt7D,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAIA,EAAUs6B,UAAUh5D,MACvB0+B,EAAU4+B,gBAAgBt9D,KAAKq9D,aAO1BxB,GAAAt7D,UAAA24D,gBAAP,WAEC,MAAO,OA9BM2C,GAAAzzD,GAAY,gBAgC3B,OAAAyzD,IAlC6BtD,EAoC7B94D,GAAwBJ,QAAfw8D,IxFyxeNlD,0CAA0C,4CAA4C4E,+CAA+C,SAASh/D,EAAQkB,EAAOJ,GAChK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyFv0etB,IAAO49B,GAAQ1/B,EAAW,wCzF60e1B,IyFr0eMi/D,GAAc,SAAA98D,GAASX,EAAvBy9D,EAAc98D,EAMhB,SANE88D,GAMU/E,EAAyBgF,EAAkCjiD,GAEnE9a,EAAApB,KAAAU,KACAA,MAAKo5D,MAAQX,CACbz4D,MAAK09D,WAAaD,CAClBz9D,MAAKu+B,WAAa/iB,EAoC1B,MAAAgiD,IA/C6Bv/B,EAgD7Bx+B,GAAwBJ,QAAfm+D,IzFiyeN3+B,wCAAwC,0CAA0Cs+B,2CAA2C,SAAS5+D,EAAQkB,EAAOJ,GACxJ,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Fh2etB,IAAOk4D,GAAUh6D,EAAe,0C1Fw2ehC,I0F71eMu9D,GAAU,SAAAp7D,GAASX,EAAnB+7D,EAAUp7D,EAUf,SAVKo7D,GAUOrD,EAAqBkF,EAAeniD,GAE/C9a,EAAApB,KAAAU,KAAMy4D,EAAMkF,EAAQniD,EAEpBxb,MAAK49D,QAAUD,EAMT7B,EAAAv7D,UAAAm4D,gBAAP,SAAuBh6B,GAEtB,GAAIA,EAAUs6B,UAAqBh5D,MAClC0+B,EAAUm/B,YAAY79D,KAAK49D,SAStB9B,GAAAv7D,UAAAwyB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKjzB,KAAK49D,QAAQ1qD,YACjB,MAAO,MAGR,OAAO,MApCM4oD,GAAA1zD,GAAY,YAsC3B,OAAA0zD,IAxCyBvD,EA0CL94D,GAAAJ,QAAXy8D,I1Fq1eNnD,0CAA0C,4CAA4CmF,mCAAmC,SAASv/D,EAAQkB,EAAOJ,SAE9I0+D,4CAA4C,SAASx/D,EAAQkB,EAAOJ,SAEpE2+D,6CAA6C,SAASz/D,EAAQkB,EAAOJ,G2Fj5e3E,GAAO0L,GAAQxM,EAAiB,gCAChC,IAAOuM,GAAKvM,EAAiB,6B3F25e7B,I2Fv4eM0/D,GAAiB,WAStB,QATKA,GASOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEXl+D,KAAKm+D,sBAAwBD,EAYvBD,EAAA19D,UAAAmvC,uBAAP,SAA8B0uB,EAAqB90D,EAAuBC,EAAuCC,GAEhHD,EAAmBiuC,gBAAkB,IAUrC,OAAO,OAYDymB,GAAA19D,UAAAyxB,sBAAP,SAA6BqsC,EAAyC/0D,EAAuBC,EAAuCC,GAEnI,GAAIuwD,GAAuBxwD,EAAmB2wD,gBAC9C,IAAIF,GAAwBzwD,EAAmB4wD,iBAC/C,IAAI17D,EACJ,IAAI6/D,GAAWC,EAAWC,CAC1B,IAAI/nC,GAAWC,EAAWC,CAC1B,IAAI9vB,GAAWC,EAAW23D,CAC1B,IAAIp5D,GAAWC,EAAWmvB,CAC1B,IAAIiqC,GAAc5/D,EAAU0I,EAAUC,CACtC,IAAIuP,GAAYC,EAAY0nD,CAC5B,IAAIznD,GAAYC,EAAYynD,CAC5B,IAAIxnD,GAAYC,EAAYwnD,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAIl3D,GAAsB21D,EAAoB31D,QAAQ7H,IAAIw9D,EAAoBwB,YAC9E,IAAIC,IAAiC,CACrC,IAAIC,GAAoBz2D,EAASy2D,SAEjC,IAAIn8D,GAAyBy6D,EAAoBz6D,UAAU/C,IAAIw9D,EAAoB55D,YACnF,IAAIZ,GAAgBw6D,EAAoBz6D,UAAUE,UAClD,IAAI8E,GAAmBy1D,EAAoBz1D,IAAI/H,IAAIw9D,EAAoB55D,YACvE,IAAIu7D,IAAe3B,EAAoBz1D,IAAI9E,UAC3C,IAAIm8D,IAAoBv3D,EAAQnJ,MAChC,KAAK,GAAI4G,IAAe,EAAGA,GAAQ85D,GAAY95D,IAAS,EAAG,CAE1Dm4D,EAAK51D,EAAQvC,IAAOtC,CACpB06D,GAAK71D,EAAQvC,GAAQ,GAAGtC,CACxB26D,GAAK91D,EAAQvC,GAAQ,GAAGtC,CAGxBmT,GAAMpT,EAAU06D,EAChBrnD,GAAMrT,EAAU06D,EAAK,EACrBK,GAAM/6D,EAAU06D,EAAK,EACrBpnD,GAAMtT,EAAU26D,EAChBpnD,GAAMvT,EAAU26D,EAAK,EACrBK,GAAMh7D,EAAU26D,EAAK,EACrBnnD,GAAMxT,EAAU46D,EAChBnnD,GAAMzT,EAAU46D,EAAK,EACrBK,GAAMj7D,EAAU46D,EAAK,EAGrBM,GAAM5nD,EAAMF,CACZ+nD,GAAM5nD,EAAMF,CACZ+nD,GAAMJ,EAAMD,CACZM,GAAM7nD,EAAMJ,CACZkoD,GAAM7nD,EAAMJ,CACZkoD,GAAMN,EAAMF,CACZ93D,GAAKk4D,EAAII,EAAMH,EAAIE,CACnBp4D,GAAKk4D,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAEh8D,KAAKoB,KAAKqC,EAAGA,EAAKC,EAAGA,EAAK23D,EAAGA,EACpC53D,IAAMu4D,CACNt4D,IAAMs4D,CACNX,IAAMW,CAGNC,GAAQx4D,EAAGmzD,EAAa/2D,EAAI6D,GAAKkzD,EAAa92D,EAAIu7D,EAAGzE,EAAazzD,CAClE,KAAOw5D,GAAaV,EAAQ,GAAWU,GAAaV,GAAS,EAAO,CAEnEC,IAAOz4D,EAAGmQ,EAAMlQ,EAAGmQ,EAAMwnD,EAAGE,EAC5BY,KAAgB14D,EAAGkzD,EAAY92D,EAAI6D,EAAGizD,EAAY72D,EAAIu7D,EAAG1E,EAAYxzD,EAAI+4D,EACzE7gE,GAAI8gE,EAAWF,CAEfh6D,GAAK00D,EAAY92D,EAAIxE,EAAEu7D,EAAa/2D,CACpCqC,GAAKy0D,EAAY72D,EAAIzE,EAAEu7D,EAAa92D,CACpCuxB,GAAKslC,EAAYxzD,EAAI9H,EAAEu7D,EAAazzD,CAEpCi5D,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/B1oC,GAAKpxB,EAAK2R,CACV0f,GAAKpxB,EAAK2R,CACV0f,GAAKlC,EAAKkqC,CACVgB,GAAMlpC,EAAGqoC,EAAMpoC,EAAGqoC,EAAMpoC,EAAGqoC,CAC3BY,GAAMnpC,EAAGwoC,EAAMvoC,EAAGwoC,EAAMvoC,EAAGwoC,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5Bh4D,GAAIk3D,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3Bn4D,GAAIi3D,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAIp4D,EAAI,EACP,QACD,IAAIC,EAAI,EACP,QACD3I,GAAI,EAAI0I,EAAIC,CACZ,MAAO3I,EAAI,IAAOL,EAAI,GAAKA,EAAI+K,EAA2B,CACzDA,EAA4B/K,CAC5BqhE,GAAyB35D,GAAM,CAC/BoD,GAAmBy6B,iBAAmBvlC,CACtC8K,GAAmB66C,cAAgB,GAAIr5C,GAAS1F,EAAIC,EAAImvB,EACxDlrB,GAAmB86C,YAAc,GAAIt5C,GAASlE,EAAIC,EAAI23D,EACtDl1D,GAAmB46C,GAAKnkD,KAAKkgE,gBAAgBx3D,EAASE,EAAKzC,GAAOqB,EAAGC,EAAG3I,EAAGkhE,GAC3Ez2D,GAAmBpD,MAAQA,EAI3B,KAAKnG,KAAKm+D,sBACT,MAAO,QAMX,GAAI2B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAYD7B,GAAA19D,UAAAkJ,mBAAP,SAA0B02D,EAAmC72D,EAAuBC,EAAuCC,GAE1H,GAAIuwD,GAAuBxwD,EAAmB2wD,gBAC9C,IAAIF,GAAwBzwD,EAAmB4wD,iB3Fs3ezC,I2Fl3eF/mC,GAAiB,GAAIroB,GAAS,EAAE,GAAG,EAAE,EAEzC,IAAIg5C,GAAkB,GAAIh5C,EAC1B,IAAIwP,GAAkB6Y,EAAMnwB,EAAI82D,EAAY92D,EAAImwB,EAAMlwB,EAAI62D,EAAY72D,EAAIkwB,EAAM7sB,EAAIwzD,EAAYxzD,EAAI6sB,EAAM3rB,CAC1Gs8C,GAAO9gD,EAAI82D,EAAY92D,EAAMmwB,EAAMnwB,EAAEsX,CACrCwpC,GAAO7gD,EAAI62D,EAAY72D,EAAMkwB,EAAMlwB,EAAEqX,CACrCwpC,GAAOx9C,EAAIwzD,EAAYxzD,EAAM6sB,EAAM7sB,EAAEgU,CACrC,IAAI6lD,GAAkB,GAAIr1D,GAASqoB,EAAMnwB,EAAEmwB,EAAMlwB,EAAEkwB,EAAM7sB,EACzD,IAAI9H,IAAas7D,EAAYsG,WAAWD,GAAUpG,EAAaqG,WAAWD,EAC1EpG,GAAarxB,QAAQlqC,EACrB,IAAI0B,GAAa45D,EAAYrxB,IAAIsxB,EAEjC,IAAItxD,GAAsBy3D,EAAiBz3D,QAAQ7H,IAAIs/D,EAAiBN,YACxE,IAAIS,IAA8B,CAClC,IAAIP,GAAoBz2D,EAASy2D,SAGjC,IAAIn8D,GAAyBu8D,EAAiBv8D,UAAU/C,IAAIs/D,EAAiB17D,YAC7E,IAAIZ,GAAgBs8D,EAAiBv8D,UAAUE,UAC/C,IAAI2C,GAAsB05D,EAAiB15D,OAAO5F,IAAIs/D,EAAiB17D,YACvE,IAAI+B,GAAkB25D,EAAiB15D,OAAO3C,UAC9C,IAAI8E,GAAmBu3D,EAAiBv3D,IAAI/H,IAAIs/D,EAAiB17D,YACjE,IAAIu7D,GAAeG,EAAiBv3D,IAAI9E,UACxC,IAAIm8D,GAAoBv3D,EAAQnJ,MAGhC,KAAI,GAAI4G,GAAe,EAAGA,EAAQ85D,EAAY95D,GAAO,EACrD,CACC,GAAIrB,GAAa4D,EAAQvC,EACzB,IAAIpB,GAAa2D,EAAQvC,EAAQ,GAAKtC,CACtC,IAAImB,GAAa0D,EAAQvC,EAAQ,GAAKtC,CAEtC,IAAIoB,GAAYrB,EAAUkB,EAAMjB,EAChC,IAAIqB,GAAYtB,EAAUkB,EAAMjB,EAAS,EACzC,IAAIsB,GAAYvB,EAAUmB,EAC1B,IAAIK,GAAYxB,EAAUmB,EAAM,EAChC,IAAIM,GAAYzB,EAAUoB,EAC1B,IAAIM,GAAY1B,EAAUoB,EAAM,EAEhC,IAAIgC,GAAgBP,EAAO3B,EAAM0B,EACjC,IAAIoB,GAAYhE,EAAUkB,EAAMjB,EAAS,E3F42ehC,I2Fv2eL8C,GAAY1B,EAAK9E,EAAE8C,CACvB,IAAI2D,GAAY1B,EAAK/E,EAAE+C,C3Fy2ed,I2Ft2eL2D,GAAYzB,EAAKF,CACrB,IAAI4B,KAAc3B,EAAKF,E3Fw2ed,I2Fp2eL8B,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EACT,QAEDJ,GAAKxB,EAAKhF,EAAE8C,CACZ2D,GAAKxB,EAAKjF,EAAE+C,CACZ2D,GAAKvB,EAAKF,CACV0B,KAAOzB,EAAKF,EAEZ4B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAEDJ,GAAKtB,EAAKlF,EAAE8C,CACZ2D,GAAKtB,EAAKnF,EAAE+C,CACZ2D,GAAK3B,EAAKI,CACVwB,KAAO7B,EAAKI,EAEZ0B,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAGD,IAAIC,GAAU,EAAG,CAEhB,GAAIC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKF,CACtB,IAAIiC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAa9B,EAAKJ,CACtB,IAAImC,GAAalH,EAAE8C,EAAIgC,CACvB,IAAIqC,GAAanH,EAAE+C,EAAIgC,CAEvB,IAAIqC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAIzI,GAAW,EAAI0I,EAAIC,CAEvB,IAAIC,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIxH,GAAWyH,EAAKA,EAAKC,CAEzB,IAAK1H,EAAI,GAAK2H,IAAO,GAAO3H,EAAI,GAAK2H,GAAM,EAC1C,SAIF,GAAI2S,EAAW/Q,EAA2B,CACzCA,EAA4B+Q,CAC5B+lD,GAAsBn6D,EAAM,CAC5BoD,GAAmBy6B,iBAAmBzpB,CACtChR,GAAmB66C,cAAgBjkD,CACnCoJ,GAAmB86C,YAAc,GAAIt5C,GAAS,EAAG,EAAG,EACpDxB,GAAmB46C,GAAKnkD,KAAKkgE,gBAAgBx3D,EAASE,EAAKzC,EAAOqB,EAAGC,EAAG3I,EAAGkhE,EAC3Ez2D,GAAmBpD,MAAQA,CAI3B,KAAKnG,KAAKm+D,sBACT,MAAO,OAIV,GAAImC,GAAuB,EAC1B,MAAO,KAER,OAAO,OAYDrC,GAAA19D,UAAAgjB,kBAAP,SAAyBg9C,EAAiCj3D,EAAuBC,EAAuCC,GAEvH,MAAO,OAIAy0D,GAAA19D,UAAA2/D,gBAAR,SAAwBx3D,EAAqB83D,EAAqBC,EAAsBj5D,EAAUC,EAAU3I,EAAUkhE,GAErH,GAAI7b,GAAW,GAAIr5C,EACnB,IAAI41D,GAAgBh4D,EAAQ+3D,GAAeT,CAC3C,IAAIW,GAAe,GAAI51D,GAASy1D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAASh4D,EAAQ+3D,EAAgB,GAAGT,CACpC,IAAIY,GAAe,GAAI71D,GAASy1D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAASh4D,EAAQ+3D,EAAgB,GAAGT,CACpC,IAAIa,GAAe,GAAI91D,GAASy1D,EAAOE,GAASF,EAAOE,EAAS,GAChEvc,GAAGlhD,EAAInE,EAAE6hE,EAAI19D,EAAIuE,EAAEo5D,EAAI39D,EAAIwE,EAAEo5D,EAAI59D,CACjCkhD,GAAGjhD,EAAIpE,EAAE6hE,EAAIz9D,EAAIsE,EAAEo5D,EAAI19D,EAAIuE,EAAEo5D,EAAI39D,CACjC,OAAOihD,GAET,OAAA8Z,KAEAx+D,GAA2BJ,QAAlB4+D,I3Fo1eNt/C,6BAA6Bvd,UAAUyd,gCAAgCzd,YAAY+d,8CAA8C,SAAS5gB,EAAQkB,EAAOJ,GAS5J,G4F7qfM+L,GAAkB,WA0EvB,QA1EKA,GA0EOmjB,GAEXvuB,KAAKuuB,cAAgBA,EAGvB,MAAAnjB,KAEA3L,GAA4BJ,QAAnB+L,O5FymfHk5B,yCAAyC,SAAS/lC,EAAQkB,EAAOJ,G6FxsfvE,GAAO0L,GAAQxM,EAAgB,gCAQ/B,IAAOuiE,GAAgBviE,EAAc,+C7F0sfrC,I6FhsfM0gC,GAAa,WA8BlB,QA9BKA,GA8BOi/B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJl+D,KAAA+gE,mBACA/gE,MAAAghE,kBAA4B,IAG5BhhE,MAAAihE,aAAsB,CAwB7BjhE,MAAKkhE,kBAAoB,GAAIJ,EAE7B9gE,MAAKm+D,sBAAwBD,CAC7Bl+D,MAAKmhE,UAAY,GAAI37D,OArBtB7E,OAAAC,eAAWq+B,EAAA1+B,UAAA,oB7FssfJM,I6FtsfP,WAEC,MAAOb,MAAKghE,mB7FusfNr+D,I6FpsfP,SAA4BC,GAE3B5C,KAAKghE,kBAAoBp+D,G7FqsfnB7B,WAAY,KACZC,aAAc,M6Flrfdi+B,GAAA1+B,UAAA0iC,iBAAP,SAAwBhgC,EAAUC,EAAUghD,G7FyrfrC,G6FtrfF6V,GAAuB7V,EAAK9iB,UAAUn+B,EAAGC,EAAG,EAChD,IAAI82D,GAAwB9V,EAAK9iB,UAAUn+B,EAAGC,EAAG,GAAGqV,SAASwhD,EAE7D,OAAO/5D,MAAKohE,kBAAkBrH,EAAaC,EAAc9V,EAAKzoC,OAMxDwjB,GAAA1+B,UAAA6gE,kBAAP,SAAyBrH,EAAsBC,EAAuBv+C,GAGrEzb,KAAKkhE,kBAAkB1nD,OAGvBxZ,MAAKkhE,kBAAkBnH,YAAcA,CACrC/5D,MAAKkhE,kBAAkBlH,aAAeA,CAGtCv+C,GAAMgjB,mBAAmBz+B,KAAKkhE,kBAE9BlhE,MAAKihE,aAAe,CACpB,IAAIzF,GAAsBx7D,KAAKkhE,kBAAkBG,UACjD,IAAIh/C,EAEJ,OAAOm5C,EAAM,CACZ,IAAKx7D,KAAKshE,UAAUj/C,EAASm5C,EAAKn5C,QACjCriB,KAAKmhE,UAAUnhE,KAAKihE,gBAAkB5+C,CAEvCm5C,GAAOA,EAAK+F,KAIb,IAAKvhE,KAAKihE,aACT,MAAO,KAER,OAAOjhE,MAAKwhE,sBAAsBxhE,KAAKkhE,mBAoBjCjiC,GAAA1+B,UAAAkhE,cAAP,SAAqBC,GAEpB1hE,KAAK+gE,iBAAmBW,EAGjBziC,GAAA1+B,UAAA+gE,UAAR,SAAkBj/C,GAEjB,GAAIriB,KAAKghE,oBAAsB3+C,EAAOjF,mBACrC,MAAO,KAER,IAAIzN,GAAa3P,KAAK+gE,iBAAiBxhE,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/B,GAAIgB,KAAK+gE,iBAAiB/hE,IAAMqjB,EAC/B,MAAO,KAET,OAAO,OAGA4c,GAAA1+B,UAAAohE,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ3H,qBAAqBj2B,iBAAmB69B,EAAQ5H,qBAAqBj2B,iBAAkB,GAAK,EAGpG/E,GAAA1+B,UAAAihE,sBAAR,SAA8BM,GAG7B9hE,KAAKmhE,UAAU5hE,OAASS,KAAKihE,YAG7BjhE,MAAKmhE,UAAYnhE,KAAKmhE,UAAUY,KAAK/hE,KAAK2hE,Y7FqqfpC,I6F9pfFn4D,GAAmCzF,OAAOC,SAC9C,IAAIg+D,EACJ,IAAIz4D,EACJ;GAAI8Y,EACJ,IAAIrjB,EAEJ,KAAKA,EAAI,EAAGA,EAAIgB,KAAKihE,eAAgBjiE,EAAG,CACvCqjB,EAASriB,KAAKmhE,UAAUniE,EACxBuK,GAAqB8Y,EAAO43C,oBAC5B,IAAI53C,EAAOhZ,gBAAiB,CAE3B,IAAK24D,GAAmB,MAAQz4D,EAAmBy6B,iBAAmBg+B,EAAgBh+B,mBAAqB3hB,EAAOjZ,gBAAgBI,EAA2BxJ,KAAKm+D,uBAAwB,CACzL30D,EAA4BD,EAAmBy6B,gBAC/Cg+B,GAAkBz4D,CAClB,KAAKvJ,KAAKm+D,sBAAuB,CAChCn+D,KAAKiiE,oBAAoB14D,EACzB,OAAOA,SAGH,IAAIy4D,GAAmB,MAAQz4D,EAAmBy6B,iBAAmBg+B,EAAgBh+B,iBAAkB,CAK7G,IAAKz6B,EAAmB6wD,wBAAyB,CAChDp6D,KAAKiiE,oBAAoB14D,EACzB,OAAOA,KAKV,MAAOy4D,GAGA/iC,GAAA1+B,UAAA0hE,oBAAR,SAA4B14D,GAE3B,GAAI24D,GAA0B34D,EAAmB66C,eAAiB,KAAS76C,EAAmB66C,cAAgB,GAAIr5C,GAAcxB,EAAmB66C,aAEnJ,IAAI+d,GAAkB54D,EAAmB4wD,iBACzC,IAAIiI,GAAkB74D,EAAmB2wD,gBACzC,IAAIz7D,GAAW8K,EAAmBy6B,gBAClCk+B,GAAaj/D,EAAIm/D,EAAOn/D,EAAIxE,EAAE0jE,EAAOl/D,CACrCi/D,GAAah/D,EAAIk/D,EAAOl/D,EAAIzE,EAAE0jE,EAAOj/D,CACrCg/D,GAAa37D,EAAI67D,EAAO77D,EAAI9H,EAAE0jE,EAAO57D,EAG/B04B,GAAA1+B,UAAAU,QAAP,YAID,OAAAg+B,KAEuBx/B,GAAAJ,QAAd4/B,I7F0pfNpgB,gCAAgCzd,UAAUihE,+CAA+C,iDAAiDC,8CAA8C,SAAS/jE,EAAQkB,EAAOJ,G8Fx2fnN,GAAOkjE,GAAchkE,EAAc,yC9F62fnC,I8Fx2fMikE,GAAkB,WASvB,QATKA,KAGGxiE,KAAAyiE,OAAgB,CAChBziE,MAAA0iE,UAAmB,CAO1B1iE,MAAKo5D,MAAQ,GAAI5zD,OAMXg9D,EAAAjiE,UAAAu8D,QAAP,WAEC,GAAI6F,EACJ,IAAI3iE,KAAKyiE,QAAUziE,KAAK0iE,UAAW,CAClCC,EAAO,GAAIJ,EACXviE,MAAKo5D,MAAMp5D,KAAKyiE,UAAYE,IAC1B3iE,KAAK0iE,cACD,CACNC,EAAO3iE,KAAKo5D,MAAMp5D,KAAKyiE,UAExB,MAAOE,GAMDH,GAAAjiE,UAAAqiE,QAAP,WAEC5iE,KAAKyiE,OAAS,EAGRD,GAAAjiE,UAAAU,QAAP,WAECjB,KAAKo5D,MAAM75D,OAAS,EAEtB,OAAAijE,KAEA/iE,GAA4BJ,QAAnBmjE,I9Fi2fNK,yCAAyC,2CAA2CA,0CAA0C,SAAStkE,EAAQkB,EAAOJ,GAIzJ,G+Fj5fMkjE,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEA9iE,GAAwBJ,QAAfkjE,O/F24fHnF,0CAA0C,SAAS7+D,EAAQkB,EAAOJ,GAIxE,GgGz5fM08D,GAAc,WAWnB,QAXKA,GAWO+G,EAAkCtnD,GATtCxb,KAAAq8D,gBAAyB,GAAI17D,OAWpCX,MAAK+iE,iBAAmBD,CACxB9iE,MAAKu+B,WAAa/iB,EASZugD,EAAAx7D,UAAAu8D,QAAP,SAAez6C,GAEd,MAAQriB,MAAKq8D,gBAAgBh6C,EAAOja,MAAQpI,KAAKq8D,gBAAgBh6C,EAAOja,IAAMia,EAAOtE,gBAAgB,GAAI/d,MAAK+iE,iBAAiB/iE,KAAMqiB,EAAQriB,KAAKu+B,cAQ5Iw9B,GAAAx7D,UAAA08D,YAAP,SAAmB56C,GAElB,GAAIrE,GAAwBhe,KAAKq8D,gBAAgBh6C,EAAOja,GAExD,IAAI4V,EAAY,CACfqE,EAAOpE,mBAAmBD,EAE1Bhe,MAAKq8D,gBAAgBh6C,EAAOja,IAAM,KAGnC,MAAO4V,GAET,OAAA+9C,KAEwBt8D,GAAAJ,QAAf08D,OhG+4fHiH,4CAA4C,SAASzkE,EAAQkB,EAAOJ,SAEpE4jE,uCAAuC,SAAS1kE,EAAQkB,EAAOJ,SAE/D6jE,mCAAmC,SAAS3kE,EAAQkB,EAAOJ,SAE3D8jE,gDAAgD,SAAS5kE,EAAQkB,EAAOJ,SAExE+jE,sCAAsC,SAAS7kE,EAAQkB,EAAOJ,SAE9DgkE,8CAA8C,SAAS9kE,EAAQkB,EAAOJ,GAI5E,GiG38fMikE,GAAkB,WAWvB,QAXKA,GAWOC,EAA0C/nD,GAT9Cxb,KAAAwjE,oBAA6B,GAAI7iE,OAWxCX,MAAKyjE,qBAAuBF,CAC5BvjE,MAAKu+B,WAAa/iB,EASZ8nD,EAAA/iE,UAAAu8D,QAAP,SAAe4G,GAEd,MAAQ1jE,MAAKwjE,oBAAoBE,EAAuBt7D,MAAQpI,KAAKwjE,oBAAoBE,EAAuBt7D,IAAM,GAAIpI,MAAKyjE,qBAAqBzjE,KAAM0jE,EAAwB1jE,KAAKu+B,aAQjL+kC,GAAA/iE,UAAA08D,YAAP,SAAmByG,GAElB,GAAIC,GAAgC3jE,KAAKwjE,oBAAoBE,EAAuBt7D,GAEpF,IAAIu7D,EACH3jE,KAAKwjE,oBAAoBE,EAAuBt7D,IAAM,IAEvD,OAAOu7D,GAET,OAAAL,KAE4B7jE,GAAAJ,QAAnBikE,OjGk8fHxrB,uCAAuC,SAASv5C,EAAQkB,EAAOJ,GkGj/frE,GAAOukB,GAAWrlB,EAAe,sCACjC,IAAO2zB,GAAe3zB,EAAc,0CACpC,IAAOyL,GAAYzL,EAAe,uClGs/flC,IkGj/fM22C,GAAW,WAAjB,QAAMA,MAQSA,EAAA0uB,cAAd,SAA4BC,GAE3B3uB,EAAY4uB,UAAUD,EAAax5D,WAAWnJ,WAAa2iE,EAO9C3uB,GAAAqC,SAAd,SAAuBttC,GAEtB,MAAOirC,GAAY4uB,UAAU75D,EAAY/I,WAK3Bg0C,GAAA6uB,YAAf,WAEC7uB,EAAY0uB,cAAchgD,EAC1BsxB,GAAY0uB,cAAc1xC,EAC1BgjB,GAAY0uB,cAAc55D,GA1BZkrC,GAAA4uB,UAAmB,GAAInjE,OAoBvBu0C,GAAA8uB,KAAO9uB,EAAY6uB,aAQnC,OAAA7uB,KAEqBz1C,GAAAJ,QAAZ61C,IlG6+fNprC,uCAAuC,uCAAuC6Z,sCAAsC,sCAAsCsO,0CAA0C,4CAA4CgyC,yCAAyC,SAAS1lE,EAAQkB,EAAOJ,GACpT,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmG/hgBtB,IAAOG,GAASjC,EAAc,oCAC9B,IAAOyM,GAAmBzM,EAAY,6CnGqigBtC,ImG9hgBM2lE,GAAU,SAAAxjE,GAASX,EAAnBmkE,EAAUxjE,EASf,SATKwjE,KAWJxjE,EAAApB,KAAAU,KATMA,MAAAmkE,UAAiC,GAAI3+D,OAerC0+D,EAAA3jE,UAAAs1B,aAAP,WAEC,GAAI2tB,GAAuBxjD,KAAKokE,gBAEhCpkE,MAAKmkE,UAAU99D,KAAKm9C,EAEpB,OAAOA,GAYD0gB,GAAA3jE,UAAA6jE,eAAP,WAEC,KAAM,IAAIp5D,GAGJk5D,GAAA3jE,UAAA2U,WAAP,YAID,OAAAgvD,IA5CyB1jE,EA8CzBf,GAAoBJ,QAAX6kE,InGohgBN7lD,6CAA6Cjd,UAAUD,oCAAoCC,YAAYijE,qDAAqD,SAAS9lE,EAAQkB,EAAOJ,GACvL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoG1kgBtB,IAAOikE,GAAmB/lE,EAAY,iDpGglgBtC,IoG3kgBMgmE,GAAsB,SAAA7jE,GAASX,EAA/BwkE,EAAsB7jE,EA6F3B,SA7FK6jE,GA6FO/tC,EAAoBnyB,EAAqBmgE,EAAuBC,EAAuBC,GAAvF,GAAAluC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAnyB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAmgE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElGhkE,EAAApB,KAAAU,KAxFOA,MAAAgC,aAAsB,CA0F7BhC,MAAKo2B,QAAUI,CACfx2B,MAAKuQ,QAAUlM,CACfrE,MAAK2kE,WAAaH,CAClBxkE,MAAK4kE,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDzkE,MAAK6kE,KAAOH,EAzFb/jE,OAAAC,eAAW2jE,EAAAhkE,UAAA,UpG2lgBJM,IoG3lgBP,WAEC,MAAOb,MAAKo2B,SpG4lgBNzzB,IoGzlgBP,SAAkBC,GAEjB5C,KAAKo2B,QAAUxzB,CAEf5C,MAAK8kE,wBpGylgBC/jE,WAAY,KACZC,aAAc,MoGplgBrBL,QAAAC,eAAW2jE,EAAAhkE,UAAA,UpG0lgBJM,IoG1lgBP,WAEC,MAAOb,MAAKuQ,SpG2lgBN5N,IoGxlgBP,SAAkBC,GAEjB5C,KAAKuQ,QAAU3N,CACf5C,MAAK8kE,wBpGylgBC/jE,WAAY,KACZC,aAAc,MoGplgBrBL,QAAAC,eAAW2jE,EAAAhkE,UAAA,apG0lgBJM,IoG1lgBP,WAEC,MAAOb,MAAK2kE,YpG2lgBNhiE,IoGxlgBP,SAAqBC,GAEpB5C,KAAK2kE,WAAa/hE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBpGwlgBChkE,WAAY,KACZC,aAAc,MoGnlgBrBL,QAAAC,eAAW2jE,EAAAhkE,UAAA,apGylgBJM,IoGzlgBP,WAEC,MAAOb,MAAK4kE,YpG0lgBNjiE,IoGvlgBP,SAAqBC,GAEpB5C,KAAK4kE,WAAchiE,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9C5C,MAAK8kE,sBACL9kE,MAAK+kE,mBpGulgBChkE,WAAY,KACZC,aAAc,MoGllgBrBL,QAAAC,eAAW2jE,EAAAhkE,UAAA,OpGwlgBJM,IoGxlgBP,WAEC,MAAOb,MAAK6kE,MpGylgBNliE,IoGtlgBP,SAAeC,GAEd5C,KAAK6kE,KAAOjiE,CAEZ5C,MAAK8kE,wBpGslgBC/jE,WAAY,KACZC,aAAc,MoG9jgBdujE,GAAAhkE,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAI9E,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAIzyB,EACJ,IAAIkH,EACJ,IAAI++D,GAAkB,CACtB,IAAI9+D,GAAe,CACnB,IAAI++D,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIrF,GAAoB,CAExB,IAAIrqC,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE/X,MAAKgC,cAAgBhC,KAAK4kE,WAAa,IAAI5kE,KAAK2kE,WAAa,EAC7D1E,IAAcjgE,KAAK4kE,WAAa,GAAG5kE,KAAK2kE,WAAW,CAGnD,IAAI3kE,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CACtDiE,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,YACxDj8D,GAAY2hE,EAAiB3hE,UAAU/C,IAAIb,KAAKgC,aAChDwvB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAIb,KAAKgC,aAC5CyvB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAIb,KAAKgC,kBACxC,CACN0G,EAAU,GAAIua,aAAYg9C,EAC1Br8D,GAAY,GAAIif,cAAa7iB,KAAKgC,aAAa,EAC/CwvB,GAAU,GAAI3O,cAAa7iB,KAAKgC,aAAa,EAC7CyvB,GAAW,GAAI5O,cAAa7iB,KAAKgC,aAAa,EAE9ChC,MAAK+kE,kBAGN,IAAK7+D,EAAI,EAAGA,GAAKlG,KAAK4kE,aAAc1+D,EAAG,CAEtC,GAAIs/D,GAAkBpiE,KAAKqiE,GAAGv/D,EAAElG,KAAK4kE,UACrC,IAAIr+D,IAAYvG,KAAKo2B,QAAQhzB,KAAK+iC,IAAIq/B,EACtC,IAAIE,GAAoB1lE,KAAKo2B,QAAQhzB,KAAK8iC,IAAIs/B,EAE9CN,GAAa/+D,CAEb,KAAKnH,EAAI,EAAGA,GAAKgB,KAAK2kE,aAAc3lE,EAAG,CACtC,GAAI2mE,GAAkB,EAAEviE,KAAKqiE,GAAGzmE,EAAEgB,KAAK2kE,UACvC,IAAI1hE,GAAWyiE,EAAWtiE,KAAK+iC,IAAIw/B,EACnC,IAAI59D,GAAgB7B,EAAIlG,KAAK4kE,WAAW,EAAG5kE,KAAKuQ,QAAQ,GAAKvQ,KAAKuQ,QAAQ,CAC1E,IAAIrN,GAAWwiE,EAAWtiE,KAAK8iC,IAAIy/B,EACnC,IAAIC,GAAiB,EAAExiE,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAC/C,IAAIs/D,GAAgBziE,KAAKoB,KAAKtB,EAAEA,EAAID,EAAEA,EAEtC,IAAIjD,KAAK6kE,KAAM,CACdQ,EAAK,CACLC,GAAKO,EAAS,KAAM5iE,EAAE4iE,EAAS,CAC/BV,IAAS5+D,CACT6+D,GAAQliE,MAEF,CACNmiE,EAAKQ,EAAS,KAAM5iE,EAAE4iE,EAAS,CAC/BP,GAAK,CACLH,GAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,GAAKgB,KAAK2kE,WAAY,CAEzB/gE,EAAUuC,GAASvC,EAAUshE,EAC7BthE,GAAUuC,EAAQ,GAAKvC,EAAUshE,EAAa,EAC9CthE,GAAUuC,EAAQ,GAAKvC,EAAUshE,EAAa,EAC9C1zC,GAAQrrB,IAAUqrB,EAAQ0zC,GAAejiE,EAAE2iE,GAAU,EACrDp0C,GAAQrrB,EAAQ,IAAMqrB,EAAQ0zC,EAAa,GAAOC,EAAMS,GAAU,EAClEp0C,GAAQrrB,EAAQ,IAAMqrB,EAAQ0zC,EAAa,GAAME,EAAMQ,GAAU,EACjEn0C,GAAStrB,IAAUsrB,EAASyzC,IAAeW,EAAS,MAAO3iE,EAAE2iE,EAAS,IAAI,EAC1Ep0C,GAAStrB,EAAQ,IAAMsrB,EAASyzC,EAAa,GAAKG,GAAI,EACtD5zC,GAAStrB,EAAQ,IAAMsrB,EAASyzC,EAAa,GAAKI,GAAI,OAEhD,CAEN1hE,EAAUuC,GAASlD,CACnBW,GAAUuC,EAAQ,GAAMnG,KAAS,KAAGmlE,EAAQp9D,EAASo9D,CACrDvhE,GAAUuC,EAAQ,GAAMnG,KAAS,KAAGolE,EAAQA,EAAQr9D,CAEpDypB,GAAQrrB,GAASlD,EAAE2iE,CACnBp0C,GAAQrrB,EAAQ,GAAKg/D,EAAMS,CAC3Bp0C,GAAQrrB,EAAQ,GAAKi/D,EAAMQ,CAE3Bn0C,GAAStrB,GAAS0/D,EAAS,MAAO3iE,EAAE2iE,EAAS,CAC7Cp0C,GAAStrB,EAAQ,GAAKk/D,CACtB5zC,GAAStrB,EAAQ,GAAKm/D,EAGvB,GAAItmE,EAAI,GAAKkH,EAAI,EAAG,CACnB,GAAInH,IAAYiB,KAAK2kE,WAAa,GAAGz+D,EAAIlH,CACzC,IAAIkB,IAAYF,KAAK2kE,WAAa,GAAGz+D,EAAIlH,EAAI,CAC7C,IAAIq0B,IAAYrzB,KAAK2kE,WAAa,IAAIz+D,EAAI,GAAKlH,EAAI,CACnD,IAAIiB,IAAYD,KAAK2kE,WAAa,IAAIz+D,EAAI,GAAKlH,CAE/C,IAAIkH,GAAKlG,KAAK4kE,WAAY,CACzBhhE,EAAUuC,GAASvC,EAAUshE,EAC7BthE,GAAUuC,EAAQ,GAAKvC,EAAUshE,EAAa,EAC9CthE,GAAUuC,EAAQ,GAAKvC,EAAUshE,EAAa,EAE9Cx8D,GAAQu8D,KAAclmE,CACtB2J,GAAQu8D,KAAc5xC,CACtB3qB,GAAQu8D,KAAchlE,MAEhB,IAAIiG,GAAK,EAAG,CAClBwC,EAAQu8D,KAAclmE,CACtB2J,GAAQu8D,KAAc/kE,CACtBwI,GAAQu8D,KAAc5xC,MAEhB,CACN3qB,EAAQu8D,KAAclmE,CACtB2J,GAAQu8D,KAAc/kE,CACtBwI,GAAQu8D,KAAc5xC,CACtB3qB,GAAQu8D,KAAclmE,CACtB2J,GAAQu8D,KAAc5xC,CACtB3qB,GAAQu8D,KAAchlE,GAIxBkG,GAAS,GAKXo/D,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,GAQxC2uC,GAAAhkE,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,GAAI52B,GAAUkH,CACd,IAAI0C,EAGJ,IAAIgtB,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE,IAAIwtD,EAAiB38D,KAAO5I,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CAC9EmE,EAAM28D,EAAiB38D,IAAI/H,IAAIb,KAAKgC,kBAC9B,CACN4G,EAAM,GAAIia,cAAa7iB,KAAKgC,aAAa,GpG6igBjC,GoGzigBLmE,GAAe,CAGnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAK4kE,aAAc1+D,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAK2kE,aAAc3lE,EAAG,CAEtC4J,EAAIzC,KAAanH,EAAEgB,KAAK2kE,WAAa3kE,KAAKmC,OAC1CyG,GAAIzC,KAAaD,EAAElG,KAAK4kE,WAAa5kE,KAAKoC,SAK5CmjE,EAAiB1iE,OAAO+F,OAElB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAA2uC,IA9RqCD,EAgSL7kE,GAAAJ,QAAvBklE,IpGuigBNwB,iDAAiD,mDAAmDC,kDAAkD,SAASznE,EAAQkB,EAAOJ,GACjL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqGp1gBtB,IAAO4lE,GAAuB1nE,EAAW,qDrG01gBzC,IqGr1gBM2nE,GAAmB,SAAAxlE,GAASX,EAA5BmmE,EAAmBxlE,EA0BxB,SA1BKwlE,GA0BO1vC,EAAoBnyB,EAAqBmgE,EAAuBC,EAAsB0B,EAAuBzB,GAA7G,GAAAluC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAnyB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAmgE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA0B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAzB,QAAA,GAAkB,CAAlBA,EAAA,KAExHhkE,EAAApB,KAAAU,KAAM,EAAGw2B,EAAQnyB,EAAQmgE,EAAWC,EAAW,MAAO0B,EAAQ,KAAMzB,GAtBrE/jE,OAAAC,eAAWslE,EAAA3lE,UAAA,UrGs2gBJM,IqGt2gBP,WAEC,MAAOb,MAAKomE,gBrGu2gBNzjE,IqGp2gBP,SAAkBC,GAEjB5C,KAAKomE,eAAiBxjE,CAEtB5C,MAAK8kE,wBrGo2gBC/jE,WAAY,KACZC,aAAc,MqGt1gBtB,OAAAklE,IA9BkCD,EAgClCxmE,GAA6BJ,QAApB6mE,IrG01gBNG,qDAAqD,uDAAuDrwC,kDAAkD,SAASz3B,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsGj4gBtB,IAAOikE,GAAmB/lE,EAAY,iDtGu4gBtC,IsGl4gBM+zB,GAAmB,SAAA5xB,GAASX,EAA5BuyB,EAAmB5xB,EAqBxB,SArBK4xB,GAqBOluB,EAAoBC,EAAqByL,EAAoB00D,EAAsBC,EAAsB6B,EAAsBC,GAA/H,GAAAniE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAyL,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAA00D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1I7lE,EAAApB,KAAAU,KAEAA,MAAKmS,OAAS/N,CACdpE,MAAKuQ,QAAUlM,CACfrE,MAAKiQ,OAASH,CACd9P,MAAK2kE,WAAaH,CAClBxkE,MAAK4kE,WAAaH,CAClBzkE,MAAKwmE,WAAaF,CAClBtmE,MAAKymE,OAASF,EAMf5lE,OAAAC,eAAW0xB,EAAA/xB,UAAA,StG83gBJM,IsG93gBP,WAEC,MAAOb,MAAKmS,QtG+3gBNxP,IsG53gBP,SAAiBC,GAEhB5C,KAAKmS,OAASvP,CAEd5C,MAAK8kE,wBtG43gBC/jE,WAAY,KACZC,aAAc,MsGv3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,UtG63gBJM,IsG73gBP,WAEC,MAAOb,MAAKuQ,StG83gBN5N,IsG33gBP,SAAkBC,GAEjB5C,KAAKuQ,QAAU3N,CAEf5C,MAAK8kE,wBtG23gBC/jE,WAAY,KACZC,aAAc,MsGt3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,StG43gBJM,IsG53gBP,WAEC,MAAOb,MAAKiQ,QtG63gBNtN,IsG13gBP,SAAiBC,GAEhB5C,KAAKiQ,OAASrN,CAEd5C,MAAK8kE,wBtG03gBC/jE,WAAY,KACZC,aAAc,MsGh3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,StG23gBJM,IsG33gBP,WAEC,MAAOb,MAAKymE,QtG43gBN9jE,IsGz3gBP,SAAiBC,GAEhB5C,KAAKymE,OAAS7jE,CAEd5C,MAAK8kE,wBtGy3gBC/jE,WAAY,KACZC,aAAc,MsGp3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,atG03gBJM,IsG13gBP,WAEC,MAAOb,MAAK2kE,YtG23gBNhiE,IsGx3gBP,SAAqBC,GAEpB5C,KAAK2kE,WAAa/hE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBtGw3gBChkE,WAAY,KACZC,aAAc,MsGn3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,atGy3gBJM,IsGz3gBP,WAEC,MAAOb,MAAK4kE,YtG03gBNjiE,IsGv3gBP,SAAqBC,GAEpB5C,KAAK4kE,WAAahiE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBtGu3gBChkE,WAAY,KACZC,aAAc,MsGl3gBrBL,QAAAC,eAAW0xB,EAAA/xB,UAAA,atGw3gBJM,IsGx3gBP,WAEC,MAAOb,MAAKwmE,YtGy3gBN7jE,IsGt3gBP,SAAqBC,GAEpB5C,KAAKwmE,WAAa5jE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBtGs3gBChkE,WAAY,KACZC,aAAc,MsGj3gBdsxB,GAAA/xB,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAI9E,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAI4tB,GAAWqnB,EAAWC,EAAWC,CACrC,IAAI5nE,GAAUkH,EAAU2gE,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAW9wC,CAE1B,IAAI+wC,EACJ,IAAIpH,EACJ,IAAIx7D,EAGJuiE,GAAKhnE,KAAKmS,OAAO,CACjB80D,GAAKjnE,KAAKuQ,QAAQ,CAClB22D,GAAKlnE,KAAKiQ,OAAO,CAEjB,IAAI2lB,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAEjEtT,KAAgBzE,KAAK2kE,WAAa,IAAI3kE,KAAK4kE,WAAa,IAAM5kE,KAAK2kE,WAAa,IAAI3kE,KAAKwmE,WAAa,IAAMxmE,KAAK4kE,WAAa,IAAI5kE,KAAKwmE,WAAa,IAAI,CAExJvG,IAAejgE,KAAK2kE,WAAW3kE,KAAK4kE,WAAa5kE,KAAK2kE,WAAW3kE,KAAKwmE,WAAaxmE,KAAK4kE,WAAW5kE,KAAKwmE,YAAY,EAEpH,IAAI/hE,GAAe8gE,EAAiB9gE,aAAe8gE,EAAiB78D,SAAW,KAAM,CACpFA,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,YACxDj8D,GAAY2hE,EAAiB3hE,UAAU/C,IAAI4D,EAC3C+sB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAI4D,EACvCgtB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAI4D,OACnC,CACNiE,EAAU,GAAIua,aAAYg9C,EAC1Br8D,GAAY,GAAIif,cAAape,EAAY,EACzC+sB,GAAU,GAAI3O,cAAape,EAAY,EACvCgtB,GAAW,GAAI5O,cAAape,EAAY,EAExCzE,MAAK+kE,kBAGN+B,EAAO,CACPC,GAAO,CAGPI,GAAKnnE,KAAKmS,OAAOnS,KAAK2kE,UACtByC,GAAKpnE,KAAKuQ,QAAQvQ,KAAK4kE,UACvBtuC,GAAKt2B,KAAKiQ,OAAOjQ,KAAKwmE,UAEtB,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAK2kE,WAAY3lE,IAAK,CACtCqoE,GAAaL,EAAKhoE,EAAEmoE,CAEpB,KAAKjhE,EAAI,EAAGA,GAAKlG,KAAK4kE,WAAY1+D,IAAK,CAEtCtC,EAAUkjE,GAAQO,CAClBzjE,GAAUkjE,EAAO,IAAMG,EAAK/gE,EAAEkhE,CAC9BxjE,GAAUkjE,EAAO,IAAMI,CACvB11C,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAK,CACpBt1C,GAAQs1C,EAAO,IAAM,CACrBr1C,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAGRljE,GAAUkjE,GAAQO,CAClBzjE,GAAUkjE,EAAO,IAAMG,EAAK/gE,EAAEkhE,CAC9BxjE,GAAUkjE,EAAO,GAAKI,CACtB11C,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAK,CACpBt1C,GAAQs1C,EAAO,GAAK,CACpBr1C,GAASq1C,IAAS,CAClBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI9nE,GAAKkH,EAAG,CACXm5C,EAAK,IAAIrgD,EAAI,IAAIgB,KAAK4kE,WAAa,IAAM1+D,EAAI,GAC7CwgE,GAAK,GAAG1nE,GAAGgB,KAAK4kE,WAAa,IAAM1+D,EAAI,GACvCygE,GAAKtnB,EAAK,CACVunB,GAAKF,EAAK,CAEVh+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUJ,CAClBj+D,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAUL,CAClBh+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUH,EAAK,CACvBl+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAU1nB,EAAK,IAK1BwnB,GAAO,GAAG7mE,KAAK2kE,WAAa,IAAI3kE,KAAK4kE,WAAa,EAElD,KAAK5lE,EAAI,EAAGA,GAAKgB,KAAK2kE,WAAY3lE,IAAK,CACtCqoE,GAAaL,EAAKhoE,EAAEmoE,CAEpB,KAAKjhE,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CAEtCtC,EAAUkjE,GAAQO,CAClBzjE,GAAUkjE,EAAO,GAAKG,CACtBrjE,GAAUkjE,EAAO,IAAMI,EAAKhhE,EAAEowB,CAC9B9E,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAK,CACpBt1C,GAAQs1C,EAAO,GAAK,CACpBr1C,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAGRljE,GAAUkjE,GAAQO,CAClBzjE,GAAUkjE,EAAO,IAAMG,CACvBrjE,GAAUkjE,EAAO,IAAMI,EAAKhhE,EAAEowB,CAC9B9E,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,IAAM,CACrBt1C,GAAQs1C,EAAO,GAAK,CACpBr1C,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI9nE,GAAKkH,EAAG,CACXm5C,EAAKwnB,EAAM,IAAI7nE,EAAI,IAAIgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GACnDwgE,GAAKG,EAAM,GAAG7nE,GAAGgB,KAAKwmE,WAAa,IAAMtgE,EAAI,GAC7CygE,GAAKtnB,EAAK,CACVunB,GAAKF,EAAK,CAEVh+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUJ,CAClBj+D,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAUL,CAClBh+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUH,EAAK,CACvBl+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAU1nB,EAAK,IAK1BwnB,GAAO,GAAG7mE,KAAK2kE,WAAa,IAAI3kE,KAAKwmE,WAAa,EAElD,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAKwmE,WAAYxnE,IAAK,CACtCqoE,EAAYH,EAAKloE,EAAEs3B,CAEnB,KAAKpwB,EAAI,EAAGA,GAAKlG,KAAK4kE,WAAY1+D,IAAK,CAEtCtC,EAAUkjE,IAASE,CACnBpjE,GAAUkjE,EAAK,IAAMG,EAAK/gE,EAAEkhE,CAC5BxjE,GAAUkjE,EAAK,GAAKO,CACpB71C,GAAQs1C,IAAS,CACjBt1C,GAAQs1C,EAAK,GAAK,CAClBt1C,GAAQs1C,EAAK,GAAK,CAClBr1C,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAK,GAAK,CACnBr1C,GAASq1C,EAAK,IAAM,CACpBA,IAAQ,CAGRljE,GAAUkjE,GAAQE,CAClBpjE,GAAUkjE,EAAK,IAAMG,EAAK/gE,EAAEkhE,CAC5BxjE,GAAUkjE,EAAK,GAAKO,CACpB71C,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAK,GAAK,CAClBt1C,GAAQs1C,EAAK,GAAK,CAClBr1C,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAK,GAAK,CACnBr1C,GAASq1C,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAI9nE,GAAKkH,EAAG,CACXm5C,EAAKwnB,EAAM,IAAI7nE,EAAI,IAAIgB,KAAK4kE,WAAa,IAAM1+D,EAAI,GACnDwgE,GAAKG,EAAM,GAAG7nE,GAAGgB,KAAK4kE,WAAa,IAAM1+D,EAAI,GAC7CygE,GAAKtnB,EAAK,CACVunB,GAAKF,EAAK,CAEVh+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUJ,CAClBj+D,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAU1nB,CAClB32C,GAAQq+D,KAAUH,CAClBl+D,GAAQq+D,KAAUL,CAClBh+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUH,EAAK,CACvBl+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAUL,EAAK,CACvBh+D,GAAQq+D,KAAUJ,EAAK,CACvBj+D,GAAQq+D,KAAU1nB,EAAK,IAK1BkmB,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAI0xC,GAAiDvvD,CAErD,IAAIwvD,GAAqBvnE,KAAK4kE,WAAW,EAAK5kE,KAAK2kE,WAAW,EAAI3kE,KAAKwmE,WAAW,CAClF,IAAI5iE,EACJ,IAAIuf,EAEJvf,GAAY,GAAIif,cAAa0kD,EAAY,EACzCpkD,GAAY,GAAIN,cAAa0kD,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAK/nE,EAAI,EAAGA,EAAIgB,KAAK4kE,aAAc5lE,EAAG,CACrC4E,EAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,WAAaqC,CACrDrjE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,WAAaqC,CACrDrjE,GAAUkjE,MAAWI,CAErB/jD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAUG,EAAKjoE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,UAC7ChhE,GAAUkjE,KAAUI,CAEpBtjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAUG,EAAKjoE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,UAC7ChhE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,EAGrB,IAAK/nE,EAAI,EAAGA,EAAIgB,KAAK2kE,aAAc3lE,EAAG,CACrC4E,EAAUkjE,KAAU9nE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,WAAaqC,CACpDpjE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,WAAaqC,CACpDpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,MAAWI,CAErB/jD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,KAAUE,EAAKhoE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,UAC5C/gE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAUI,CAEpBtjE,GAAUkjE,KAAUE,EAAKhoE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,UAC5C/gE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,EAIrB,IAAK/nE,EAAI,EAAGA,EAAIgB,KAAK4kE,aAAc5lE,EAAG,CACrC4E,EAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,WAAaqC,CACrDrjE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,WAAaqC,CACrDrjE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAUG,EAAKjoE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,UAC7ChhE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAUG,EAAKjoE,EAAEgB,KAAKuQ,QAAQvQ,KAAK4kE,UAC7ChhE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,EAGrB,IAAK/nE,EAAI,EAAGA,EAAIgB,KAAKwmE,aAAcxnE,EAAG,CACrC4E,EAAUkjE,KAAUE,CACpBpjE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,WAAaU,CAEpDtjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,WAAaU,CAEpD/jD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,MAAWE,CACrBpjE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAUI,EAAKloE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,UAE5C5iE,GAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAUI,EAAKloE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,UAE5CrjD,GAAU4jD,KAAU,EAKrB,IAAK/nE,EAAI,EAAGA,EAAIgB,KAAKwmE,aAAcxnE,EAAG,CACrC4E,EAAUkjE,MAAWE,CACrBpjE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAUI,EAAKloE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,UAE5C5iE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAUI,EAAKloE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,UAE5CrjD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,WAAaU,CAEpDtjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKiQ,OAAOjQ,KAAKwmE,WAAaU,CAEpD/jD,GAAU4jD,KAAU,EAGrB,IAAK/nE,EAAI,EAAGA,EAAIgB,KAAK2kE,aAAc3lE,EAAG,CACrC4E,EAAUkjE,KAAUE,EAAKhoE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,UAC5C/gE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,KAAUE,EAAKhoE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,UAC5C/gE,GAAUkjE,MAAWG,CACrBrjE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,CAEpBnjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,WAAaqC,CACpDpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,MAAWI,CAErBtjE,GAAUkjE,KAAU9nE,EAAEgB,KAAKmS,OAAOnS,KAAK2kE,WAAaqC,CACpDpjE,GAAUkjE,KAAUG,CACpBrjE,GAAUkjE,KAAUI,CAEpB/jD,GAAU4jD,KAAU,EAIrBO,EAAaz/D,aAAajE,EAC1B0jE,GAAapkD,aAAaC,IAOrBmP,GAAA/xB,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,GAAI52B,GAAUkH,EAAUC,CACxB,IAAIyC,EAEJ,IAAI4+D,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAIxjE,EAEJ,IAAImxB,GAAgB,sBAAuB,CAE1CnxB,IAAgBzE,KAAK2kE,WAAa,IAAI3kE,KAAK4kE,WAAa,IAAM5kE,KAAK2kE,WAAa,IAAI3kE,KAAKwmE,WAAa,IAAMxmE,KAAK4kE,WAAa,IAAI5kE,KAAKwmE,WAAa,IAAI,CAExJ,IAAIjB,GAA6DxtD,CAEjE,IAAItT,GAAe8gE,EAAiB9gE,aAAe8gE,EAAiB38D,KAAO,KAAM,CAChFA,EAAM28D,EAAiB38D,IAAI/H,IAAI4D,OACzB,CACNmE,EAAM,GAAIia,cAAape,EAAY,GAGpC,GAAIzE,KAAKymE,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7BxhE,EAAQ,CAGRyhE,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWxnE,KAAK2kE,UACrBsD,GAAKR,EAAWznE,KAAK4kE,UACrB,KAAK5lE,EAAI,EAAGA,GAAKgB,KAAK2kE,WAAY3lE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAK4kE,WAAY1+D,IAAK,CACtC0C,EAAIzC,MAAayhE,EAAO5oE,EAAEgpE,GAAKhoE,KAAKmC,OACpCyG,GAAIzC,MAAa0hE,GAAQJ,EAAavhE,EAAE+hE,IAAKjoE,KAAKoC,OAElDwG,GAAIzC,MAAa2hE,GAAQN,EAAaxoE,EAAEgpE,IAAKhoE,KAAKmC,OAClDyG,GAAIzC,MAAa4hE,GAAQN,EAAavhE,EAAE+hE,IAAKjoE,KAAKoC,SAKpDwlE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWxnE,KAAK2kE,UACrBsD,GAAKR,EAAWznE,KAAKwmE,UACrB,KAAKxnE,EAAI,EAAGA,GAAKgB,KAAK2kE,WAAY3lE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAKwmE,WAAYtgE,IAAK,CACtC0C,EAAIzC,MAAayhE,EAAO5oE,EAAEgpE,GAAIhoE,KAAKmC,OACnCyG,GAAIzC,MAAa0hE,GAAQJ,EAAavhE,EAAE+hE,IAAKjoE,KAAKoC,OAElDwG,GAAIzC,MAAa2hE,EAAO9oE,EAAEgpE,GAAIhoE,KAAKmC,OACnCyG,GAAIzC,MAAa4hE,EAAO7hE,EAAE+hE,GAAIjoE,KAAKoC,SAKrCwlE,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWxnE,KAAKwmE,UACrByB,GAAKR,EAAWznE,KAAK4kE,UACrB,KAAK5lE,EAAI,EAAGA,GAAKgB,KAAKwmE,WAAYxnE,IAAK,CACtC,IAAKkH,EAAI,EAAGA,GAAKlG,KAAK4kE,WAAY1+D,IAAK,CACtC0C,EAAIzC,MAAayhE,EAAO5oE,EAAEgpE,GAAIhoE,KAAKmC,OACnCyG,GAAIzC,MAAa0hE,GAAQJ,EAAavhE,EAAE+hE,IAAKjoE,KAAKoC,OAElDwG,GAAIzC,MAAa2hE,GAAQN,EAAaxoE,EAAEgpE,IAAKhoE,KAAKmC,OAClDyG,GAAIzC,MAAa4hE,GAAQN,EAAavhE,EAAE+hE,IAAKjoE,KAAKoC,SAIpDmjE,EAAiB1iE,OAAO+F,OAElB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAAtD,IAjnBkCgyC,EAmnBlC7kE,GAA6BJ,QAApBizB,ItG2xgBNyzC,iDAAiD,mDAAmDM,sDAAsD,SAAS9nE,EAAQkB,EAAOJ,GACrL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuGx5hBtB,IAAOikE,GAAmB/lE,EAAY,iDvG85hBtC,IuGz5hBM0nE,GAAuB,SAAAvlE,GAASX,EAAhCkmE,EAAuBvlE,EAyJ5B,SAzJKulE,GAyJOiC,EAAuBC,EAA0B9jE,EAAqBmgE,EAAuBC,EAAsB2D,EAA0BC,EAA6BC,EAA8B5D,GAAxM,GAAAwD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA9jE,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAmgE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA2D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA5D,QAAA,GAAkB,CAAlBA,EAAA,KAEnNhkE,EAAApB,KAAAU,KA9IOA,MAAAgC,aAAsB,CAgJ7BhC,MAAKuoE,WAAaL,CAClBloE,MAAKomE,eAAiB+B,CACtBnoE,MAAKuQ,QAAUlM,CACfrE,MAAKwoE,YAAchE,CACnBxkE,MAAKyoE,YAAchE,CACnBzkE,MAAK0oE,WAAaN,CAClBpoE,MAAK2oE,cAAgBN,CACrBroE,MAAK4oE,eAAiBN,CACtBtoE,MAAK6kE,KAAOH,EAnJb/jE,OAAAC,eAAWqlE,EAAA1lE,UAAA,avG86hBJM,IuG96hBP,WAEC,MAAOb,MAAKuoE,YvG+6hBN5lE,IuG56hBP,SAAqBC,GAEpB5C,KAAKuoE,WAAa3lE,CAClB5C,MAAK8kE,wBvG66hBC/jE,WAAY,KACZC,aAAc,MuGx6hBrBL,QAAAC,eAAWqlE,EAAA1lE,UAAA,gBvG86hBJM,IuG96hBP,WAEC,MAAOb,MAAKomE,gBvG+6hBNzjE,IuG56hBP,SAAwBC,GAEvB5C,KAAKomE,eAAiBxjE,CACtB5C,MAAK8kE,wBvG66hBC/jE,WAAY,KACZC,aAAc,MuGx6hBrBL,QAAAC,eAAWqlE,EAAA1lE,UAAA,UvG86hBJM,IuG96hBP,WAEC,MAAOb,MAAKuQ,SvG+6hBN5N,IuG56hBP,SAAkBC,GAEjB5C,KAAKuQ,QAAU3N,CACf5C,MAAK8kE,wBvG66hBC/jE,WAAY,KACZC,aAAc,MuGx6hBrBL,QAAAC,eAAWqlE,EAAA1lE,UAAA,avG86hBJM,IuG96hBP,WAEC,MAAOb,MAAKwoE,avG+6hBN7lE,IuG56hBP,SAAqBC,GAEpB5C,KAAK6oE,aAAajmE,IvG66hBZ7B,WAAY,KACZC,aAAc,MuG36hBdilE,GAAA1lE,UAAAsoE,aAAP,SAAoBjmE,GAEnB5C,KAAKwoE,YAAc5lE,CACnB5C,MAAK8kE,sBACL9kE,MAAK+kE,kBAMNpkE,QAAAC,eAAWqlE,EAAA1lE,UAAA,avG46hBJM,IuG56hBP,WAEC,MAAOb,MAAKyoE,avG66hBN9lE,IuG16hBP,SAAqBC,GAGpB5C,KAAK8oE,aAAalmE,IvG06hBZ7B,WAAY,KACZC,aAAc,MuGv6hBdilE,GAAA1lE,UAAAuoE,aAAP,SAAoBlmE,GAEnB5C,KAAKyoE,YAAc7lE,CACnB5C,MAAK8kE,sBACL9kE,MAAK+kE,kBAONpkE,QAAAC,eAAWqlE,EAAA1lE,UAAA,avGu6hBJM,IuGv6hBP,WAEC,MAAOb,MAAK0oE,YvGw6hBN/lE,IuGr6hBP,SAAqBC,GAEpB5C,KAAK0oE,WAAa9lE,CAClB5C,MAAK8kE,wBvGs6hBC/jE,WAAY,KACZC,aAAc,MuGj6hBrBL,QAAAC,eAAWqlE,EAAA1lE,UAAA,gBvGu6hBJM,IuGv6hBP,WAEC,MAAOb,MAAK2oE,evGw6hBNhmE,IuGr6hBP,SAAwBC,GAEvB5C,KAAK2oE,cAAgB/lE,CACrB5C,MAAK8kE,wBvGs6hBC/jE,WAAY,KACZC,aAAc,MuGj6hBrBL,QAAAC,eAAWqlE,EAAA1lE,UAAA,OvGu6hBJM,IuGv6hBP,WAEC,MAAOb,MAAK6kE,MvGw6hBNliE,IuGr6hBP,SAAeC,GAEd5C,KAAK6kE,KAAOjiE,CACZ5C,MAAK8kE,wBvGs6hBC/jE,WAAY,KACZC,aAAc,MuGt4hBdilE,GAAA1lE,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAI9E,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAIzyB,EACJ,IAAIkH,EACJ,IAAIjD,EACJ,IAAIC,EACJ,IAAIqD,EACJ,IAAIugE,EACJ,IAAIC,EAEJ,IAAIvwC,EACJ,IAAIuyC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIjJ,GAAoB,CAExB,IAAIkF,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIiE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAI/D,EACJ,IAAIC,EAGJtlE,MAAKgC,aAAe,CvGs4hBd,IuGn4hBFqnE,GAA8B,EAAEjmE,KAAKqiE,GAAGzlE,KAAKwoE,WAEjD,IAAI5yC,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE,IAAI/X,KAAK4oE,eAAgB,CACxB5oE,KAAKgC,eAAiBhC,KAAKyoE,YAAc,IAAIzoE,KAAKwoE,YAAc,EAChEvI,IAAcjgE,KAAKyoE,YAAYzoE,KAAKwoE,YAAY,EAEjD,GAAIxoE,KAAK0oE,WAAY,CACpB1oE,KAAKgC,cAAgB,GAAGhC,KAAKwoE,YAAc,EAC3CvI,IAAcjgE,KAAKwoE,YAAY,EAEhC,GAAIxoE,KAAK2oE,cAAe,CACvB3oE,KAAKgC,cAAgB,GAAGhC,KAAKwoE,YAAc,EAC3CvI,IAAcjgE,KAAKwoE,YAAY,EAIhC,GAAIxoE,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CACtDiE,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,YACxDj8D,GAAY2hE,EAAiB3hE,UAAU/C,IAAIb,KAAKgC,aAChDwvB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAIb,KAAKgC,aAC5CyvB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAIb,KAAKgC,kBACxC,CACN0G,EAAU,GAAIua,aAAYg9C,EAC1Br8D,GAAY,GAAIif,cAAa7iB,KAAKgC,aAAa,EAC/CwvB,GAAU,GAAI3O,cAAa7iB,KAAKgC,aAAa,EAC7CyvB,GAAW,GAAI5O,cAAa7iB,KAAKgC,aAAa,EAE9ChC,MAAK+kE,kBAGN+B,EAAO,CACPC,GAAO,CAGP,IAAI/mE,KAAK0oE,YAAc1oE,KAAKuoE,WAAa,EAAG,CAE3ChiE,GAAK,GAAIvG,KAAKuQ,OAGd,IAAIvQ,KAAK6kE,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAAS5+D,CACT6+D,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQ7+D,EAGT3C,EAAUkjE,GAAQ,CAClBljE,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,CACtB5zC,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAKzB,CACpB7zC,GAAQs1C,EAAO,GAAKxB,CACpB7zC,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAKnqE,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAGvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAIjD,KAAKuoE,WAAWnlE,KAAK+iC,IAAI4iC,EAC7B7lE,GAAIlD,KAAKuoE,WAAWnlE,KAAK8iC,IAAI6iC,EAE7B,IAAI/oE,KAAK6kE,KAAM,CACdM,GAAS5+D,CACT6+D,GAAQliE,MACF,CACNiiE,EAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,GAAKgB,KAAKwoE,YAAa,CAC1B5kE,EAAUkjE,GAAQljE,EAAUshE,EAAa,EACzCthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7CthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,OAEvC,CACNthE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,EAGvB5zC,EAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAKzB,CACpB7zC,GAAQs1C,EAAO,GAAKxB,CACpB7zC,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI9nE,EAAI,EAAG,CAEV0J,EAAQq+D,KAAUoC,EAAkB,CACpCzgE,GAAQq+D,KAAUqC,CAClB1gE,GAAQq+D,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAInpE,KAAK2oE,eAAiB3oE,KAAKomE,eAAiB,EAAG,CAElD7/D,EAAI,GAAIvG,KAAKuQ,OAEb20D,GAAaiE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAInpE,KAAK6kE,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAAS5+D,CACT6+D,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQ7+D,EAGT,GAAIvH,EAAI,EAAG,CACV4E,EAAUkjE,GAAQ,CAClBljE,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,CACtB5zC,GAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAKzB,CACpB7zC,GAAQs1C,EAAO,GAAKxB,CACpB7zC,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAKnqE,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAGvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAIjD,KAAKomE,eAAehjE,KAAK+iC,IAAI4iC,EACjC7lE,GAAIlD,KAAKomE,eAAehjE,KAAK8iC,IAAI6iC,EAEjC,IAAI/oE,KAAK6kE,KAAM,CACdM,GAAS5+D,CACT6+D,GAAQliE,MACF,CACNiiE,EAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,GAAKgB,KAAKwoE,YAAa,CAC1B5kE,EAAUkjE,GAAQljE,EAAUshE,EAAa,EACzCthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7CthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,OACvC,CACNthE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,EAGvB5zC,EAAQs1C,GAAQ,CAChBt1C,GAAQs1C,EAAO,GAAKzB,CACpB7zC,GAAQs1C,EAAO,GAAKxB,CACpB7zC,GAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI9nE,EAAI,EAAG,CAEV0J,EAAQq+D,KAAUoC,EAAkB,CACpCzgE,GAAQq+D,KAAUoC,CAClBzgE,GAAQq+D,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAMhpE,KAAKomE,eAAiBpmE,KAAKuoE,UACjCU,GAAcD,EAAGhpE,KAAKuQ,OACtB24D,GAAeD,GAAe,EAAI,EAAIjpE,KAAKuQ,QAAQy4D,CAGnD,IAAIhpE,KAAK4oE,eAAgB,CACxB,GAAI7pE,EACJ,IAAImB,EACJ,IAAImzB,EACJ,IAAIpzB,EACJ,IAAIqpE,GAAYC,EAAYC,EAAgBC,CAE5C,KAAKvjE,EAAI,EAAGA,GAAKlG,KAAKyoE,cAAeviE,EAAG,CACvCswB,EAASx2B,KAAKuoE,WAAeriE,EAAElG,KAAKyoE,aAAczoE,KAAKuoE,WAAavoE,KAAKomE,eACzE7/D,KAAMvG,KAAKuQ,QAAQ,GAAMrK,EAAElG,KAAKyoE,YAAYzoE,KAAKuQ,OAEjD20D,GAAaiE,EAAgB,CAE7B,KAAKnqE,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAEvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAIuzB,EAAOpzB,KAAK+iC,IAAI4iC,EACpB7lE,GAAIszB,EAAOpzB,KAAK8iC,IAAI6iC,EACpBO,GAAMJ,EAAY9lE,KAAK+iC,IAAI4iC,EAC3BQ,GAAML,EAAY9lE,KAAK8iC,IAAI6iC,EAE3B,IAAI/oE,KAAK6kE,KAAM,CACdQ,EAAK,CACLC,IAAMgE,CACNnE,IAAS5+D,CACT6+D,GAAQliE,CACRsmE,GAAUP,CACVQ,GAAUF,MAEJ,CACNlE,GAAMiE,CACNhE,GAAK,CACLH,GAAQjiE,CACRkiE,GAAQ7+D,CACRijE,GAAUD,CACVE,GAAUR,EAGX,GAAIjqE,GAAKgB,KAAKwoE,YAAa,CAC1B5kE,EAAUkjE,GAAQljE,EAAUshE,EAC5BthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7CthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7C1zC,GAAQs1C,GAAQwC,CAChB93C,GAAQs1C,EAAO,GAAKmC,CACpBz3C,GAAQs1C,EAAO,GAAKyC,CACpB93C,GAASq1C,GAAQyC,CACjB93C,GAASq1C,EAAO,GAAKzB,CACrB5zC,GAASq1C,EAAO,GAAKxB,MACf,CACN1hE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,CACtB5zC,GAAQs1C,GAAQwC,CAChB93C,GAAQs1C,EAAO,GAAK0C,CACpBh4C,GAAQs1C,EAAO,GAAK2C,CACpBh4C,GAASq1C,IAASyC,CAClB93C,GAASq1C,EAAO,GAAKzB,CACrB5zC,GAASq1C,EAAO,GAAKxB,EAEtBwB,GAAQ,CAGR,IAAI9nE,EAAI,GAAKkH,EAAI,EAAG,CACnBnH,EAAIoqE,CACJjpE,GAAIipE,EAAkB,CACtB91C,GAAInzB,EAAIF,KAAKwoE,YAAc,CAC3BvoE,GAAIlB,EAAIiB,KAAKwoE,YAAc,CAE3B9/D,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU7mE,CAClBwI,GAAQq+D,KAAU1zC,CAElB3qB,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU1zC,CAClB3qB,GAAQq+D,KAAU9mE,EAGnBkpE,MAMH5D,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAI0xC,GAAiDvvD,CAErD,IAAIwvD,GAAqBvnE,KAAKyoE,YAAYzoE,KAAKwoE,YAAY,EAAIxoE,KAAKwoE,WACpE,IAAI5kE,GAAyB,GAAIif,cAAa0kD,EAAY,EAC1D,IAAIpkD,GAAyB,GAAIN,cAAa0kD,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAI3wC,GAAU,EACd,KAAKlwB,EAAI,EAAGA,GAAKlG,KAAKyoE,cAAeviE,EAAG,CAEvCswB,EAASx2B,KAAKuoE,WAAeriE,EAAElG,KAAKyoE,aAAczoE,KAAKuoE,WAAavoE,KAAKomE,eACzE7/D,KAAMvG,KAAKuQ,QAAQ,GAAMrK,EAAElG,KAAKyoE,YAAYzoE,KAAKuQ,OAEjD,KAAKvR,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAEvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAIuzB,EAAOpzB,KAAK+iC,IAAI4iC,EACpB7lE,GAAIszB,EAAOpzB,KAAK8iC,IAAI6iC,EAEpB,IAAI/oE,KAAK6kE,KAAM,CACdM,GAAS5+D,CACT6+D,GAAQliE,MACF,CACNiiE,EAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,EAAI,EAAG,CAEV4E,EAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,CAEpBjiD,GAAU4jD,KAAU,CAGpB,IAAI7gE,EAAI,EAAG,CACV,GAAIwjE,GAAexjE,GAAK,EAAI,GAAK,GAAGlG,KAAKwoE,YAAYxpE,GAAK,GAAGA,GAAK,EAAIgB,KAAKwoE,YAAY,EACvF5kE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EACrC9lE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EACrC9lE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EAErC9lE,GAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,CAEpBjiD,GAAU4jD,KAAU,GAMtB,GAAI/nE,EAAIgB,KAAKwoE,YAAa,CACzB5kE,EAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,IAMvBkC,EAAaz/D,aAAajE,EAC1B0jE,GAAapkD,aAAaC,IAOrB8iD,GAAA1lE,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,GAAI52B,EACJ,IAAIkH,EACJ,IAAIjD,EACJ,IAAIC,EACJ,IAAI6lE,EACJ,IAAIngE,EAEJ,IAAIgtB,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE,IAAIwtD,EAAiB38D,KAAO5I,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CAC9EmE,EAAM28D,EAAiB38D,IAAI/H,IAAIb,KAAKgC,kBAC9B,CACN4G,EAAM,GAAIia,cAAa7iB,KAAKgC,aAAa,GvG80hBjC,GuG10hBLqnE,GAA8B,EAAEjmE,KAAKqiE,GAAGzlE,KAAKwoE,WvG40hBxC,IuGz0hBLriE,GAAe,CAGnB,IAAInG,KAAK0oE,WAAY,CAEpB9/D,EAAIzC,KAAW,GAAInG,KAAKmC,OACxByG,GAAIzC,KAAW,GAAInG,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAEvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAI,GAAM,IAAMG,KAAK+iC,IAAI4iC,EACzB7lE,GAAI,GAAM,GAAIE,KAAK8iC,IAAI6iC,EAEvBngE,GAAIzC,KAAWlD,EAAEjD,KAAKmC,OACtByG,GAAIzC,KAAWjD,EAAElD,KAAKoC,SAKxB,GAAIpC,KAAK2oE,cAAe,CAEvB//D,EAAIzC,KAAW,GAAInG,KAAKmC,OACxByG,GAAIzC,KAAW,GAAInG,KAAKoC,OAExB,KAAKpD,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAEvC+pE,EAAkB/pE,EAAEqqE,CACpBpmE,GAAI,GAAM,GAAIG,KAAK+iC,IAAI4iC,EACvB7lE,GAAI,GAAM,GAAIE,KAAK8iC,IAAI6iC,EAEvBngE,GAAIzC,KAAWlD,EAAEjD,KAAKmC,OACtByG,GAAIzC,KAAWjD,EAAElD,KAAKoC,SAKxB,GAAIpC,KAAK4oE,eAAgB,CACxB,IAAK1iE,EAAI,EAAGA,GAAKlG,KAAKyoE,cAAeviE,EAAG,CACvC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKwoE,cAAexpE,EAAG,CAEvC4J,EAAIzC,KAAanH,EAAEgB,KAAKwoE,YAAcxoE,KAAKmC,OAC3CyG,GAAIzC,KAAaD,EAAElG,KAAKyoE,YAAczoE,KAAKoC,UAM9CmjE,EAAiB1iE,OAAO+F,OAElB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAAqwC,IA5oBsC3B,EA8oBL7kE,GAAAJ,QAAxB4mE,IvG8zhBNF,iDAAiD,mDAAmD4D,mDAAmD,SAASprE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGt9iBtB,IAAOikE,GAAmB/lE,EAAY,iDxG49iBtC,IwGv9iBMqrE,GAAoB,SAAAlpE,GAASX,EAA7B6pE,EAAoBlpE,EAkBzB,SAlBKkpE,GAkBOxlE,EAAoBC,EAAqBmgE,EAAsBC,EAAsBC,EAAoBmF,GAAzG,GAAAzlE,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAmgE,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAmF,QAAA,GAA2B,CAA3BA,EAAA,MAGpHnpE,EAAApB,KAAAU,KAEAA,MAAK2kE,WAAaH,CAClBxkE,MAAK4kE,WAAaH,CAClBzkE,MAAK6kE,KAAOH,CACZ1kE,MAAKmS,OAAS/N,CACdpE,MAAKuQ,QAAUlM,CACfrE,MAAK8pE,aAAeD,EAOrBlpE,OAAAC,eAAWgpE,EAAArpE,UAAA,axGk9iBJM,IwGl9iBP,WAEC,MAAOb,MAAK2kE,YxGm9iBNhiE,IwGh9iBP,SAAqBC,GAGpB5C,KAAK2kE,WAAa/hE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBxG+8iBChkE,WAAY,KACZC,aAAc,MwGx8iBrBL,QAAAC,eAAWgpE,EAAArpE,UAAA,axG+8iBJM,IwG/8iBP,WAEC,MAAOb,MAAK4kE,YxGg9iBNjiE,IwG78iBP,SAAqBC,GAGpB5C,KAAK4kE,WAAahiE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mBxG48iBChkE,WAAY,KACZC,aAAc,MwGt8iBrBL,QAAAC,eAAWgpE,EAAArpE,UAAA,OxG48iBJM,IwG58iBP,WAEC,MAAOb,MAAK6kE,MxG68iBNliE,IwG18iBP,SAAeC,GAEd5C,KAAK6kE,KAAOjiE,CAEZ5C,MAAK8kE,wBxG08iBC/jE,WAAY,KACZC,aAAc,MwGr8iBrBL,QAAAC,eAAWgpE,EAAArpE,UAAA,exG28iBJM,IwG38iBP,WAEC,MAAOb,MAAK8pE,cxG48iBNnnE,IwGz8iBP,SAAuBC,GAEtB5C,KAAK8pE,aAAelnE,CAEpB5C,MAAK8kE,wBxGy8iBC/jE,WAAY,KACZC,aAAc,MwGp8iBrBL,QAAAC,eAAWgpE,EAAArpE,UAAA,SxG08iBJM,IwG18iBP,WAEC,MAAOb,MAAKmS,QxG28iBNxP,IwGx8iBP,SAAiBC,GAEhB5C,KAAKmS,OAASvP,CAEd5C,MAAK8kE,wBxGw8iBC/jE,WAAY,KACZC,aAAc,MwGn8iBrBL,QAAAC,eAAWgpE,EAAArpE,UAAA,UxGy8iBJM,IwGz8iBP,WAEC,MAAOb,MAAKuQ,SxG08iBN5N,IwGv8iBP,SAAkBC,GAEjB5C,KAAKuQ,QAAU3N,CAEf5C,MAAK8kE,wBxGu8iBC/jE,WAAY,KACZC,aAAc,MwGl8iBd4oE,GAAArpE,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAIzF,GAAUC,CACd,IAAI+8D,EACJ,IAAI8J,EACJ,IAAIC,GAAYhqE,KAAK2kE,WAAa,CAElC,IAAImC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAIt0C,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAEjE,IAAItT,IAAsBzE,KAAK4kE,WAAa,GAAGoF,CAC/C,IAAIpmE,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAIzxB,KAAK8pE,aACRrlE,GAAe,CAEhBw7D,GAAajgE,KAAK4kE,WAAW5kE,KAAK2kE,WAAW,CAE7C,IAAI3kE,KAAK8pE,aACR7J,GAAc,CAEf,IAAIsF,EAAiB78D,SAAW,MAAQu3D,GAAcsF,EAAiB78D,QAAQnJ,OAAQ,CACtFmJ,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,iBAClD,CACNn3D,EAAU,GAAIua,aAAYg9C,EAE1BjgE,MAAK+kE,kBAGN,GAAItgE,GAAe8gE,EAAiB9gE,YAAa,CAChDb,EAAY2hE,EAAiB3hE,UAAU/C,IAAI4D,EAC3C+sB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAI4D,EACvCgtB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAI4D,OACnC,CACNb,EAAY,GAAIif,cAAape,EAAY,EACzC+sB,GAAU,GAAI3O,cAAape,EAAY,EACvCgtB,GAAW,GAAI5O,cAAape,EAAY,EAExCzE,MAAK+kE,kBAGNgC,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMlqE,KAAK4kE,aAAcsF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAMjqE,KAAK2kE,aAAcsF,EAAI,CACzChnE,GAAKgnE,EAAGjqE,KAAK2kE,WAAa,IAAI3kE,KAAKmS,MACnCjP,IAAKgnE,EAAGlqE,KAAK4kE,WAAa,IAAI5kE,KAAKuQ,OAEnC3M,GAAUkjE,GAAQ7jE,CAClB,IAAIjD,KAAK6kE,KAAM,CACdjhE,EAAUkjE,EAAO,GAAK,CACtBljE,GAAUkjE,EAAO,GAAK5jE,MAChB,CACNU,EAAUkjE,EAAO,GAAK5jE,CACtBU,GAAUkjE,EAAO,GAAK,EAGvBt1C,EAAQs1C,GAAQ,CAEhB,IAAI9mE,KAAK6kE,KAAM,CACdrzC,EAAQs1C,EAAO,GAAK,CACpBt1C,GAAQs1C,EAAO,GAAK,MACd,CACNt1C,EAAQs1C,EAAO,GAAK,CACpBt1C,GAAQs1C,EAAO,IAAM,EAGtBr1C,EAASq1C,GAAQ,CACjBr1C,GAASq1C,EAAO,GAAK,CACrBr1C,GAASq1C,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAI9mE,KAAK8pE,aAAc,CAEtB,IAAK,GAAI9qE,GAAW8nE,EAAM9nE,EAAI8nE,EAAO,IAAK9nE,EAAG,CAC5C4E,EAAU5E,GAAK4E,EAAU5E,EAAI,EAC7BwyB,GAAQxyB,IAAMwyB,EAAQxyB,EAAI,EAC1ByyB,GAASzyB,IAAMyyB,EAASzyB,EAAI,GAG7B8nE,GAAQ,EAIT,GAAImD,GAAMjqE,KAAK2kE,YAAcuF,GAAMlqE,KAAK4kE,WAAY,CAEnDmF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAcnqE,KAAK8pE,aAAc,EAAI,CAEzCphE,GAAQq+D,KAAUgD,EAAKI,CACvBzhE,GAAQq+D,MAAWgD,EAAOC,GAAIG,CAC9BzhE,GAAQq+D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCzhE,GAAQq+D,KAAUgD,EAAKI,CACvBzhE,GAAQq+D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCzhE,GAAQq+D,MAAWgD,EAAO,GAAGI,CAE7B,IAAInqE,KAAK8pE,aAAc,CAEtBphE,EAAQq+D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCzhE,GAAQq+D,MAAWgD,EAAOC,GAAIG,EAAO,CACrCzhE,GAAQq+D,KAAUgD,EAAKI,EAAO,CAC9BzhE,GAAQq+D,MAAWgD,EAAO,GAAGI,EAAO,CACpCzhE,GAAQq+D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCzhE,GAAQq+D,KAAUgD,EAAKI,EAAO,KAOlC5E,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAI0xC,GAAiDvvD,CAErD,IAAIwvD,GAAsBvnE,KAAK4kE,WAAa,EAAKoF,CACjD,IAAIpmE,EACJ,IAAIuf,EAEJ,IAAI6jD,GAAYhnE,KAAKmS,OAAO,CAC5B,IAAI80D,GAAYjnE,KAAKuQ,QAAQ,CAE7B3M,GAAY,GAAIif,cAAa0kD,EAAY,EACzCpkD,GAAY,GAAIN,cAAa0kD,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAMlqE,KAAK4kE,aAAcsF,EAAI,CACzCtmE,EAAUkjE,MAAWE,CACrBpjE,GAAUkjE,KAAU,CACpBljE,GAAUkjE,KAAUoD,EAAGlqE,KAAKuQ,QAAU02D,CAEtCrjE,GAAUkjE,KAAUE,CACpBpjE,GAAUkjE,KAAU,CACpBljE,GAAUkjE,KAAUoD,EAAGlqE,KAAKuQ,QAAU02D,CAEtC9jD,GAAU4jD,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAMjqE,KAAK2kE,aAAcsF,EAAI,CACzCrmE,EAAUkjE,KAAUmD,EAAGjqE,KAAKmS,OAAS60D,CACrCpjE,GAAUkjE,KAAU,CACpBljE,GAAUkjE,MAAWG,CAErBrjE,GAAUkjE,KAAUmD,EAAGjqE,KAAKmS,OAAS60D,CACrCpjE,GAAUkjE,KAAU,CACpBljE,GAAUkjE,KAAUG,CAEpB9jD,GAAU4jD,KAAU,EAIrBO,EAAaz/D,aAAajE,EAC1B0jE,GAAapkD,aAAaC,IAOrBymD,GAAArpE,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,GAAIhtB,EACJ,IAAInE,EAEJ,IAAImxB,GAAgB,sBAAuB,CAE1CnxB,GAAgBzE,KAAK4kE,WAAa,IAAM5kE,KAAK2kE,WAAa,EAE1D,IAAI3kE,KAAK8pE,aACRrlE,GAAe,CAEhB,IAAI8gE,GAA6DxtD,CAEjE,IAAIwtD,EAAiB38D,KAAOnE,GAAe8gE,EAAiB9gE,YAAa,CACxEmE,EAAM28D,EAAiB38D,IAAI/H,IAAI4D,OACzB,CACNmE,EAAM,GAAIia,cAAape,EAAY,EACnCzE,MAAK8kE,uBAGN,GAAI3+D,GAAe,CAEnB,KAAK,GAAI+jE,GAAY,EAAGA,GAAMlqE,KAAK4kE,aAAcsF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAMjqE,KAAK2kE,aAAcsF,EAAI,CACpDrhE,EAAIzC,GAAU8jE,EAAGjqE,KAAK2kE,WAAY3kE,KAAKmC,OACvCyG,GAAIzC,EAAQ,IAAM,EAAI+jE,EAAGlqE,KAAK4kE,YAAY5kE,KAAKoC,OAC/C+D,IAAS,CAET,IAAInG,KAAK8pE,aAAc,CACtBlhE,EAAIzC,GAAU8jE,EAAGjqE,KAAK2kE,WAAY3kE,KAAKmC,OACvCyG,GAAIzC,EAAM,IAAM,EAAI+jE,EAAGlqE,KAAK4kE,YAAY5kE,KAAKoC,OAC7C+D,IAAS,IAKZo/D,EAAiB1iE,OAAO+F,OAGlB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAAg0C,IAtWmCtF,EAwWL7kE,GAAAJ,QAArBuqE,IxGi5iBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAAS7rE,EAAQkB,EAAOJ,GACpL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyGtwjBtB,IAAO4lE,GAAuB1nE,EAAW,qDzG4wjBzC,IyGvwjBM8rE,GAAsB,SAAA3pE,GAASX,EAA/BsqE,EAAsB3pE,EAiD3B,SAjDK2pE,GAiDO7zC,EAAqB8zC,EAAmB5F,GAAxC,GAAAluC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA8zC,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA5F,QAAA,GAAkB,CAAlBA,EAAA,KAEnDhkE,EAAApB,KAAAU,KAAMw2B,EAAQ,EAAG,EAAG8zC,EAAO,EAAG,KAAM,MAAO,MAAO5F,GA7CnD/jE,OAAAC,eAAWypE,EAAA9pE,UAAA,UzGmxjBJM,IyGnxjBP,WAEC,MAAOb,MAAKomE,gBzGoxjBNzjE,IyGjxjBP,SAAkBC,GAEjB5C,KAAKomE,eAAiBxjE,CACtB5C,MAAK8kE,wBzGkxjBC/jE,WAAY,KACZC,aAAc,MyG7wjBrBL,QAAAC,eAAWypE,EAAA9pE,UAAA,SzGmxjBJM,IyGnxjBP,WAEC,MAAOb,MAAKwoE,azGoxjBN7lE,IyGjxjBP,SAAiBC,GAEhB5C,KAAK6oE,aAAajmE,IzGkxjBZ7B,WAAY,KACZC,aAAc,MyG7wjBrBL,QAAAC,eAAWypE,EAAA9pE,UAAA,gBzGmxjBJM,IyGnxjBP,WAEC,MAAOb,MAAKyoE,azGoxjBN9lE,IyGjxjBP,SAAwBC,GAEvB5C,KAAK8oE,aAAalmE,IzGkxjBZ7B,WAAY,KACZC,aAAc,MyGtwjBtB,OAAAqpE,IArDqCpE,EAuDrCxmE,GAAgCJ,QAAvBgrE,IzG0wjBNhE,qDAAqD,uDAAuDN,kDAAkD,SAASxnE,EAAQkB,EAAOJ,GACzL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0G70jBtB,IAAOkqE,GAAgBhsE,EAAa,8CACpC,IAAOyM,GAAmBzM,EAAY,6CAGtC,IAAO+gB,GAAQ/gB,EAAe,mCAE9B,IAAOoxB,GAAmBpxB,EAAY,8CACtC,IAAOqkB,GAAerkB,EAAa,0CACnC,IAAO42C,GAAI52C,EAAgB,mCAE3B,IAAO2lE,GAAU3lE,EAAc,wC1G+0jB/B,I0G10jBM+lE,GAAmB,SAAA5jE,GAASX,EAA5BukE,EAAmB5jE,EA0GxB,SA1GK4jE,GA0GOh7D,EAA8BssB,GAA9B,GAAAtsB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAssB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzCl1B,EAAApB,KAAAU,KAxGMA,MAAAwqE,WAAqB,IACrBxqE,MAAAyqE,SAAmB,IACnBzqE,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAMhBpC,MAAA0qE,mBAA6B,IAiGpC1qE,MAAKg2C,UAAY,GAAI12B,EACrBtf,MAAKimB,UAAY3c,CACjBtJ,MAAK2qE,cAAgB/0C,EA7FtBj1B,OAAAC,eAAW0jE,EAAA/jE,UAAA,a1G+0jBJM,I0G/0jBP,WAEC,MAAOyjE,GAAoBpjE,W1Gg1jBrBH,WAAY,KACZC,aAAc,M0G30jBrBL,QAAAC,eAAW0jE,EAAA/jE,UAAA,gB1Gi1jBJM,I0Gj1jBP,WAEC,MAAOb,MAAK2qE,e1Gk1jBNhoE,I0G/0jBP,SAAwBC,GAEvB,GAAI5C,KAAK2qE,eAAiB/nE,EACzB,MAED5C,MAAK2qE,cAAgB/nE,CAErB5C,MAAK4qE,0B1G80jBC7pE,WAAY,KACZC,aAAc,M0G50jBrBL,QAAAC,eAAW0jE,EAAA/jE,UAAA,Y1G+0jBJM,I0G/0jBP,WAECb,KAAKkV,YAEL,OAAOlV,MAAKg2C,W1G+0jBNj1C,WAAY,KACZC,aAAc,M0G10jBrBL,QAAAC,eAAW0jE,EAAA/jE,UAAA,Y1Gg1jBJM,I0Gh1jBP,WAEC,MAAOb,MAAKimB,W1Gi1jBNtjB,I0G90jBP,SAAoBC,GAEnB,GAAIA,GAAS5C,KAAKimB,UACjB,MAEDjmB,MAAKimB,UAAYrjB,CAEjB,IAAI+M,GAAa3P,KAAKmkE,UAAU5kE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IACvBgB,KAAKmkE,UAAUnlE,GAAIsK,SAAWtJ,KAAKimB,W1G60jBtCllB,WAAY,KACZC,aAAc,M0G30jBrBL,QAAAC,eAAW0jE,EAAA/jE,UAAA,U1G80jBJM,I0G90jBP,WAEC,MAAOb,MAAKmC,S1G+0jBNQ,I0G50jBP,SAAkBC,GAEjB,GAAI5C,KAAKmC,QAAUS,EAClB,MAED5C,MAAKmC,QAAUS,CAEf5C,MAAK+kE,mB1G20jBChkE,WAAY,KACZC,aAAc,M0Gx0jBrBL,QAAAC,eAAW0jE,EAAA/jE,UAAA,U1G20jBJM,I0G30jBP,WAEC,MAAOb,MAAKoC,S1G40jBNO,I0Gz0jBP,SAAkBC,GAEjB,GAAI5C,KAAKoC,QAAUQ,EAClB,MAED5C,MAAKoC,QAAUQ,CAEf5C,MAAK+kE,mB1Gw0jBChkE,WAAY,KACZC,aAAc,M0GnzjBdsjE,GAAA/jE,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,KAAM,IAAI5qB,GAOJs5D,GAAA/jE,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,KAAM,IAAI5qB,GAMJs5D,GAAA/jE,UAAAqqE,uBAAP,WAEC5qE,KAAK0qE,mBAAqB,IAC1B1qE,MAAKwqE,WAAa,IAClBxqE,MAAKyqE,SAAW,KAMVnG,GAAA/jE,UAAAukE,qBAAP,WAEC9kE,KAAKwqE,WAAa,KAMZlG,GAAA/jE,UAAAwkE,gBAAP,WAEC/kE,KAAKyqE,SAAW,KAMTnG,GAAA/jE,UAAAsqE,mBAAR,WAGC,GAAI7qE,KAAKoK,aACRpK,KAAKg2C,UAAUp2B,kBAAkB5f,KAAKoK,aAEvC,IAAIpK,KAAK2qE,eAAiB,sBAAuB,CAChD,GAAIpF,GAAuC,GAAI51C,GAAoB,GAAI46C,GACvEhF,GAAiBj0C,kBAAoB,KACrCi0C,GAAiBh0C,mBAAqB,KACtCg0C,GAAiB98D,cAAgB,KACjCzI,MAAKg2C,UAAUx2B,eAAe+lD,EAC9BvlE,MAAKoK,aAAem7D,MACd,IAAIvlE,KAAK2qE,eAAiB,kBAAmB,CACnD3qE,KAAKg2C,UAAUx2B,eAAexf,KAAKoK,aAAe,GAAIwY,GAAgB,GAAI2nD,KAG3EvqE,KAAK0qE,mBAAqB,MAOnBpG,GAAA/jE,UAAAuqE,eAAR,WAEC9qE,KAAKglE,gBAAgBhlE,KAAKoK,aAAcpK,KAAK2qE,cAE7C3qE,MAAKwqE,WAAa,MAMXlG,GAAA/jE,UAAAwqE,UAAR,WAEC/qE,KAAK8lE,WAAW9lE,KAAKoK,aAAcpK,KAAK2qE,cAExC3qE,MAAKyqE,SAAW,MAGVnG,GAAA/jE,UAAA2U,WAAP,WAEC,GAAIlV,KAAK0qE,mBACR1qE,KAAK6qE,oBAEN,IAAI7qE,KAAKwqE,WACRxqE,KAAK8qE,gBAEN,IAAI9qE,KAAKyqE,SACRzqE,KAAK+qE,YAIAzG,GAAA/jE,UAAA6jE,eAAP,WAEC,GAAI4G,GAAY,GAAI71B,GAAKn1C,KAAKg2C,UAAWh2C,KAAKimB,UAC9C+kD,GAAK/1D,eAAiBjV,IAEtB,OAAOgrE,GA3NM1G,GAAApjE,UAAmB,yBAsOlC;MAAAojE,IAxOkCJ,EA0OLzkE,GAAAJ,QAApBilE,I1GwxjBN2G,8CAA8C7pE,UAAUid,6CAA6Cjd,UAAUge,mCAAmC,mCAAmCoD,0CAA0C,0CAA0CkN,8CAA8C,8CAA8CulB,mCAAmC,mCAAmCgvB,wCAAwC,0CAA0CrtC,oDAAoD,SAASr4B,EAAQkB,EAAOJ,GAC5kB,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2GjhkBtB,IAAOikE,GAAmB/lE,EAAY,iD3GuhkBtC,I2GlhkBM23B,GAAqB,SAAAx1B,GAASX,EAA9Bm2B,EAAqBx1B,EA6E1B,SA7EKw1B,GA6EOM,EAAoBguC,EAAuBC,EAAuBC,GAAlE,GAAAluC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAguC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7EhkE,EAAApB,KAAAU,KAEAA,MAAKo2B,QAAUI,CACfx2B,MAAK2kE,WAAaH,CAClBxkE,MAAK4kE,WAAaH,CAClBzkE,MAAK6kE,KAAOH,EA1Eb/jE,OAAAC,eAAWs1B,EAAA31B,UAAA,U3GiikBJM,I2GjikBP,WAEC,MAAOb,MAAKo2B,S3GkikBNzzB,I2G/hkBP,SAAkBC,GAEjB5C,KAAKo2B,QAAUxzB,CAEf5C,MAAK8kE,wB3G+hkBC/jE,WAAY,KACZC,aAAc,M2G1hkBrBL,QAAAC,eAAWs1B,EAAA31B,UAAA,a3GgikBJM,I2GhikBP,WAEC,MAAOb,MAAK2kE,Y3GiikBNhiE,I2G9hkBP,SAAqBC,GAEpB5C,KAAK2kE,WAAa/hE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mB3G8hkBChkE,WAAY,KACZC,aAAc,M2GzhkBrBL,QAAAC,eAAWs1B,EAAA31B,UAAA,a3G+hkBJM,I2G/hkBP,WAEC,MAAOb,MAAK4kE,Y3GgikBNjiE,I2G7hkBP,SAAqBC,GAEpB5C,KAAK4kE,WAAahiE,CAElB5C,MAAK8kE,sBACL9kE,MAAK+kE,mB3G6hkBChkE,WAAY,KACZC,aAAc,M2GxhkBrBL,QAAAC,eAAWs1B,EAAA31B,UAAA,O3G8hkBJM,I2G9hkBP,WAEC,MAAOb,MAAK6kE,M3G+hkBNliE,I2G5hkBP,SAAeC,GAEd5C,KAAK6kE,KAAOjiE,CAEZ5C,MAAK8kE,wB3G4hkBC/jE,WAAY,KACZC,aAAc,M2GrgkBdk1B,GAAA31B,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAI9E,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAIzyB,EACJ,IAAIkH,EACJ,IAAI4gE,GAAaC,CAEjB,IAAI5B,EACJ,IAAIC,EACJ,IAAI3gE,EAGJ,IAAImxB,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAEjEtT,IAAezE,KAAK4kE,WAAa,IAAI5kE,KAAK2kE,WAAa,EAEvD,IAAIlgE,GAAe8gE,EAAiB9gE,aAAe8gE,EAAiB78D,SAAW,KAAM,CACpFA,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,YACxDj8D,GAAY2hE,EAAiB3hE,UAAU/C,IAAI4D,EAC3C+sB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAI4D,EACvCgtB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAI4D,OACnC,CACNiE,EAAU,GAAIua,cAAajjB,KAAK4kE,WAAa,GAAG5kE,KAAK2kE,WAAW,EAChE/gE,GAAY,GAAIif,cAAape,EAAY,EACzC+sB,GAAU,GAAI3O,cAAape,EAAY,EACvCgtB,GAAW,GAAI5O,cAAape,EAAY,EAExCzE,MAAK+kE,kBAGN+B,EAAO,CACPC,GAAO,CAEP,IAAI7B,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKp/D,EAAI,EAAGA,GAAKlG,KAAK4kE,aAAc1+D,EAAG,CAEtCg/D,EAAa4B,CAEb,IAAItB,GAAkBpiE,KAAKqiE,GAAGv/D,EAAElG,KAAK4kE,UACrC,IAAIr+D,IAAYvG,KAAKo2B,QAAQhzB,KAAK+iC,IAAIq/B,EACtC,IAAIE,GAAoB1lE,KAAKo2B,QAAQhzB,KAAK8iC,IAAIs/B,EAE9C,KAAKxmE,EAAI,EAAGA,GAAKgB,KAAK2kE,aAAc3lE,EAAG,CACtC,GAAI2mE,GAAkB,EAAEviE,KAAKqiE,GAAGzmE,EAAEgB,KAAK2kE,UACvC,IAAI1hE,GAAWyiE,EAAWtiE,KAAK+iC,IAAIw/B,EACnC,IAAIziE,GAAWwiE,EAAWtiE,KAAK8iC,IAAIy/B,EACnC,IAAIC,GAAiB,EAAExiE,KAAKoB,KAAKvB,EAAEA,EAAIC,EAAEA,EAAIqD,EAAEA,EAC/C,IAAIs/D,GAAgBziE,KAAKoB,KAAKtB,EAAEA,EAAID,EAAEA,EAEtC,IAAIjD,KAAK6kE,KAAM,CAEdQ,EAAK,CACLC,GAAKO,EAAS,KAAM5iE,EAAE4iE,EAAS,CAC/BV,IAAS5+D,CACT6+D,GAAQliE,MAEF,CACNmiE,EAAKQ,EAAS,KAAM5iE,EAAE4iE,EAAS,CAC/BP,GAAK,CACLH,GAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,GAAKgB,KAAK2kE,WAAY,CACzB/gE,EAAUkjE,GAAQljE,EAAUshE,EAC5BthE,GAAUkjE,EAAK,GAAKljE,EAAUshE,EAAa,EAC3CthE,GAAUkjE,EAAK,GAAKljE,EAAUshE,EAAa,EAC3C1zC,GAAQs1C,GAAQt1C,EAAQ0zC,GAAejiE,EAAE2iE,EAAS,EAClDp0C,GAAQs1C,EAAK,GAAKt1C,EAAQ0zC,EAAa,GAAOC,EAAMS,EAAS,EAC7Dp0C,GAAQs1C,EAAK,GAAKt1C,EAAQ0zC,EAAa,GAAME,EAAMQ,EAAS,EAC5Dn0C,GAASq1C,GAAQjB,EAAS,MAAO3iE,EAAE2iE,EAAS,CAC5Cp0C,GAASq1C,EAAK,GAAKzB,CACnB5zC,GAASq1C,EAAK,GAAKxB,MAEb,CAEN1hE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAK,GAAK3B,CACpBvhE,GAAUkjE,EAAK,GAAK1B,CACpB5zC,GAAQs1C,GAAQ7jE,EAAE2iE,CAClBp0C,GAAQs1C,EAAK,GAAK3B,EAAMS,CACxBp0C,GAAQs1C,EAAK,GAAK1B,EAAMQ,CACxBn0C,GAASq1C,GAAQjB,EAAS,MAAO3iE,EAAE2iE,EAAS,CAC5Cp0C,GAASq1C,EAAK,GAAKzB,CACnB5zC,GAASq1C,EAAK,GAAKxB,EAGpB,GAAItmE,EAAI,GAAKkH,EAAI,EAAG,CAEnB,GAAInH,IAAYiB,KAAK2kE,WAAa,GAAGz+D,EAAIlH,CACzC,IAAIkB,IAAYF,KAAK2kE,WAAa,GAAGz+D,EAAIlH,EAAI,CAC7C,IAAIq0B,IAAYrzB,KAAK2kE,WAAa,IAAIz+D,EAAI,GAAKlH,EAAI,CACnD,IAAIiB,IAAYD,KAAK2kE,WAAa,IAAIz+D,EAAI,GAAKlH,CAE/C,IAAIkH,GAAKlG,KAAK4kE,WAAY,CAEzBhhE,EAAUkjE,GAAQljE,EAAUshE,EAC5BthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7CthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAE7Cx8D,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU1zC,CAClB3qB,GAAQq+D,KAAU9mE,MAEZ,IAAIiG,GAAK,EAAG,CAElBwC,EAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU7mE,CAClBwI,GAAQq+D,KAAU1zC,MAEZ,CACN3qB,EAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU7mE,CAClBwI,GAAQq+D,KAAU1zC,CAClB3qB,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU1zC,CAClB3qB,GAAQq+D,KAAU9mE,GAIpB6mE,GAAQ,GAIVvB,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAE7C,GAAI0xC,GAAiDvvD,CAErD,IAAIwvD,GAAqBvnE,KAAK4kE,WAAW5kE,KAAK2kE,WAAW,EAAI3kE,KAAK2kE,UAClE,IAAI/gE,GAAyB,GAAIif,cAAa0kD,EAAY,EAC1D,IAAIpkD,GAAyB,GAAIN,cAAa0kD,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAK7gE,EAAI,EAAGA,GAAKlG,KAAK4kE,aAAc1+D,EAAG,CAEtC,GAAIs/D,GAAkBpiE,KAAKqiE,GAAGv/D,EAAElG,KAAK4kE,UACrC,IAAIr+D,IAAYvG,KAAKo2B,QAAQhzB,KAAK+iC,IAAIq/B,EACtC,IAAIE,GAAoB1lE,KAAKo2B,QAAQhzB,KAAK8iC,IAAIs/B,EAE9C,KAAKxmE,EAAI,EAAGA,GAAKgB,KAAK2kE,aAAc3lE,EAAG,CACtC,GAAI2mE,GAAkB,EAAEviE,KAAKqiE,GAAGzmE,EAAEgB,KAAK2kE,UACvC,IAAI1hE,GAAWyiE,EAAWtiE,KAAK+iC,IAAIw/B,EACnC,IAAIziE,GAAWwiE,EAAWtiE,KAAK8iC,IAAIy/B,EAEnC,IAAI3lE,KAAK6kE,KAAM,CACdM,GAAS5+D,CACT6+D,GAAQliE,MAEF,CACNiiE,EAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,EAAI,EAAG,CAEV4E,EAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,CAEpBjiD,GAAU4jD,KAAU,CAGpB,IAAI7gE,EAAI,EAAG,CACV,GAAIwjE,GAAexjE,GAAK,EAAI,GAAK,GAAGlG,KAAK2kE,WAAW3lE,GAAK,GAAGA,GAAK,EAAIgB,KAAK2kE,WAAW,EACrF/gE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EACrC9lE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EACrC9lE,GAAUkjE,GAAQljE,EAAUkjE,KAAS4C,EAErC9lE,GAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,CAEpBjiD,GAAU4jD,KAAU,GAMtB,GAAI/nE,EAAIgB,KAAK2kE,WAAY,CACxB/gE,EAAUkjE,KAAU7jE,CACpBW,GAAUkjE,KAAU3B,CACpBvhE,GAAUkjE,KAAU1B,IAMvBkC,EAAaz/D,aAAajE,EAC1B0jE,GAAapkD,aAAaC,IAOrB+S,GAAA31B,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAEzC,GAAI52B,GAAUkH,CACd,IAAIzB,IAAsBzE,KAAK4kE,WAAa,IAAI5kE,KAAK2kE,WAAa,EAClE,IAAI/7D,EAGJ,IAAIgtB,GAAgB,sBAAuB,CAE1CnxB,GAAezE,KAAK4kE,WAAa,IAAI5kE,KAAK2kE,WAAa,EAEvD,IAAIY,GAA6DxtD,CAEjE,IAAItT,GAAe8gE,EAAiB9gE,aAAe8gE,EAAiB38D,KAAO,KAAM,CAChFA,EAAM28D,EAAiB38D,IAAI/H,IAAI4D,OACzB,CACNmE,EAAM,GAAIia,cAAape,EAAY,GAGpC,GAAI0B,GAAe,CACnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAK4kE,aAAc1+D,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAK2kE,aAAc3lE,EAAG,CACtC4J,EAAIzC,KAAanH,EAAEgB,KAAK2kE,WAAa3kE,KAAKmC,OAC1CyG,GAAIzC,KAAaD,EAAElG,KAAK4kE,WAAa5kE,KAAKoC,SAI5CmjE,EAAiB1iE,OAAO+F,OAElB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAAM,IAhVoCouC,EAkVL7kE,GAAAJ,QAAtB62B,I3Gw9jBN6vC,iDAAiD,mDAAmDmF,mDAAmD,SAAS3sE,EAAQkB,EAAOJ,GAClL,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4GrzkBtB,IAAOikE,GAAmB/lE,EAAY,iD5G2zkBtC,I4GtzkBM4sE,GAAoB,SAAAzqE,GAASX,EAA7BorE,EAAoBzqE,EAyFzB,SAzFKyqE,GAyFO30C,EAAoB40C,EAAwBC,EAAuBC,EAAsB5G,GAAzF,GAAAluC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA40C,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA5G,QAAA,GAAkB,CAAlBA,EAAA,KAEpGhkE,EAAApB,KAAAU,KApFOA,MAAAgC,aAAsB,CAsF7BhC,MAAKo2B,QAAUI,CACfx2B,MAAKurE,YAAcH,CACnBprE,MAAKwrE,WAAaH,CAClBrrE,MAAKyrE,WAAaH,CAClBtrE,MAAK6kE,KAAOH,EArFb/jE,OAAAC,eAAWuqE,EAAA5qE,UAAA,U5Gs0kBJM,I4Gt0kBP,WAEC,MAAOb,MAAKo2B,S5Gu0kBNzzB,I4Gp0kBP,SAAkBC,GAEjB5C,KAAKo2B,QAAUxzB,CACf5C,MAAK8kE,wB5Gq0kBC/jE,WAAY,KACZC,aAAc,M4Gh0kBrBL,QAAAC,eAAWuqE,EAAA5qE,UAAA,c5Gs0kBJM,I4Gt0kBP,WAEC,MAAOb,MAAKurE,a5Gu0kBN5oE,I4Gp0kBP,SAAsBC,GAErB5C,KAAKurE,YAAc3oE,CACnB5C,MAAK8kE,wB5Gq0kBC/jE,WAAY,KACZC,aAAc,M4Gh0kBrBL,QAAAC,eAAWuqE,EAAA5qE,UAAA,a5Gs0kBJM,I4Gt0kBP,WAEC,MAAOb,MAAKwrE,Y5Gu0kBN7oE,I4Gp0kBP,SAAqBC,GAEpB5C,KAAKwrE,WAAa5oE,CAClB5C,MAAK8kE,sBACL9kE,MAAK+kE,mB5Gq0kBChkE,WAAY,KACZC,aAAc,M4Gh0kBrBL,QAAAC,eAAWuqE,EAAA5qE,UAAA,a5Gs0kBJM,I4Gt0kBP,WAEC,MAAOb,MAAKyrE,Y5Gu0kBN9oE,I4Gp0kBP,SAAqBC,GAEpB5C,KAAKyrE,WAAa7oE,CAClB5C,MAAK8kE,sBACL9kE,MAAK+kE,mB5Gq0kBChkE,WAAY,KACZC,aAAc,M4Gh0kBrBL,QAAAC,eAAWuqE,EAAA5qE,UAAA,O5Gs0kBJM,I4Gt0kBP,WAEC,MAAOb,MAAK6kE,M5Gu0kBNliE,I4Gp0kBP,SAAeC,GAEd5C,KAAK6kE,KAAOjiE,CACZ5C,MAAK8kE,wB5Gq0kBC/jE,WAAY,KACZC,aAAc,M4G5ykBdmqE,GAAA5qE,UAAAykE,gBAAP,SAAuBjtD,EAAwB6d,GAE9C,GAAIltB,EACJ,IAAI9E,EACJ,IAAI4tB,EACJ,IAAIC,EAEJ,IAAIzyB,GAAUkH,CACd,IAAIjD,GAAUC,EAAUqD,EAAUM,EAAWC,EAAW23D,EAAWiN,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAI9G,GAAoB,CAExB,IAAIrqC,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE/X,MAAKgC,cAAgBhC,KAAKyrE,WAAa,IAAIzrE,KAAKwrE,WAAa,EAC7DvL,GAAajgE,KAAKyrE,WAAWzrE,KAAKwrE,WAAW,CAG7C,IAAIxrE,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CACtDiE,EAAU68D,EAAiB78D,QAAQ7H,IAAI0kE,EAAiB1F,YACxDj8D,GAAY2hE,EAAiB3hE,UAAU/C,IAAIb,KAAKgC,aAChDwvB,GAAU+zC,EAAiB/zC,QAAQ3wB,IAAIb,KAAKgC,aAC5CyvB,GAAW8zC,EAAiB9zC,SAAS5wB,IAAIb,KAAKgC,kBACxC,CACN0G,EAAU,GAAIua,aAAYg9C,EAC1Br8D,GAAY,GAAIif,cAAa7iB,KAAKgC,aAAa,EAC/CwvB,GAAU,GAAI3O,cAAa7iB,KAAKgC,aAAa,EAC7CyvB,GAAW,GAAI5O,cAAa7iB,KAAKgC,aAAa,EAE9ChC,MAAK+kE,kBAIN+B,EAAO,CACPC,GAAO,C5G2ykBE,I4GxykBL6E,GAA+B,EAAExoE,KAAKqiE,GAAGzlE,KAAKwrE,UAClD,IAAIK,GAA+B,EAAEzoE,KAAKqiE,GAAGzlE,KAAKyrE,UAElD,IAAItG,GAAcC,CAClB,IAAIC,GAAWC,EAAWwG,EAAWC,CACrC,IAAI7G,GAAoB,CACxB,IAAIiE,GAAyB,C5GyykBpB,I4GtykBLpqE,GAAUmB,EAAUmzB,EAAUpzB,EAAUV,CAE5C,KAAK2G,EAAI,EAAGA,GAAKlG,KAAKyrE,aAAcvlE,EAAG,CAEtCg/D,EAAaiE,EAAgB,CAE7B,KAAKnqE,EAAI,EAAGA,GAAKgB,KAAKwrE,aAAcxsE,EAAG,CAGtC0sE,EAAmB1sE,EAAE4sE,CACrBD,GAAmBzlE,EAAE2lE,CAErBtsE,GAAS6D,KAAK+iC,IAAIwlC,EAClB9kE,GAAKtH,EAAO6D,KAAK+iC,IAAIulC,EACrB5kE,GAAKvH,EAAO6D,KAAK8iC,IAAIwlC,EACrBjN,GAAKr7D,KAAK8iC,IAAIylC,EAEd1oE,GAAIjD,KAAKo2B,QAAQhzB,KAAK+iC,IAAIulC,GAAoB1rE,KAAKurE,YAAY1kE,CAC/D3D,GAAIlD,KAAKo2B,QAAQhzB,KAAK8iC,IAAIwlC,GAAoB1rE,KAAKurE,YAAYzkE,CAC/DP,GAAKL,GAAKlG,KAAKyrE,WAAa,EAAIzrE,KAAKurE,YAAY9M,CAEjD,IAAIz+D,KAAK6kE,KAAM,CAEdiH,GAAMrN,CACNsN,GAAKjlE,CACLu+D,GAAK,CACLC,GAAM/lE,EAAQsH,EAAGtH,EAAS0D,EAAEjD,KAAKo2B,OACjC+uC,IAAS5+D,CACT6+D,GAAQliE,MAEF,CACN4oE,EAAKhlE,CACLilE,GAAKtN,CACL4G,GAAM9lE,EAAQsH,EAAGtH,EAAS0D,EAAEjD,KAAKo2B,OACjCkvC,GAAK,CACLH,GAAQjiE,CACRkiE,GAAQ7+D,EAGT,GAAIvH,GAAKgB,KAAKwrE,WAAY,CACzB5nE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,EAC7CthE,GAAUkjE,EAAO,GAAKljE,EAAUshE,EAAa,OACvC,CACNthE,EAAUkjE,GAAQ7jE,CAClBW,GAAUkjE,EAAO,GAAK3B,CACtBvhE,GAAUkjE,EAAO,GAAK1B,EAGvB5zC,EAAQs1C,GAAQjgE,CAChB2qB,GAAQs1C,EAAO,GAAKgF,CACpBt6C,GAAQs1C,EAAO,GAAKiF,CACpBt6C,GAASq1C,KAAUvnE,EAAQuH,EAAGvH,EAAS2D,EAAElD,KAAKo2B,QAC9C3E,GAASq1C,EAAO,GAAKzB,CACrB5zC,GAASq1C,EAAO,GAAKxB,CAErBwB,IAAQ,CAGR,IAAI9nE,EAAI,GAAKkH,EAAI,EAAG,CACnBnH,EAAIoqE,CACJjpE,GAAIipE,EAAkB,CACtB91C,GAAInzB,EAAIF,KAAKwrE,WAAa,CAC1BvrE,GAAIlB,EAAIiB,KAAKwrE,WAAa,CAE1B9iE,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU7mE,CAClBwI,GAAQq+D,KAAU1zC,CAElB3qB,GAAQq+D,KAAUhoE,CAClB2J,GAAQq+D,KAAU1zC,CAClB3qB,GAAQq+D,KAAU9mE,EAGnBkpE,KAKF5D,EAAiB58D,WAAWD,EAE5B68D,GAAiB19D,aAAajE,EAC9B2hE,GAAiBl1C,WAAWmB,EAC5B+zC,GAAiBh1C,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,GAQxCu1C,GAAA5qE,UAAAulE,WAAP,SAAkB/tD,EAAwB6d,GAGzC,GAAI52B,GAAUkH,CACd,IAAI0C,EAGJ,IAAIgtB,GAAgB,sBAAuB,CAE1C,GAAI2vC,GAA6DxtD,CAGjE,IAAIwtD,EAAiB38D,KAAO5I,KAAKgC,cAAgBujE,EAAiB9gE,YAAa,CAC9EmE,EAAM28D,EAAiB38D,IAAI/H,IAAIb,KAAKgC,kBAC9B,CACN4G,EAAM,GAAIia,cAAa7iB,KAAKgC,aAAa,G5GkxkBjC,G4G9wkBLmE,GAAe,CAGnB,KAAKD,EAAI,EAAGA,GAAKlG,KAAKyrE,aAAcvlE,EAAG,CACtC,IAAKlH,EAAI,EAAGA,GAAKgB,KAAKwrE,aAAcxsE,EAAG,CAEtC4J,EAAIzC,KAAanH,EAAEgB,KAAKwrE,WAAaxrE,KAAKmC,OAC1CyG,GAAIzC,KAAaD,EAAElG,KAAKyrE,WAAazrE,KAAKoC,SAK5CmjE,EAAiB1iE,OAAO+F,OAElB,IAAIgtB,GAAgB,kBAAmB,GAIhD,OAAAu1C,IA5RmC7G,EA8RnC7kE,GAA8BJ,QAArB8rE,I5G4wkBNpF,iDAAiD,mDAAmDiG,yCAAyC,SAASztE,EAAQkB,EAAOJ,SAElK4sE,+CAA+C,SAAS1tE,EAAQkB,EAAOJ,GAI7E,G6GnjlBM6sE,GAAmB,WAAzB,QAAMA,MAEEA,EAAA3rE,UAAA4rE,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAK7K,KAAM,CACxB,MAAO6K,GAIRG,EAAOH,CACPE,GAAOF,EAAK7K,IAEZ,OAAO+K,EAAM,CACZA,EAAOA,EAAK/K,IACZ,IAAI+K,EAAM,CACTC,EAAOA,EAAKhL,IACZ+K,GAAOA,EAAK/K,MAId8K,EAAQE,EAAKhL,IACbgL,GAAKhL,KAAO,IAGZ6K,GAAOpsE,KAAKmsE,uBAAuBC,EACnCC,GAAQrsE,KAAKmsE,uBAAuBE,E7GgjlB9B,I6G7ilBFtoB,EACJ,IAAIyoB,EACJ,IAAIptE,EAEJ,KAAKgtE,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKK,OAASJ,EAAMI,OAAQ,CAC/BrtE,EAAIgtE,CACJA,GAAOA,EAAK7K,SACN,CACNniE,EAAIitE,CACJA,GAAQA,EAAM9K,KAGf,IAAKxd,EACJA,EAAS3kD,MACTotE,GAAKjL,KAAOniE,CAEbotE,GAAOptE,EAGR,GAAIgtE,EACHI,EAAKjL,KAAO6K,MAAW,IAAIC,EAC3BG,EAAKjL,KAAO8K,CAEb,OAAOtoB,GAGDmoB,GAAA3rE,UAAAmsE,sBAAP,SAA6BN,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAK7K,KAAM,CACxB,MAAO6K,GAIRG,EAAOH,CACPE,GAAOF,EAAK7K,IAEZ,OAAO+K,EAAM,CACZA,EAAOA,EAAK/K,IACZ,IAAI+K,EAAM,CACTC,EAAOA,EAAKhL,IACZ+K,GAAOA,EAAK/K,MAId8K,EAAQE,EAAKhL,IACbgL,GAAKhL,KAAO,IAGZ6K,GAAOpsE,KAAK0sE,sBAAsBN,EAClCC,GAAQrsE,KAAK0sE,sBAAsBL,E7GqilB7B,I6GlilBFtoB,EACJ,IAAIyoB,EACJ,IAAIptE,EACJ,IAAIutE,GAAa,CAEjB,KAAKP,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,C7GoilB7C,G6G/hlBLO,GAAaR,EAAKS,aACtB,IAAIC,GAAaT,EAAMQ,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYX,EAAKY,QACrB,IAAIC,GAAYZ,EAAMW,QAEtB,IAAID,GAAME,EAAI,CACb,GAAIb,EAAKK,OAASJ,EAAMI,OACvBE,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZvtE,EAAIgtE,CACJA,GAAOA,EAAK7K,SACN,CACNniE,EAAIitE,CACJA,GAAQA,EAAM9K,KAGf,IAAKxd,EAAQ,CACZA,EAAS3kD,CACTotE,GAAOptE,MACD,CACNotE,EAAKjL,KAAOniE,CACZotE,GAAOptE,GAIT,GAAIgtE,EACHI,EAAKjL,KAAO6K,MAAW,IAAIC,EAC3BG,EAAKjL,KAAO8K,CAEb,OAAOtoB,GAET,OAAAmoB,KAEAzsE,GAA6BJ,QAApB6sE,O7GmilBHgB,8CAA8C,SAAS3uE,EAAQkB,EAAOJ,GAI5E,G8GlslBM8tE,GAAkB,WAAxB,QAAMA,MAEEA,EAAA5sE,UAAA4rE,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDe,GAAA5sE,UAAAmsE,sBAAP,SAA6BN,GAE5B,MAAOA,GAET,OAAAe,KAEA1tE,GAA4BJ,QAAnB8tE,O9GkslBHC,yCAAyC,SAAS7uE,EAAQkB,EAAOJ,GAKvE,G+GttlBMguE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAA3/B,OAAgB,QAC/B,OAAA2/B,KAEA5tE,GAAuBJ,QAAdguE,O/GwtlBHE,gCAAgC,SAAShvE,EAAQkB,EAAOJ,GAC9D,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgHxvlBtB,IAAOG,GAASjC,EAAe,oCAG/B,IAAOivE,GAASjvE,EAAe,8ChHkwlB/B,IgHvvlBMkvE,GAAI,SAAA/sE,GAASX,EAAb0tE,EAAI/sE,EAgBT,SAhBK+sE,KAkBJ/sE,EAAApB,KAAAU,KAdOA,MAAA0tE,aAAgC,GAAIloE,OAoB5C7E,OAAAC,eAAW6sE,EAAAltE,UAAA,ahHkvlBJM,IgHlvlBP,WAEC,MAAO4sE,GAAKvsE,WhHmvlBNH,WAAY,KACZC,aAAc,MgH/ulBdysE,GAAAltE,UAAAU,QAAP,YAOOwsE,GAAAltE,UAAAotE,eAAP,SAAsBC,GAErB,GAAIj+D,GAAa3P,KAAK0tE,aAAanuE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,IAAO3Q,EAAG,CACpC,GAAGgB,KAAK0tE,aAAa1uE,GAAGsV,MAAMs5D,EAC7B,MAAO5tE,MAAK0tE,aAAa1uE,GAE3B,GAAI6uE,GAAuB,GAAIL,EAC/BK,GAAWv5D,KAAKs5D,CAChB5tE,MAAK0tE,aAAarnE,KAAKwnE,EACvB,OAAOA,GA/CMJ,GAAAvsE,UAAmB,cAkDlC,OAAAusE,IApDmBjtE,EAsDnBf,GAAcJ,QAALouE,IhHkvlBNtsE,oCAAoCC,UAAU0sE,8CAA8C,gDAAgDC,uCAAuC,SAASxvE,EAAQkB,EAAOJ,GAI9M,GiHvzlBM2uE,GAAW,WAAjB,QAAMA,MASSA,EAAAhlC,KAAc,MAUdglC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEAvuE,GAAqBJ,QAAZ2uE,OjHwzlBHG,8CAA8C,SAAS5vE,EAAQkB,EAAOJ,GA2B5E,GkHt1lBM+uE,GAAkB,WAuBvB,QAvBKA,GAuBOxuB,GAPL5/C,KAAA8/C,iBAA+B,GAAIt6C,MAInCxF,MAAA+/C,cAA4B,GAAIv6C,MAKtCxF,MAAKggD,WAAW,CAChBhgD,MAAK4/C,QAAUA,CACf,IAAI5/C,KAAK4/C,SAAW,KAAM,CACzB,GAAIS,GAA0BrgD,KAAK4/C,QAAQh8C,UAAU/C,IAAIb,KAAK4/C,QAAQn7C,YACtE,KAAK,GAAI+C,GAAW,EAAGA,EAAI64C,EAAW9gD,OAAO,EAAGiI,IAAK,CACpD,GAAG64C,EAAW74C,EAAE,GAAGxH,KAAKggD,WACvBhgD,KAAKggD,WAAWK,EAAW74C,EAAE,KAKlC,MAAA4mE,KAEA3uE,GAA4BJ,QAAnB+uE,OlHw0lBHN,+CAA+C,SAASvvE,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmHl5lBtB,IAAOG,GAASjC,EAAe,oCAM/B,IAAO6vE,GAAkB7vE,EAAa,6CnHy5lBtC,ImH94lBM8vE,GAAmB,SAAA3tE,GAASX,EAA5BsuE,EAAmB3tE,EAiBxB,SAjBK2tE,KAmBJ3tE,EAAApB,KAAAU,KACAA,MAAKsuE,YAAc,GAAI9oE,MACvBxF,MAAKuuE,gBAAkB,GAAI5tE,QAMrB0tE,EAAA9tE,UAAAU,QAAP,YAKOotE,GAAA9tE,UAAAiuE,eAAP,WAEC,MAAOxuE,MAAKsuE,YAEND,GAAA9tE,UAAAu+C,iBAAP,WAEC,MAAO9+C,MAAKyuE,cAENJ,GAAA9tE,UAAAmuE,qBAAP,SAA4B9rE,GAE3B5C,KAAK2uE,kBAAkB/rE,EAEjByrE,GAAA9tE,UAAA2/C,qBAAP,WAEC,MAAOlgD,MAAK2uE,kBAENN,GAAA9tE,UAAAquE,iBAAP,SAAwBC,GAEvB7uE,KAAKyuE,cAAcI,EAKbR,GAAA9tE,UAAAk/C,oBAAP,SAA2BqvB,GAE1B,MAAO9uE,MAAKuuE,gBAAgBO,GAKtBT,GAAA9tE,UAAAwuE,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIb,GAAqCY,EACvFA,GAAO16D,KAAKw6D,CACZ9uE,MAAKsuE,YAAYjoE,KAAK4oE,EACtBjvE,MAAKuuE,gBAAgBO,GAAMG,EAG7B,OAAAZ,IAtEkC7tE,EAwElCf,GAA6BJ,QAApBgvE,InH63lBNltE,oCAAoCC,UAAU+sE,6CAA6C,+CAA+Ce,6CAA6C,SAAS3wE,EAAQkB,EAAOJ,GAKlN,GoHx9lBM8vE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAAnmC,KAAc,MAOdmmC,GAAAG,MAAe,OAC9B,OAAAH,KAEA1vE,GAA2BJ,QAAlB8vE,OpHw9lBHhsB,yCAAyC,SAAS5kD,EAAQkB,EAAOJ,GAOvE,GqH1/lBMm+C,GAAa,WAAnB,QAAMA,MAKSA,EAAA+xB,QAAiB,SAKjB/xB,GAAAgyB,MAAe,OAKfhyB,GAAAG,OAAgB,OAC/B,OAAAH,KAEuB/9C,GAAAJ,QAAdm+C,OrH2/lBHiyB,2CAA2C,SAASlxE,EAAQkB,EAAOJ,GAKzE,GsHphmBMqwE,GAAe,WAArB,QAAMA,KAME1vE,KAAAovE,OAAgB,QAMhBpvE,MAAA2vE,QAAiB,SAMjB3vE,MAAAqvE,KAAc,MAMdrvE,MAAAsvE,MAAe,QACvB,MAAAI,KAEyBjwE,GAAAJ,QAAhBqwE,OtHohmBHE,sCAAsC,SAASrxE,EAAQkB,EAAOJ,GACpE,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuHxjmBtB,IAAOG,GAASjC,EAAe,oCvHqlmB/B,IuHtjmBMsxE,GAAU,SAAAnvE,GAASX,EAAnB8vE,EAAUnvE,EA4Of,SA5OKmvE,GA4OOC,EAAiClxB,EAAkB3U,EAAiC8lC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyB/vB,EAAuBgwB,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAAlxB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAA3U,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAA8lC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAA/vB,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAgwB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3S7vE,EAAApB,KAAAU,KAjFMA,MAAAwwE,SAAiC,GAAIhrE,MAkF3CxF,MAAKywE,UAAYX,CACjB9vE,MAAK4+C,KAAOA,CACZ5+C,MAAK+vE,KAAOA,CACZ/vE,MAAKgwE,OAASA,CACdhwE,MAAKiwE,UAAYA,CACjBjwE,MAAKkwE,IAAMA,CACXlwE,MAAKmwE,YAAcA,CACnBnwE,MAAKogD,MAAQA,CACbpgD,MAAKowE,WAAaA,CAClBpwE,MAAKqwE,YAAcA,CACnBrwE,MAAKswE,OAASA,CACdtwE,MAAKuwE,QAAUA,EAMhB5vE,OAAAC,eAAWivE,EAAAtvE,UAAA,avHs4lBJM,IuHt4lBP,WAEC,MAAOgvE,GAAW3uE,WvHu4lBZH,WAAY,KACZC,aAAc,MuHxomBP6uE,GAAA3uE,UAAmB,oBAkQlC,OAAA2uE,IApQyBrvE,EAsQLf,GAAAJ,QAAXwwE,IvH24lBN1uE,oCAAoCC,YAAYsvE,+CAA+C,SAASnyE,EAAQkB,EAAOJ,GAM1H,GwHjrmBMsxE,GAAmB,WAAzB,QAAMA,MASSA,EAAAjjC,OAAgB,QAOhBijC,GAAAC,UAAmB,WAClC,OAAAD,KAEAlxE,GAA6BJ,QAApBsxE,OxHmrmBHE,2CAA2C,SAAStyE,EAAQkB,EAAOJ,GAOzE,GyH5smBMyxE,GAAe,WA4DpB,QA5DKA,GA4DO7tE,EAAgBmB,EAAoBC,EAAqB0sE,EAAqBC,EAAsBT,GAApG,GAAAttE,QAAA,GAAc,CAAdA,EAAA8oC,IAAgB,GAAA3nC,QAAA,GAAkB,CAAlBA,EAAA2nC,IAAoB,GAAA1nC,QAAA,GAAmB,CAAnBA,EAAA0nC,IAAqB,GAAAglC,QAAA,GAAmB,CAAnBA,EAAAhlC,IAAqB,GAAAilC,QAAA,GAAoB,CAApBA,EAAAjlC,IAAsB,GAAAwkC,QAAA,GAAoB,CAApBA,EAAAxkC,KAIjH,MAAA+kC,KAEArxE,GAAyBJ,QAAhByxE,OzHyqmBH7oB,+CAA+C,SAAS1pD,EAAQkB,EAAOJ,GAC7E,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0HtvmBrB,IAAO4wE,GAAS1yE,EAAc,iCAC/B,IAAO0uD,GAAO1uD,EAAe,+BAE7B,IAAOW,GAAKX,EAAe,+BAC3B,IAAO2yE,GAAU3yE,EAAc,mCAE/B,IAAO4uD,GAAW5uD,EAAc,0CAEhC,IAAMioD,GAAe,SAAA9lD,GAASX,EAAxBymD,EAAe9lD,EAyCpB,SAzCK8lD,GAyCO2qB,GAEXzwE,EAAApB,KAAAU,KAEA,IAAImxE,YAAkBlkB,GACrBjtD,KAAKqvD,UAAY,GAAI4hB,GAAUE,OAE/BnxE,MAAKqvD,UAAY8hB,EAtCnBxwE,OAAAC,eAAW4lD,EAAAjmD,UAAA,a1HyvmBJM,I0HzvmBP,WAEC,MAAO2lD,GAAgBtlD,W1H0vmBjBH,WAAY,KACZC,aAAc,M0HpvmBrBL,QAAAC,eAAW4lD,EAAAjmD,UAAA,a1H2vmBJM,I0H3vmBP,WAEC,MAAOb,MAAKoxE,Y1H4vmBNzuE,I0HzvmBP,SAAqBC,GAEpB,GAAI5C,KAAKoxE,YAAcxuE,EACtB,MAED,KAAKsuE,EAAWG,eAAezuE,EAAM+wD,SACpC,KAAM,IAAIz0D,GAAM,oFAEjBc,MAAKoxE,WAAaxuE,CAElB5C,MAAKsxE,SAAStxE,KAAKoxE,WAAW9hB,KAAKlrD,MAAOpE,KAAKoxE,WAAW9hB,KAAKjrD,OAE/DrE,MAAKuxE,qB1HsvmBCxwE,WAAY,KACZC,aAAc,M0HzxmBPwlD,GAAAtlD,UAAmB,2BAiDlC,OAAAslD,IAnD8B2G,EAqDL1tD,GAAAJ,QAAhBmnD,I1H6umBNgH,+BAA+BpsD,UAAUowE,iCAAiCpwE,UAAU24B,+BAA+B34B,UAAUqwE,mCAAmCrwE,UAAUssD,0CAA0C,4CAA4CxF,iDAAiD,SAAS3pD,EAAQkB,EAAOJ,GAC5U,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2H/ymBtB,IAAOqxE,GAAWnzE,EAAc,mCAChC,IAAOm3D,GAASn3D,EAAc,iCAE9B,IAAO4uD,GAAW5uD,EAAc,0CAGhC,IAAMkoD,GAAiB,SAAA/lD,GAASX,EAA1B0mD,EAAiB/lD,EAoCtB,SApCK+lD,GAoCO0qB,GAEXzwE,EAAApB,KAAAU,KAEA,IAAImxE,YAAkBzb,GACrB11D,KAAKs2D,YAAc,GAAIob,GAAYP,OAEnCnxE,MAAKs2D,YAAc6a,EAjCrBxwE,OAAAC,eAAW6lD,EAAAlmD,UAAA,a3HkzmBJM,I2HlzmBP,WAEC,MAAO4lD,GAAkBvlD,W3HmzmBnBH,WAAY,KACZC,aAAc,M2H7ymBrBL,QAAAC,eAAW6lD,EAAAlmD,UAAA,e3HozmBJM,I2HpzmBP,WAEC,MAAOb,MAAK2xE,c3HqzmBNhvE,I2HlzmBP,SAAuBC,GAEtB,GAAI5C,KAAK2xE,cAAgB/uE,EACxB,MAED5C,MAAK2xE,aAAe/uE,CAEpB5C,MAAKuxE,qB3HizmBCxwE,WAAY,KACZC,aAAc,M2H/0mBPylD,GAAAvlD,UAAmB,6BA2ClC,OAAAulD,IA7CgC0G,EA+ChC1tD,GAA2BJ,QAAlBonD,I3HyymBN+P,iCAAiCp1D,UAAUwwE,mCAAmCxwE,UAAUssD,0CAA0C,4CAA4CA,2CAA2C,SAASnvD,EAAQkB,EAAOJ,GACpP,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Hl2mBtB,IAAOG,GAASjC,EAAc,oC5Hw2mB9B,I4Hj2mBM4uD,GAAW,SAAAzsD,GAASX,EAApBotD,EAAWzsD,EAoBhB,SApBKysD,KAsBJzsD,EAAApB,KAAAU,KApBOA,MAAA6xE,WAA+B,GAAIrsE,MAEpCxF,MAAAmS,OAAgB,CAChBnS,MAAAuQ,QAAiB,EAExB5P,OAAAC,eAAIusD,EAAA5sD,UAAA,S5Hs2mBGM,I4Ht2mBP,WAEC,MAAOb,MAAKmS,Q5Hu2mBNpR,WAAY,KACZC,aAAc,M4Hr2mBrBL,QAAAC,eAAIusD,EAAA5sD,UAAA,U5Hw2mBGM,I4Hx2mBP,WAEC,MAAOb,MAAKuQ,S5Hy2mBNxP,WAAY,KACZC,aAAc,M4H51mBdmsD,GAAA5sD,UAAAgxE,kBAAP,WAEC,GAAI5hE,GAAa3P,KAAK6xE,WAAWtyE,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAI2Q,EAAK3Q,IAC/BgB,KAAK6xE,WAAW7yE,GAAGgmB,aAOdmoC,GAAA5sD,UAAAuxE,eAAP,WAEC,MAAO9xE,KAAK6xE,WAAWtyE,OACtBS,KAAK6xE,WAAW,GAAG5wE,UAMdksD,GAAA5sD,UAAAU,QAAP,WAEC,MAAOjB,KAAK6xE,WAAWtyE,OACtBS,KAAK6xE,WAAW,GAAG5wE,UAIdksD,GAAA5sD,UAAAwxE,eAAP,SAAsBC,GAErBhyE,KAAK6xE,WAAWxrE,KAAK2rE,EAErB,OAAOA,GAGD7kB,GAAA5sD,UAAA0xE,kBAAP,SAAyBD,GAExBhyE,KAAK6xE,WAAW70D,OAAOhd,KAAK6xE,WAAW90D,QAAQi1D,GAAY,EAE3D,OAAOA,GAGD7kB,GAAA5sD,UAAA+wE,SAAP,SAAgBltE,EAAcC,GAE7BrE,KAAKmS,OAAS/N,CACdpE,MAAKuQ,QAAUlM,EAGjB,OAAA8oD,IA3E0B3sD,EA6ELf,GAAAJ,QAAZ8tD,I5Ho1mBNhsD,oCAAoCC,YAAY8wE,kDAAkD,SAAS3zE,EAAQkB,EAAOJ,GAC7H,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6H96mBtB,IAAO8xE,GAAa5zE,EAAc,4C7Ho7mBlC,I6H/6mBM6zE,GAAkB,SAAA1xE,GAASX,EAA3BqyE,EAAkB1xE,EAEvB,SAFK0xE,KAIJ1xE,EAAApB,KAAAU,MAEF,MAAAoyE,IANiCD,EAQjC1yE,GAA4BJ,QAAnB+yE,I7Hg7mBNC,4CAA4C,8CAA8CA,6CAA6C,SAAS9zE,EAAQkB,EAAOJ,G8Hz7mBlK,GAAOmjE,GAAkBjkE,EAAa,6C9H87mBtC,I8Ht7mBM4zE,GAAa,WAelB,QAfKA,KASGnyE,KAAAsyE,eAAwB,CACzBtyE,MAAAq7D,cAAuB,CACvBr7D,MAAAuyE,yBAAkC,CAMxCvyE,MAAKwyE,qBAAuB,GAAIhQ,GAMjC7hE,OAAAC,eAAWuxE,EAAA5xE,UAAA,U9H06mBJM,I8H16mBP,WAEC,MAAOb,MAAK+gC,U9H26mBNp+B,I8Hx6mBP,SAAkBC,GAEjB5C,KAAK+gC,SAAWn+B,CAChB5C,MAAKyyE,YAAczyE,KAAK+gC,SAASm2B,e9Hy6mB3Bn2D,WAAY,KACZC,aAAc,M8Hp6mBrBL,QAAAC,eAAWuxE,EAAA5xE,UAAA,c9H06mBJM,I8H16mBP,WAEC,MAAOb,MAAK0yE,mB9H26mBN/vE,I8Hx6mBP,SAAsBC,GAErB5C,KAAK0yE,kBAAoB9vE,G9Hy6mBnB7B,WAAY,KACZC,aAAc,M8Hp6mBrBL,QAAAC,eAAWuxE,EAAA5xE,UAAA,c9H06mBJM,I8H16mBP,WAEC,MAAOb,MAAK2yE,c9H26mBN5xE,WAAY,KACZC,aAAc,M8Ht6mBrBL,QAAAC,eAAWuxE,EAAA5xE,UAAA,e9H46mBJM,I8H56mBP,WAEC,MAAOb,MAAKq7D,e9H66mBNt6D,WAAY,KACZC,aAAc,M8Hx6mBrBL,QAAAC,eAAWuxE,EAAA5xE,UAAA,0B9H86mBJM,I8H96mBP,WAEC,MAAOb,MAAKuyE,0B9H+6mBNxxE,WAAY,KACZC,aAAc,M8H16mBdmxE,GAAA5xE,UAAAiZ,MAAP,WAECxZ,KAAKq7D,cAAgBr7D,KAAKuyE,yBAA2B,CACrDvyE,MAAKyyE,YAAczyE,KAAK0yE,kBAAmB1yE,KAAK0yE,kBAAsB1yE,KAAK+gC,SAAU/gC,KAAK+gC,SAASm2B,cAAgB,IACnHl3D,MAAKsyE,eAAiBtyE,KAAKyyE,YAAazyE,KAAKyyE,YAAYlzE,OAAS,CAClES,MAAK2yE,aAAe,IACpB3yE,MAAKwyE,qBAAqB5P,UAQpBuP,GAAA5xE,UAAAy4D,UAAP,SAAiBwC,GAEhB,GAAIoX,GAAgB5yE,KAAKyb,MAAM6iB,kBAAoBk9B,EAAKl9B,kBAAoBk9B,EAAKzoC,YAAY/yB,KAAKyyE,YAAazyE,KAAKsyE,eAEpH9W,GAAKl9B,iBAAmBt+B,KAAKyb,MAAM6iB,gBAEnC,OAAOs0C,GAODT,GAAA5xE,UAAA04D,sBAAP,SAA6B52C,IAStB8vD,GAAA5xE,UAAAm5D,YAAP,SAAmBr3C,GAElBriB,KAAKq7D,eAEL,IAAIh5C,EAAOjF,mBACVpd,KAAKuyE,0BAEN,IAAI5P,GAAsB3iE,KAAKwyE,qBAAqB1V,SACpD6F,GAAKtgD,OAASA,CAEdsgD,GAAKpB,KAAOvhE,KAAK2yE,YACjB3yE,MAAK2yE,aAAehQ,EAOdwP,GAAA5xE,UAAAs6D,gBAAP,SAAuBx4C,IAShB8vD,GAAA5xE,UAAA+8D,gBAAP,SAAuBj7C,IAShB8vD,GAAA5xE,UAAAs9D,YAAP,SAAmBx7C,IAIpB,OAAA8vD,KAEA1yE,GAAuBJ,QAAd8yE,I9H+5mBN7P,6CAA6C,+CAA+CuQ,+CAA+C,SAASt0E,EAAQkB,EAAOJ,GACtK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+HvknBtB,IAAO8xE,GAAa5zE,EAAc,4C/H6knBlC,I+HnknBMu0E,GAAe,SAAApyE,GAASX,EAAxB+yE,EAAepyE,EAsDpB,SAtDKoyE,KAwDJpyE,EAAApB,KAAAU,KAhDMA,MAAA+yE,YAAqB,CAEpB/yE,MAAAgzE,sBAA+B,CAC/BhzE,MAAAizE,gBAAyB,CACzBjzE,MAAAkzE,gBAAyB,CA8ChClzE,MAAKmzE,SAAW,GAAI3tE,MACpBxF,MAAKozE,mBAAqB,GAAI5tE,MAC9BxF,MAAKqzE,aAAe,GAAI7tE,MACxBxF,MAAKszE,aAAe,GAAI9tE,MAExBxF,MAAK45D,kBAAoB,KA9C1Bj5D,OAAAC,eAAWkyE,EAAAvyE,UAAA,qB/HoknBJM,I+HpknBP,WAEC,MAAOb,MAAKozE,oB/HqknBNryE,WAAY,KACZC,aAAc,M+HhknBrBL,QAAAC,eAAWkyE,EAAAvyE,UAAA,e/HsknBJM,I+HtknBP,WAEC,MAAOb,MAAKszE,c/HuknBNvyE,WAAY,KACZC,aAAc,M+HlknBrBL,QAAAC,eAAWkyE,EAAAvyE,UAAA,U/HwknBJM,I+HxknBP,WAEC,MAAOb,MAAKmzE,U/HyknBNpyE,WAAY,KACZC,aAAc,M+HpknBrBL,QAAAC,eAAWkyE,EAAAvyE,UAAA,e/H0knBJM,I+H1knBP,WAEC,MAAOb,MAAKqzE,c/H2knBNtyE,WAAY,KACZC,aAAc,M+HtknBrBL,QAAAC,eAAWkyE,EAAAvyE,UAAA,U/H4knBJM,I+H5knBP,WAEC,MAAOb,MAAKuzE,U/H6knBNxyE,WAAY,KACZC,aAAc,M+H3jnBd8xE,GAAAvyE,UAAA04D,sBAAP,SAA6B52C,GAE5BriB,KAAKozE,mBAAoBpzE,KAAKgzE,yBAA+C3wD,EAOvEywD,GAAAvyE,UAAAs6D,gBAAP,SAAuBx4C,GAEtBriB,KAAKszE,aAActzE,KAAKkzE,mBAAmC7wD,EAOrDywD,GAAAvyE,UAAA+8D,gBAAP,SAAuBj7C,GAEtBriB,KAAKqzE,aAAcrzE,KAAKizE,mBAAmC5wD,EAOrDywD,GAAAvyE,UAAAs9D,YAAP,SAAmBx7C,GAElBriB,KAAKuzE,SAAoBlxD,EAMnBywD,GAAAvyE,UAAAiZ,MAAP,WAEC9Y,EAAAH,UAAMiZ,MAAKla,KAAAU,KAEXA,MAAKuzE,SAAW,IAEhB,IAAIvzE,KAAK+yE,YAAc,EACtB/yE,KAAKmzE,SAAS5zE,OAASS,KAAK+yE,YAAc,CAE3C,IAAI/yE,KAAKgzE,sBAAwB,EAChChzE,KAAKozE,mBAAmB7zE,OAASS,KAAKgzE,sBAAwB,CAE/D,IAAIhzE,KAAKizE,gBAAkB,EAC1BjzE,KAAKqzE,aAAa9zE,OAASS,KAAKizE,gBAAkB,CAEnD,IAAIjzE,KAAKkzE,gBAAkB,EAC1BlzE,KAAKszE,aAAa/zE,OAASS,KAAKkzE,gBAAkB,EAErD,OAAAJ,IA3H8BX,EA6H9B1yE,GAAyBJ,QAAhByzE,I/HqjnBNT,4CAA4C,8CAA8ChQ,gDAAgD,SAAS9jE,EAAQkB,EAAOJ,GACrK,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgIlsnBtB,IAAO0K,GAAQxM,EAAgB,gCAG/B,IAAO4zE,GAAa5zE,EAAc,4ChI4snBlC,IgI/rnBMuiE,GAAgB,SAAApgE,GAASX,EAAzB+gE,EAAgBpgE,EAoCrB,SApCKogE,KAsCJpgE,EAAApB,KAAAU,KApCOA,MAAAwzE,aAAwB,GAAIzoE,EAC5B/K,MAAAyzE,cAAyB,GAAI1oE,EAE9B/K,MAAAs+B,iBAA0B,EAKjC39B,OAAAC,eAAWkgE,EAAAvgE,UAAA,ehIosnBJM,IgIpsnBP,WAEC,MAAOb,MAAKwzE,chIqsnBN7wE,IgIlsnBP,SAAuBC,GAEtB5C,KAAKwzE,aAAe5wE,GhImsnBd7B,WAAY,KACZC,aAAc,MgI9rnBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,gBhIosnBJM,IgIpsnBP,WAEC,MAAOb,MAAKyzE,ehIqsnBN9wE,IgIlsnBP,SAAwBC,GAEvB5C,KAAKyzE,cAAgB7wE,GhImsnBf7B,WAAY,KACZC,aAAc,MgIprnBd8/D,GAAAvgE,UAAAy4D,UAAP,SAAiBwC,GAEhB,MAAOA,GAAK1B,kBAAkB95D,KAAKwzE,aAAcxzE,KAAKyzE,eAExD,OAAA3S,IAlD+BqR,EAoD/B1yE,GAA0BJ,QAAjByhE,IhI4rnBNjiD,gCAAgCzd,UAAUixE,4CAA4C,8CAA8Cha,qDAAqD,SAAS95D,EAAQkB,EAAOJ,GACpN,GAAIU,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiIpwnBtB,IAAO8xE,GAAa5zE,EAAc,4CjI0wnBlC,IiIrwnBMu5D,GAAqB,SAAAp3D,GAASX,EAA9B+3D,EAAqBp3D,EAE1B,SAFKo3D,KAIJp3D,EAAApB,KAAAU,MAMM83D,EAAAv3D,UAAAy4D,UAAP,SAAiBwC,GAEhB,GAAIoX,GAAgB5yE,KAAKyb,MAAM6iB,kBAAoBk9B,EAAKl9B,kBAAoBk9B,EAAKtC,iBAEjF,KAAK0Z,EAAO,CACXpX,EAAKl9B,iBAAmBt+B,KAAKyb,MAAM6iB,gBAEnC,OAAO,OAGR,MAAO59B,GAAAH,UAAMy4D,UAAS15D,KAAAU,KAACw7D,GAEzB,OAAA1D,IAtBoCqa,EAwBL1yE,GAAAJ,QAAtBy4D,IjIiwnBNua,4CAA4C,8CAA8CqB,iCAAiC,SAASn1E,EAAQkB,EAAOJ,GkI/xnBtJ,GAAO4tD,GAAO1uD,EAAe,+BAC7B,IAAO0yE,GAAS1yE,EAAc,iCAC9B,IAAOo1E,GAASp1E,EAAc,kCAE9B,IAAO8kD,GAAS9kD,EAAc,sCAC9B,IAAOioD,GAAejoD,EAAa,8ClImynBnC,IkI9xnBMq1E,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqBx3C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGHu3C,GAAAE,UAAd,SAAwBz3C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgBs3C,GACnB,MAAOt3C,EAER,OAAmBA,GAcLu3C,GAAAG,MAAf,SAAqB5rD,GAEpB,GAAI5oB,GAAwB4oB,EAAI5oB,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIgB,KAAKg0E,UAAUj3D,QAAQoL,EAAI8rD,OAAOj1E,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGM40E,GAAAM,SAAd,SAAuB73C,GAEtB,SAAU,IAAU,SACnB,MAAOj5B,MAAKC,MAAeg5B,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOj5B,MAAKC,MAAMD,KAAK+wE,SAAS,SAEjC,IAAIn0E,KAAKo0E,aAAe,KAAM,CAC7Bp0E,KAAKo0E,YAAc,GAAIzzE,OACvBX,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,aAAe,MAChCp0E,MAAKo0E,YAAY,kBAAoB,OACrCp0E,MAAKo0E,YAAY,kBAAoB,QACrCp0E,MAAKo0E,YAAY,mBAAqB,OACtCp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,iBAAmB,OACpCp0E,MAAKo0E,YAAY,gBAAkB,OACnCp0E,MAAKo0E,YAAY,QAAU,GAC3Bp0E,MAAKo0E,YAAY,YAAc,GAC/Bp0E,MAAKo0E,YAAY,cAAgB,GACjCp0E,MAAKo0E,YAAY,QAAU,GAC3Bp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,eAAiB,KAClCp0E,MAAKo0E,YAAY,gBAAkB,OACnCp0E,MAAKo0E,YAAY,WAAa,OAC9Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,iBAAmB,QACpCp0E,MAAKo0E,YAAY,mBAAqB,OACtCp0E,MAAKo0E,YAAY,iBAAmB,OACpCp0E,MAAKo0E,YAAY,YAAc,KAC/Bp0E,MAAKo0E,YAAY,QAAU,KAC3Bp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,iBAAmB,KACpCp0E,MAAKo0E,YAAY,QAAU,KAC3Bp0E,MAAKo0E,YAAY,QAAU,KAC3Bp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,oBAAsB,OACvCp0E,MAAKo0E,YAAY,gBAAkB,OACnCp0E,MAAKo0E,YAAY,kBAAoB,OACrCp0E,MAAKo0E,YAAY,YAAc,OAC/Bp0E,MAAKo0E,YAAY,aAAe,KAChCp0E,MAAKo0E,YAAY,SAAW,KAC5Bp0E,MAAKo0E,YAAY,eAAiB,OAClCp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,QAAU,KAC3Bp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,eAAiB,KAClCp0E,MAAKo0E,YAAY,qBAAuB,KACxCp0E,MAAKo0E,YAAY,kBAAoB,OACrCp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,SAAW,OAC5Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,iBAAmB,QACpCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,QAAU,QAC3Bp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,iBAAmB,QACpCp0E,MAAKo0E,YAAY,kBAAoB,QACrCp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,OAAS,QAC1Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,eAAiB,OAClCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,QAAU,QAC3Bp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,WAAa,OAC9Bp0E,MAAKo0E,YAAY,UAAY,OAC7Bp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,OAAS,QAC1Bp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,QAAU,QAC3Bp0E,MAAKo0E,YAAY,iBAAmB,QACpCp0E,MAAKo0E,YAAY,mBAAqB,QACtCp0E,MAAKo0E,YAAY,UAAY,OAC7Bp0E,MAAKo0E,YAAY,eAAiB,OAClCp0E,MAAKo0E,YAAY,gBAAkB,OACnCp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,UAAY,OAC7Bp0E,MAAKo0E,YAAY,cAAgB,OACjCp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,gBAAkB,QACnCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,QAAU,QAC3Bp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,wBAA0B,QAC3Cp0E,MAAKo0E,YAAY,gBAAkB,QACnCp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,eAAiB,QAClCp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,WAAa,QAC9Bp0E,MAAKo0E,YAAY,gBAAkB,QACnCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,iBAAmB,QACpCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,QAAU,QAC3Bp0E,MAAKo0E,YAAY,SAAW,QAC5Bp0E,MAAKo0E,YAAY,cAAgB,QACjCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,aAAe,QAChCp0E,MAAKo0E,YAAY,UAAY,QAC7Bp0E,MAAKo0E,YAAY,YAAc,QAC/Bp0E,MAAKo0E,YAAY,QAAU,OAC3Bp0E,MAAKo0E,YAAY,kBAAoB,OACrCp0E,MAAKo0E,YAAY,aAAe,OAChCp0E,MAAKo0E,YAAY,WAAa,OAC9Bp0E,MAAKo0E,YAAY,iBAAmB,OACpCp0E,MAAKo0E,YAAY,SAAW,CAC5Bp0E,MAAKo0E,YAAY,eAAiB,WAGnC,GAAIp0E,KAAKo0E,YAAY/3C,IAAS,KAC7B,MAAOr8B,MAAKo0E,YAAY/3C,EAEzB,IAAeA,EAAM98B,QAAU,GAAMS,KAAK+zE,MAAM13C,GAC/C,MAAO/Q,UAAS,KAAO+Q,GAGzB,MAAO,MAGMu3C,GAAA3pC,MAAd,SAAoB5N,GAEnB,GAAI0nB,GAAyB/jD,KAAKk0E,SAAS73C,EAE3C,IAAI0nB,GAAU,KACb,KAAM,IAAIV,GAAU,wBAA0BhnB,EAE/C,OAAO0nB,GAGM6vB,GAAAS,SAAd,SAAuB//D,GAEtB,GAAItU,KAAKs0E,YAAYhgE,GACpB,MAAOA,EAER,IAAIyvC,GAAa/jD,KAAKu0E,SAASjgE,EAE/B,IAAIyvC,GAAU,KACb,MAAOA,EAER,KACCA,EAASywB,OAAOlgE,EAChBtU,MAAKu0E,SAASjgE,GAAQyvC,CACtB,OAAOA,GACN,MAAOvlD,IAGTwB,KAAKs0E,YAAYhgE,GAAQ,IAEzB,OAAOA,GAGMs/D,GAAAjgB,QAAd,SAAsBt3B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOr8B,KAAKq0E,SAASh4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO79B,GACR69B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB4wB,GACnB,MAAO5wB,EAER,IAAIA,YAAgBmqB,GACnBnqB,EAA0BA,EAAMgzB,SAEjC,IAAIhzB,YAAgB40C,GACnB,MAAoB50C,GAAMs3B,OAE3B,MAAM,IAAItQ,GAAU,gCAAkChnB,GAGzCu3C,GAAAa,cAAd,SAA4Bp4C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOr8B,KAAKq0E,SAASh4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAO79B,GACR69B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBmqB,GACnB,MAAOnqB,EAER,KACC,GAAIq4C,GAAcd,EAAKjgB,QAAQt3B,EAC/B,OAAO,IAAImqB,GAAgBkuB,GAC1B,MAAOl2E,IAGT,KAAM,IAAI6kD,GAAU,kCAAoChnB,GA1S1Cu3C,GAAAI,UAAmB,wBAEnBJ,GAAAU,YAAqB,GAAI3zE,OACzBizE,GAAAW,SAAkB,GAAI5zE,OAyStC,OAAAizE,KAEcn0E,GAAAJ,QAALu0E,IlIsvnBNpmB,+BAA+BpsD,UAAUowE,iCAAiCpwE,UAAUuzE,kCAAkCvzE,UAAUgiD,sCAAsC,sCAAsC6E,8CAA8C,gDAAgDp+C,6CAA6C,SAAStL,EAAQkB,EAAOJ,GmIjjoBlX,GAAOkrE,GAAgBhsE,EAAa,8CAIpC,IAAOoD,GAAgBpD,EAAa,8CACpC;GAAOmD,GAAgBnD,EAAa,8CACpC,IAAOq2E,GAAgBr2E,EAAa,8CACpC,IAAOmkB,GAAenkB,EAAa,6CAEnC,IAAOwM,GAAQxM,EAAe,gCAE9B,IAAMsD,GAAgB,WAAtB,QAAMA,MAQSA,EAAAkwB,oBAAd,SAAkC8iD,EAAkCC,EAAqCC,EAAyBryE,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIW,GAAsBmsE,EAAgBh0E,IAAI6B,EAAOqF,EACrD,IAAInE,GAAyBkxE,EAAmBj0E,IAAIi0E,EAAmBpyE,MAEvE,IAAIqyE,GAAU,KACbA,EAAS,GAAIH,GAAiBlyE,EAAQqF,OAClC,IAAIgtE,EAAOryE,MAAQA,EAAQqF,EAC/BgtE,EAAOryE,MAAQA,EAAQqF,CAExB,IAAIitE,GAAkBH,EAAgB/wE,UACtC,IAAImxE,GAAqBH,EAAmBhxE,UAE5C,IAAIoxE,GAA2BH,EAAOl0E,IAAI6B,EAAOqF,EAGjDrF,IAASsyE,CAET,IAAIh2E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,EAEJ,IAAIgvE,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAI5wE,GAAWC,EAAWmvB,CAC1B,IAAIx0B,EAEJ,OAAOjB,EAAI0D,EAAO,CACjByD,EAAQuC,EAAQ1J,KAAKi2E,CACrBE,GAAKvxE,EAAUuC,EACfmvE,GAAK1xE,EAAUuC,EAAQ,EACvBsvE,GAAK7xE,EAAUuC,EAAQ,EACvBA,GAAQuC,EAAQ1J,KAAKi2E,CACrBG,GAAKxxE,EAAUuC,EACfovE,GAAK3xE,EAAUuC,EAAQ,EACvBuvE,GAAK9xE,EAAUuC,EAAQ,EACvBA,GAAQuC,EAAQ1J,KAAKi2E,CACrBI,GAAKzxE,EAAUuC,EACfqvE,GAAK5xE,EAAUuC,EAAQ,EACvBwvE,GAAK/xE,EAAUuC,EAAQ,EACvByvE,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACXpwE,GAAKywE,EAAIE,EAAMH,EAAII,CACnB3wE,GAAKswE,EAAIK,EAAMH,EAAIC,CACnBthD,GAAKohD,EAAIE,EAAMH,EAAII,CACnB/1E,GAAImD,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKmvB,EAAGA,EAGjCygD,GAAYhvE,KAAOb,CACnB6vE,GAAYhvE,KAAOZ,CACnB4vE,GAAYhvE,KAAOuuB,CACnBygD,GAAYhvE,KAAOjG,EAGpB80E,EAAOpyE,IAAIuyE,EAAantE,EAExB,OAAOgtE,GAGMlzE,GAAAivB,gBAAd,SAA8B+jD,EAAkCqB,EAAuCnB,EAAyBhzE,GAE/H,GAAI2G,GAAsBmsE,EAAgBh0E,IAAIg0E,EAAgBnyE,MAC9D,IAAIwyE,GAA2BgB,EAAqBr1E,IAAIq1E,EAAqBxzE,MAE7E,IAAIqyE,GAAU,KACbA,EAAS,GAAIrzE,GAAiBK,EAE/B,IAAIizE,GAAkBH,EAAgB/wE,UACtC,IAAIqyE,GAAmBpB,EAAOjxE,UAE9B,IAAI0tB,GAAuBujD,EAAOl0E,IAAIk0E,EAAOryE,MAE7C,IAAI1D,GAAW,CACf,IAAI2Q,GAAaolE,EAAOryE,MAAMyzE,CAG9B,OAAOn3E,EAAI2Q,EAAK,CACf6hB,EAAQxyB,KAAO,CACfwyB,GAAQxyB,KAAO,CACfwyB,GAAQxyB,KAAO,EAGhBA,EAAI,CACJ2Q,GAAMklE,EAAgBnyE,MAAMsyE,CAC5B,IAAI7uE,EACJ,IAAIiwE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAOt3E,EAAI2Q,EAAK,CACfxJ,EAAQuC,EAAQ1J,KAAKm3E,CACrB3kD,GAAQrrB,IAAU+uE,EAAYkB,EAC9B5kD,GAAQrrB,EAAQ,IAAM+uE,EAAYmB,EAClC7kD,GAAQrrB,EAAQ,IAAM+uE,EAAYoB,EAClCnwE,GAAQuC,EAAQ1J,KAAKm3E,CACrB3kD,GAAQrrB,IAAU+uE,EAAYkB,EAC9B5kD,GAAQrrB,EAAQ,IAAM+uE,EAAYmB,EAClC7kD,GAAQrrB,EAAQ,IAAM+uE,EAAYoB,EAClCnwE,GAAQuC,EAAQ1J,KAAKm3E,CACrB3kD,GAAQrrB,IAAU+uE,EAAYkB,EAC9B5kD,GAAQrrB,EAAQ,IAAM+uE,EAAYmB,EAClC7kD,GAAQrrB,EAAQ,IAAM+uE,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPt3E,EAAI,CACJ2Q,GAAMolE,EAAOryE,MAAMyzE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIx2E,EAGJ,OAAOjB,EAAI2Q,EAAK,CACf4mE,EAAK/kD,EAAQxyB,EACbw3E,GAAKhlD,EAAQxyB,EAAI,EACjBy3E,GAAKjlD,EAAQxyB,EAAI,EACjBiB,GAAI,EAAImD,KAAKoB,KAAK+xE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCjlD,GAAQxyB,KAAOu3E,EAAGt2E,CAClBuxB,GAAQxyB,KAAOw3E,EAAGv2E,CAClBuxB,GAAQxyB,KAAOy3E,EAAGx2E,EAGnB80E,EAAOpyE,IAAI6uB,EAEX,OAAOujD,GAGMlzE,GAAAiwB,qBAAd,SAAmC+iD,EAAkCC,EAAqC4B,EAA+B3B,EAAyBryE,EAAcqF,EAAmB4uE,GAAnB,GAAA5uE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAA4uE,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAIjuE,GAAsBmsE,EAAgBh0E,IAAI6B,EAAOqF,EACrD,IAAInE,GAAyBkxE,EAAmBj0E,IAAIi0E,EAAmBpyE,MACvE,IAAIkG,GAAmB8tE,EAAa71E,IAAI61E,EAAah0E,MAErD,IAAIqyE,GAAU,KACbA,EAAS,GAAIrzE,GAAiBgB,EAAQqF,OAClC,IAAIgtE,EAAOryE,MAAQA,EAAQqF,EAC/BgtE,EAAOryE,MAAQA,EAAQqF,CAExB,IAAIktE,GAAqBH,EAAmBhxE,UAC5C,IAAIk8D,GAAe0W,EAAa5yE,UAChC,IAAIkxE,GAAkBH,EAAgB/wE,UAEtC,IAAI8yE,GAA4B7B,EAAOl0E,IAAI6B,EAAOqF,EAElD,IAAI/I,GAAW,CACf,IAAIg6B,EACJ,IAAIC,EACJ,IAAI49C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAI5wE,GAAWC,EAAWmvB,CAG1B/xB,IAASsyE,CAET,OAAOh2E,EAAI0D,EAAO,CACjBs2B,EAAStwB,EAAQ1J,EACjBi6B,GAASvwB,EAAQ1J,EAAI,EACrB63E,GAASnuE,EAAQ1J,EAAI,EAErB+3E,GAAKnuE,EAAIowB,EAAOgnC,EAAQ,EACxBgX,GAAMpuE,EAAIqwB,EAAO+mC,EAAQ,GAAK+W,CAC9BE,GAAMruE,EAAIiuE,EAAO7W,EAAQ,GAAK+W,CAE9BD,GAAK99C,EAAOi8C,CACZkC,GAAKvzE,EAAUkzE,EACfM,GAAKxzE,EAAUkzE,EAAK,EACpBO,GAAKzzE,EAAUkzE,EAAK,EACpBA,GAAK79C,EAAOg8C,CACZW,GAAMhyE,EAAUkzE,GAAMK,CACtBtB,GAAMjyE,EAAUkzE,EAAK,GAAKM,CAC1BtB,GAAMlyE,EAAUkzE,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAMnyE,EAAUkzE,GAAMK,CACtBnB,GAAMpyE,EAAUkzE,EAAK,GAAKM,CAC1BnB,GAAMryE,EAAUkzE,EAAK,GAAKO,CAE1BhyE,GAAK4xE,EAAIrB,EAAMoB,EAAIjB,CACnBzwE,GAAK2xE,EAAIpB,EAAMmB,EAAIhB,CACnBvhD,GAAKwiD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAE9zE,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKmvB,EAAGA,EAEvCmiD,GAAa53E,KAAOk4E,EAAM7xE,CAC1BuxE,GAAa53E,KAAOk4E,EAAM5xE,CAC1BsxE,GAAa53E,KAAOk4E,EAAMziD,EAG3BsgD,EAAOpyE,IAAIi0E,EAAc7uE,EAEzB,OAAOgtE,GAGMlzE,GAAAkvB,iBAAd,SAA+B8jD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyBhzE,GAExK,GAAI2G,GAAsBmsE,EAAgBh0E,IAAIg0E,EAAgBnyE,MAC9D,IAAIk0E,GAA4BU,EAAsBz2E,IAAIy2E,EAAsB50E,MAChF,IAAIwyE,GAA2BgB,EAAqBr1E,IAAIq1E,EAAqBxzE,MAE7E,IAAIqyE,GAAU,KACbA,EAAS,GAAIrzE,GAAiBK,EAE/B,IAAIizE,GAAkBH,EAAgB/wE,UACtC,IAAIqyE,GAAmBpB,EAAOjxE,UAE9B,IAAI2tB,GAAwBsjD,EAAOl0E,IAAIk0E,EAAOryE,MAE9C,IAAI1D,GAAW,CACf,IAAI2Q,GAAaolE,EAAOryE,MAAMyzE,CAG9B,OAAOn3E,EAAI2Q,EAAK,CACf8hB,EAASzyB,KAAO,CAChByyB,GAASzyB,KAAO,CAChByyB,GAASzyB,KAAO,EAGjB,GAAIu4E,EACJ,IAAIpxE,EACJ,IAAIiwE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBx4E,GAAI,CACJ2Q,GAAMklE,EAAgBnyE,MAAMsyE,CAG5B,OAAOh2E,EAAI2Q,EAAK,CACf4nE,EAASrC,EAAYsC,EACrBrxE,GAAQuC,EAAQ1J,KAAKm3E,CACrB1kD,GAAStrB,MAAYywE,EAAaR,GAAImB,CACtC9lD,GAAStrB,MAAYywE,EAAaP,GAAIkB,CACtC9lD,GAAStrB,IAAUywE,EAAaN,GAAIiB,CACpCpxE,GAAQuC,EAAQ1J,KAAKm3E,CACrB1kD,GAAStrB,MAAYywE,EAAaR,GAAImB,CACtC9lD,GAAStrB,MAAYywE,EAAaP,GAAIkB,CACtC9lD,GAAStrB,IAAUywE,EAAaN,GAAIiB,CACpCpxE,GAAQuC,EAAQ1J,KAAKm3E,CACrB1kD,GAAStrB,MAAYywE,EAAaR,GAAImB,CACtC9lD,GAAStrB,MAAYywE,EAAaP,GAAIkB,CACtC9lD,GAAStrB,IAAUywE,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPx4E,EAAI,CACJ2Q,GAAMolE,EAAOryE,MAAMyzE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIx2E,EAGJ,OAAOjB,EAAI2Q,EAAK,CACf4mE,EAAK9kD,EAASzyB,EACdw3E,GAAK/kD,EAASzyB,EAAI,EAClBy3E,GAAKhlD,EAASzyB,EAAI,EAClBiB,GAAI,EAAImD,KAAKoB,KAAK+xE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErChlD,GAASzyB,KAAOu3E,EAAGt2E,CACnBwxB,GAASzyB,KAAOw3E,EAAGv2E,CACnBwxB,GAASzyB,KAAOy3E,EAAGx2E,EAGpB80E,EAAOpyE,IAAI8uB,EAEX,OAAOsjD,GAIMlzE,GAAAyG,YAAd,SAA0BusE,EAAkCE,EAAyBhzE,EAAqCW,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAIgtE,GAAU,KACbA,EAAS,GAAIpzE,GAAiBI,EAE/B,IAAIo0E,GAAmBpB,EAAOjxE,UAE9B,IAAI8E,GAAmBmsE,EAAOl0E,IAAI6B,EAAOqF,EAEzC,IAAI/I,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIyJ,GAAajN,EAAMyzE,CAEvB,OAAOn3E,EAAI2Q,EAAK,CACf/G,EAAI5J,KAAOkH,EAAE,EACb0C,GAAI5J,KAAO,GAAOkH,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGN6uE,EAAOpyE,IAAIiG,EAAKb,EAEhB,OAAOgtE,GAGMlzE,GAAAyhB,eAAd,SAA6BuxD,EAAkCE,EAAwBhzE,EAAqCW,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAIgtE,GAAU,KACbA,EAAS,GAAIryD,GAAgB3gB,EAE9B,IAAIoE,GAAe,CACnB,IAAIid,GAAoB,GAAIC,YAAW3gB,EAAM,EAE7C,OAAOyD,EAAQzD,EAAM,EAAG,CACvB,GAAIyD,EAAM,EAAI,EAAG,CAChBid,EAAOjd,GAAS,GAChBid,GAAOjd,EAAQ,GAAK,GACpBid,GAAOjd,EAAQ,GAAK,GACpBid,GAAOjd,EAAQ,GAAK,QACd,CACNid,EAAOjd,GAAS,GAChBid,GAAOjd,EAAQ,GAAK,GACpBid,GAAOjd,EAAQ,GAAK,GACpBid,GAAOjd,EAAQ,GAAK,IAGrBA,GAAS,EAGV4uE,EAAOpyE,IAAIygB,EAAQrb,EAEnB,OAAOgtE,GAGMlzE,GAAAmH,SAAd,SAAuBF,EAAeC,EAAegsE,EAAyBryE,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAIgtE,EAAOryE,MAAQA,EAAQqF,EAC1BgtE,EAAOryE,MAAQA,EAAQqF,CAExB,IAAIouE,GAAmBpB,EAAOjxE,UAE9B,IAAI8E,GAAmBmsE,EAAOl0E,IAAI6B,EAAOqF,EAEzC,IAAI/I,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIyJ,GAAajN,EAAMyzE,CAEvB,OAAOn3E,EAAI2Q,EAAK,CACf/G,EAAI5J,MAAQ8J,CACZF,GAAI5J,MAAQ+J,EAGbgsE,EAAOpyE,IAAIiG,EAAKb,GAGHlG,GAAAoH,MAAd,SAAoBA,EAAc8rE,EAAyBryE,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAIgtE,EAAOryE,MAAQA,EAAQqF,EAC1BgtE,EAAOryE,MAAQA,EAAQqF,CAExB,IAAIouE,GAAmBpB,EAAOjxE,UAE9B,IAAIF,GAAyBmxE,EAAOl0E,IAAI6B,EAAOqF,EAE/C,IAAI/I,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIyJ,GAAajN,EAAMyzE,CAEvB,OAAOn3E,EAAI2Q,EAAK,CACf/L,EAAU5E,MAAQiK,CAClBrF,GAAU5E,MAAQiK,CAClBrF,GAAU5E,MAAQiK,EAGnB8rE,EAAOpyE,IAAIiB,EAAWmE,GAGTlG,GAAAqH,oBAAd,SAAkCC,EAAoB2rE,EAAqC2C,EAAmCC,EAAoCh1E,EAAcqF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAInE,GAAyBkxE,EAAmBj0E,IAAI6B,EAAOqF,EAC3D,IAAIktE,GAAqBH,EAAmBhxE,UAE5C,IAAI0tB,EACJ,IAAImmD,EAEJ,IAAIF,EAAkB,CACrBjmD,EAAUimD,EAAiB52E,IAAI6B,EAAOqF,EACtC4vE,GAAYF,EAAiB3zE,WAG9B,GAAI2tB,EACJ,IAAImmD,EAEJ,IAAIF,EAAmB,CACtBjmD,EAAWimD,EAAkB72E,IAAI6B,EAAOqF,EACxC6vE,GAAaF,EAAkB5zE,WAGhC,GAAI9E,EACJ,IAAIu/D,EACJ,IAAIC,EACJ,IAAIqZ,GAAkB,GAAI9sE,EAC1B,IAAI+sE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAe3uE,EAAUX,OACzBsvE,GAAahnE,QACbgnE,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKl5E,EAAI,EAAGA,EAAI0D,IAAS1D,EAAG,CAE3Bu/D,EAAKyZ,EAAM,CACXxZ,GAAKwZ,EAAM,CACXH,GAAO50E,EAAIW,EAAUo0E,EACrBH,GAAO30E,EAAIU,EAAU26D,EACrBsZ,GAAOtxE,EAAI3C,EAAU46D,EACrBqZ,GAAS1uE,EAAUuJ,gBAAgBmlE,EACnCj0E,GAAUo0E,GAAOH,EAAO50E,CACxBW,GAAU26D,GAAMsZ,EAAO30E,CACvBU,GAAU46D,GAAMqZ,EAAOtxE,CACvByxE,IAAO/C,CAEP,IAAIzjD,EAAS,CAEZ+sC,EAAK0Z,EAAM,CACXzZ,GAAKyZ,EAAM,CACXJ,GAAO50E,EAAIuuB,EAAQymD,EACnBJ,GAAO30E,EAAIsuB,EAAQ+sC,EACnBsZ,GAAOtxE,EAAIirB,EAAQgtC,EACnBqZ,GAASC,EAAarvC,qBAAqBovC,EAC3CA,GAAOv/D,WACPkZ,GAAQymD,GAAOJ,EAAO50E,CACtBuuB,GAAQ+sC,GAAMsZ,EAAO30E,CACrBsuB,GAAQgtC,GAAMqZ,EAAOtxE,CACrB0xE,IAAON,EAGR,GAAIlmD,EAAU,CAEb8sC,EAAK2Z,EAAM,CACX1Z,GAAK0Z,EAAM,CACXL,GAAO50E,EAAIwuB,EAASymD,EACpBL,GAAO30E,EAAIuuB,EAAS8sC,EACpBsZ,GAAOtxE,EAAIkrB,EAAS+sC,EACpBqZ,GAASC,EAAarvC,qBAAqBovC,EAC3CA,GAAOv/D,WACPmZ,GAASymD,GAAOL,EAAO50E,CACvBwuB,GAAS8sC,GAAMsZ,EAAO30E,CACtBuuB,GAAS+sC,GAAMqZ,EAAOtxE,CACtB2xE,IAAON,GAIT9C,EAAmBnyE,IAAIiB,EAAWmE,EAElC,IAAI0vE,EACHA,EAAiB90E,IAAI6uB,EAASzpB,EAE/B,IAAI2vE,EACHA,EAAkB/0E,IAAI8uB,EAAU1pB,GAKpBlG,GAAAs2E,cAAd,SAA4BtD,EAAgCpwE,EAAoB2zE,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAI53B,GAA0Bo0B,EAAgBp0B,MAC9C,IAAIwf,GAAoB4U,EAAgBt1E,MAGxC64E,GAAc74E,OAAS,CAGvB,IAAI0gE,EAAap+D,EAAiBy2E,eAAiB7zE,EAAc5C,EAAiB02E,YACjF,MAAO93B,EAER,IAAIzhD,EACJ,IAAI0J,GAAoCmsE,EAAgBh0E,IAAIg0E,EAAgBnyE,MAAO21E,EACnF,IAAIG,GAA6B,GAAIhzE,MACrC,IAAIizE,GAA0B52E,EAAiB62E,UAG/CD,GAAUl5E,OAAS0gE,CACnB,KAAKjhE,EAAI,EAAGA,EAAIihE,EAAYjhE,IAC3By5E,EAAUz5E,IAAM,CAEjB,IAAI25E,EACJ,IAAIC,EACJ,IAAIzyE,GAAe,CACnB,IAAI0yE,GAAsBR,EAAYxD,EAAgB/wE,UAItD9E,GAAI,CACJ,OAAOA,EAAIihE,EAAa4Y,GAAgB75E,EAAI,EAAI6C,EAAiBy2E,eAAiBnyE,EAAQ,EAAItE,EAAiB02E,YAAa,CAC3HI,EAAgBjwE,EAAQ1J,EAExB,IAAIy5E,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAazyE,GACbsyE,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAax5E,KAAO45E,EAGrBn4B,EAAS,GAAI8pB,GAAiBsK,EAAgBj2B,KAAKi2B,EAAgB/wE,WAAY00E,EAAaj5E,OAAOs1E,EAAgB/wE,WAEnH+wE,GAAkBA,EAAgBrsE,MAAMi4C,EACxCo0B,GAAgBlyE,IAAI61E,EAEpB,OAAO/3B,GAGM5+C,GAAAi3E,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAc74E,OAClB,MAAOw5E,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAI/sC,GAAsB8sC,EAAaE,UAEvC,IAAIC,GAAwB,GAAI71D,YAAW+0D,EAAc74E,OAAOy5E,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAI35E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIyJ,GAAayoE,EAAc74E,MAC/B,KAAKP,EAAI,EAAGA,EAAI2Q,EAAK3Q,IAAK,CACzB45E,EAAa55E,EAAEg6E,CACfL,GAAgBP,EAAcp5E,GAAGg6E,CAEjC,KAAK9yE,EAAI,EAAGA,EAAI8yE,EAAQ9yE,IACvBgzE,EAAWN,EAAa1yE,GAAK+lC,EAAS0sC,EAAgBzyE,GAGxD6yE,EAAe,GAAIxO,GAAiByO,EAAQrpE,EAC5CopE,GAAaE,WAAaC,CAE1B,OAAOH,GAxjBOl3E,GAAA02E,YAAqB,KAErB12E,GAAAy2E,cAAuB,QAEvBz2E,GAAA62E,WAA2B,GAAIlzE,MAsjB/C,OAAA3D,KAEApC,GAA0BJ,QAAjBwC,InIq7nBNopE,8CAA8C7pE,UAAUqiB,6CAA6CriB,UAAUsI,8CAA8CtI,UAAUuI,8CAA8CvI,UAAU+3E,8CAA8C/3E,UAAUyd,gCAAgCzd,YAAYg4E,yCAAyC,SAAS76E,EAAQkB,EAAOJ",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\t\tnewInstance.name = this.name;\n\n\t\tnewInstance._iMaskID = this._iMaskID;\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\n\t\t\treturn;\n\t\tthis.keyframe_firstframes=[];\n\t\tthis.keyframe_constructframes=[];\n\t\tvar frame_cnt=0;\n\t\tvar ic=0;\n\t\tvar ic2=0;\n\t\tvar keyframe_cnt=0;\n\t\tvar last_construct_frame=0;\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame=keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\n\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\ttarget_mc.addScriptForExecution(this._framescripts[keyframe_idx]);\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id].clone();\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\n\t{\n\t\t//console.log(\"gotoframe\");\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\n\t\tif(frameIndex==value){\n\t\t\t//we are already on exactly this frame.\n\t\t\treturn;\n\t\t}\n\t\tif(current_keyframe_idx+1==target_keyframe_idx){\n\t\t\t// target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc);\n\t\t\treturn;\n\t\t}\n\n\t\tif(firstframe==value){\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx);\n\t\t}\n\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\n\t\t\t// already constructed - exit\n\t\t\treturn;\n\t\t}\n\n\n\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number=break_frame_idx;\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\tif((jump_forward)&&(!jump_gap)){\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\n\t\t}\n\t\tvar target_childs_dic:Object=[];\n\t\tvar i:number = target_mc.numChildren;\n\t\tvar child:DisplayObject;\n\n\t\tif(start_construct_idx==target_keyframe_idx){\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n\t\t\twhile(i--) {\n\t\t\t\t// todo free and unregister ?\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t}\n\n\t\twhile(i--){\n\t\t\tchild = target_mc.getChildAt(i);\n\t\t\tif(jump_gap){\n\t\t\t\t// if we jump forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\t// todo free and unregister ?\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t\tconsole.log(\"remove\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\ttarget_childs_dic[target_mc.getChildDepth(child)]=child;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt=0;\n\t\tvar k;\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\n\n\t\t\tif ((frame_recipe & 2) == 2){\n\t\t\t\t// remove childs\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_index_stream[frame_command_idx++];\n\t\t\t\tfor(var i:number = 0; i < len; i++){\n\t\t\t\t\tdelete target_childs_dic[(this.remove_child_stream[start_index+i] - 16383)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4){\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tvar len = this.command_index_stream[frame_command_idx++];\n\t\t\t\tfor(var i:number = 0; i < len; i++){\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\t\t\t\t\ttarget_childs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = target;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\n\t\t}\n\t\t//  step2: construct the final frame\n\n\t\tvar target_child_sessionIDS:Object={};\n\t\tfor (var key in target_childs_dic) {\n\t\t\ttarget_child_sessionIDS[(<DisplayObject>target_childs_dic[key])[\"__sessionID\"]]=key;\n\t\t}\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\n\t\tvar source_child_sessionIDS:Object={};\n\t\ti = target_mc.numChildren;\n\t\twhile(i--){\n\t\t\tchild=target_mc.getChildAt(i);\n\t\t\tif(target_child_sessionIDS[child[\"__sessionID\"]]==null){\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdelete target_childs_dic[target_child_sessionIDS[child[\"__sessionID\"]]];\n\t\t\t\tdelete target_child_sessionIDS[child[\"__sessionID\"]];\n\t\t\t}\n\t\t}\n\t\tfor (var key in target_childs_dic) {\n\t\t\tchild=target_childs_dic[key];\n\t\t\tif(child){\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number=0;\n\t\tfor(k=0;k<update_indices.length; k++){\n\t\t\tframe_command_idx=update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx] );\n\t\t}\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex);\n\t\t}\n\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1)==1) {\n\t\t\t\tvar i:number = target_mc.numChildren;\n\t\t\t\twhile (i--) {\n\t\t\t\t\tvar target:DisplayObject=target_mc.getChildAt(i);\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(target);\n\t\t\t\t\tif (target.isAsset(MovieClip) && (<MovieClip> target).adapter)\n\t\t\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t}\n\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\n\t\t\tif(target.isAsset(MovieClip) && (<MovieClip> target).adapter)\n\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\n\t\t}\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++){\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\n\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\n\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_cnt:number;\n\t\tvar props_start_idx:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tfor(var i:number = 0; i < len; i++) {\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\n\t\t\tif (target.parent == sourceMovieClip) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.isAsset(MovieClip))\n\t\t\t\t\tif ((<MovieClip>target).adapter.isBlockedByScript())\n\t\t\t\t\t\tdoit = false;\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\n\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:// masks\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tvar firstMaskID:number=this.properties_stream_int[value_start_index] - 1;\n\t\t\t\t\t\t\tif (mask_length == 1 && firstMaskID == -1) {\n\t\t\t\t\t\t\t\ttarget._iMaskID = childID;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\n\t\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getPotentialChildInstance(this.properties_stream_int[value_start_index++] - 1);\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(MovieClip))\n\t\t\t\t\t\t\t\t\t\t(<MovieClip> mask).mouseChildren = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tvar len:number = this._depths.length;\n\t\tvar index:number = len;\n\t\t\n\t\twhile (index--)\n\t\t\tif (this._depths[index] < depth)\n\t\t\t\tbreak;\n\n\t\tindex++;\n\n\t\tif (index < len) {\n\t\t\t//if replace flag & depths match current depth, remove the existing child\n\t\t\tif (this._depths[index] == depth) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tthis.removeChildAt(index);\n\t\t\t\t} else {\n\t\t\t\t\t//move depth of existing child up by 1\n\t\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.splice(index, 0, child);\n\t\t\tthis._depths.splice(index, 0, depth);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t\tthis._depths.push(depth);\n\n\t\t\tthis._nextHighestDepth = depth + 1;\n\t\t}\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index2];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tthis._depths.splice(index, 1);\n\n\t\t//if child is the last in array, update next highest depth\n\t\tif (index == this._children.length)\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tvar index:number = this._depths.indexOf(depth);\n\n\t\tif (index == -1)\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\n\n\t\treturn index;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n   // private _framescripts_to_execute:Array<Function>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._fps = 30;\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string) : void\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex() : number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex() : number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public reset():void\n    {\n        //console.log(\"reset name = \"+this.name);\n        if(this.adapter){\n            this.adapter.freeFromScript();\n        }\n\n        this._isPlaying = true;\n        this._time = 0;\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        var i:number=this.numChildren;\n        while (i--){\n            var child:DisplayObject=this.getChildAt(i);\n            this.adapter.unregisterScriptObject(child);\n            this.removeChildAt(i);\n        }\n\n        /*\n        // force reset all potential childs on timeline. // this seem to slow things down without having positive any effect\n        for (var key in this._potentialInstances) {\n            if (this._potentialInstances[key]) {\n                if (this._potentialInstances[key].isAsset(MovieClip))\n                    (<MovieClip>this._potentialInstances[key]).reset();\n            }\n        }\n        */\n\n        if(this.parent!=null){\n            this._skipAdvance = true;\n            if (this._timeline.numFrames)\n                this._timeline.gotoFrame(this, 0);\n            this._currentFrameIndex = 0;\n        }\n\n        // i was thinking we might need to reset all children, but it makes stuff worse\n        /*\n        var i:number=this.numChildren;\n        while (i--) {\n            var child = this.getChildAt(i);\n            if (child.isAsset(MovieClip))\n                (<MovieClip>child).reset();\n        }\n        */\n        //this.advanceChildren();\n\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames)\n                value = this._timeline.numFrames - 1;\n\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value);\n\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\t\tsuper.addChildAtDepth(child, depth, replace);\n      /*  if(child.isAsset(MovieClip))\n            (<MovieClip>child).reset();*/\n        return child;\n    }\n\n    public get fps():number\n    {\n        return this._fps;\n    }\n\n    public set fps(newFps:number)\n    {\n        this._fps = newFps;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update(timeDelta:number)\n    {\n        //this.logHierarchy();\n        // TODO: Implement proper elastic racetrack logic\n        var frameMarker:number = Math.floor(1000/this._fps);\n\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\n        this._time += Math.min(timeDelta, frameMarker);\n\n        if (this._time >= frameMarker) {\n            this._time = 0;\n            this.advanceFrame();\n            // after we advanced the scenegraph, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n\n            // now we want to execute the onEnter\n            this.dispatchEvent(this._enterFrame);\n            // after we executed the onEnter, we might have some script that needs executing\n            FrameScriptManager.execute_queue();\n            //console.log(\"update \"+this._currentFrameIndex);\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\n        }\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n    public addScriptForExecution(value:Function)\n    {\n        FrameScriptManager.add_script_to_queue(this, value);\n    }\n    public activateChild(id:number)\n    {\n        this.addChild(this.getPotentialChildInstance(id));\n    }\n\n    public deactivateChild(id:number)\n    {\n        this.removeChild(this._potentialInstances[id]);\n    }\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._fps = this._fps;\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n        this.reset();\n        /*  if(child.isAsset(MovieClip))\n         (<MovieClip>child).reset();*/\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var i;\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\n                advance = false;\n            }\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                //console.log(\"one frame clip\");\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n            if (advance) {\n                //console.log(\"advance\");\n                ++this._currentFrameIndex;\n                if (this._currentFrameIndex == this._timeline.numFrames) {\n                    // looping - jump to first frame.\n                    this.currentFrameIndex=0;\n                }\n                else if (oldFrameIndex != this._currentFrameIndex){\n                    // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n\n        }\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len = this.numChildren;\n        for (var i = 0; i <  len; ++i) {\n            var child = this.getChildAt(i);\n            if (child instanceof MovieClip)\n                (<MovieClip>child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        for (var i = 0; i < len; i++) {\n            var child = this.getChildAt(i);\n\n            if (child instanceof MovieClip)\n                (<MovieClip>child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target._iMaskID;\n        console.log(str);\n    }\n\n    executePostConstructCommands():boolean\n    {\n        return true;\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tvar i=0;\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif((mc.parent!=null)||(mc.name==\"Scene 1\")) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tpublic _sceneGraphDepths:Array<number> = new Array<number>();\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:DisplayObject;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tnode.removeFromParent();\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport SceneGraphNodePool = require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\n\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends NodeBase\n{\n    private _container : DisplayObjectContainer;\n    private _pool : SceneGraphNodePool;\n    private _partition:Partition;\n\n    constructor(pool:SceneGraphNodePool, container:DisplayObjectContainer, partition:Partition)\n    {\n        super();\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n\t//\n    ///**\n    // *\n    // * @param entity\n    // * @returns {away.partition.NodeBase}\n    // */\n    //public findPartitionForEntity(entity:IEntity):NodeBase\n    //{\n    //    var sceneGraphNode:SceneGraphNode = this._pool.getItem(entity.parent);\n    //    if (sceneGraphNode != this)\n    //        this.findNodeForContainer();\n    //\n    //\n    //        return sceneGraphNode;\n    //    }\n    //    return this;\n    //}\n\t//\n    //public iAddNode(node:NodeBase)\n    //{\n    //    super.iAddNode(node);\n\t//\n    //    //recalc depth array\n    //    var entityNode = <EntityNode>(node);\n    //    entityNode._sceneGraphDepths.length = 0;\n\t//\n    //    var parent:DisplayObjectContainer;\n    //    var child:DisplayObject = entityNode.entity;\n    //    while ((parent = child.parent)) {\n    //        entityNode._sceneGraphDepths.push(parent.getChildDepth(child));\n    //        child = parent;\n    //    }\n    //}\n}\nexport = SceneGraphNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport ISceneGraphNodeClass\t\t\t= require(\"awayjs-display/lib/pool/ISceneGraphNodeClass\");\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool\n{\n\tprivate _sceneGraphNodePool:Object = new Object();\n\tprivate _sceneGraphNodeClass:ISceneGraphNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param sceneGraphNodeClass\n\t */\n\tconstructor(sceneGraphNodeClass:ISceneGraphNodeClass, partition:Partition)\n\t{\n\t\tthis._sceneGraphNodeClass = sceneGraphNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param displayObjectContainer\n\t * @returns SceneGraphNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._sceneGraphNodePool[displayObjectContainer.id] || (this._sceneGraphNodePool[displayObjectContainer.id] = new this._sceneGraphNodeClass(this, displayObjectContainer, this._partition)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param displayObjectContainer\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\tvar sceneGraphNode:SceneGraphNode = this._sceneGraphNodePool[displayObjectContainer.id];\n\n\t\tif (sceneGraphNode)\n\t\t\tthis._sceneGraphNodePool[displayObjectContainer.id] = null;\n\n\t\treturn sceneGraphNode;\n\t}\n}\n\nexport = SceneGraphNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
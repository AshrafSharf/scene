{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\t//check if nmot solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean = false;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = this.name;\n\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = this.name;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\t\treturn child;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\n\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n        this._iCopyToMesh(clone);\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "childHit",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag);\r\n\t\t\tif(childHit) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\t//thought I would need the global hit point converted into local space, but not sure how to hook it in\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tvar hit:boolean = false;\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(!this.getBox().contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++)\r\n\t\t\t\tif(this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag);\r\n\r\n\t\tif(hit)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.split(\"\\n\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
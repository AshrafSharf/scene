{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_subGeometry",
    "usages",
    "_clearInterfaces",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "_parentMesh",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "child",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "end_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "_addTimelineChildAt",
    "Number",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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,GAC/B10E,MAAK00E,YAAY,cAAgB,GACjC10E,MAAK00E,YAAY,QAAU,GAC3B10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,eAAiB,KAClC10E,MAAK00E,YAAY,gBAAkB,OACnC10E,MAAK00E,YAAY,WAAa,OAC9B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,iBAAmB,QACpC10E,MAAK00E,YAAY,mBAAqB,OACtC10E,MAAK00E,YAAY,iBAAmB,OACpC10E,MAAK00E,YAAY,YAAc,KAC/B10E,MAAK00E,YAAY,QAAU,KAC3B10E,MAAK00E,YAAY,aAAe,OAChC10E,MAAK00E,YAAY,iBAAmB,KACpC10E,MAAK00E,YAAY,QAAU,KAC3B10E,MAAK00E,YAAY,QAAU,KAC3B10E,MAAK00E,YAAY,aAAe,OAChC10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,oBAAsB,OACvC10E,MAAK00E,YAAY,gBAAkB,OACnC10E,MAAK00E,YAAY,kBAAoB,OACrC10E,MAAK00E,YAAY,YAAc,OAC/B10E,MAAK00E,YAAY,aAAe,KAChC10E,MAAK00E,YAAY,SAAW,KAC5B10E,MAAK00E,YAAY,eAAiB,OAClC10E,MAAK00E,YAAY,aAAe,OAChC10E,MAAK00E,YAAY,QAAU,KAC3B10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,aAAe,OAChC10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,eAAiB,KAClC10E,MAAK00E,YAAY,qBAAuB,KACxC10E,MAAK00E,YAAY,kBAAoB,OACrC10E,MAAK00E,YAAY,aAAe,OAChC10E;KAAK00E,YAAY,SAAW,OAC5B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,iBAAmB,QACpC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,QAAU,QAC3B10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,iBAAmB,QACpC10E,MAAK00E,YAAY,kBAAoB,QACrC10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,OAAS,QAC1B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,eAAiB,OAClC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,QAAU,QAC3B10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,WAAa,OAC9B10E,MAAK00E,YAAY,UAAY,OAC7B10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,OAAS,QAC1B10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,QAAU,QAC3B10E,MAAK00E,YAAY,iBAAmB,QACpC10E,MAAK00E,YAAY,mBAAqB,QACtC10E,MAAK00E,YAAY,UAAY,OAC7B10E,MAAK00E,YAAY,eAAiB,OAClC10E,MAAK00E,YAAY,gBAAkB,OACnC10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,UAAY,OAC7B10E,MAAK00E,YAAY,cAAgB,OACjC10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,gBAAkB,QACnC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,QAAU,QAC3B10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,wBAA0B,QAC3C10E,MAAK00E,YAAY,gBAAkB,QACnC10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,eAAiB,QAClC10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,WAAa,QAC9B10E,MAAK00E,YAAY,gBAAkB,QACnC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,iBAAmB,QACpC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,QAAU,QAC3B10E,MAAK00E,YAAY,SAAW,QAC5B10E,MAAK00E,YAAY,cAAgB,QACjC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,aAAe,QAChC10E,MAAK00E,YAAY,UAAY,QAC7B10E,MAAK00E,YAAY,YAAc,QAC/B10E,MAAK00E,YAAY,QAAU,OAC3B10E,MAAK00E,YAAY,kBAAoB,OACrC10E,MAAK00E,YAAY,aAAe,OAChC10E,MAAK00E,YAAY,WAAa,OAC9B10E,MAAK00E,YAAY,iBAAmB,OACpC10E,MAAK00E,YAAY,SAAW,CAC5B10E,MAAK00E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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t\tthis._subGeometry.usages++;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry._clearInterfaces();\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis._clearInterfaces();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (this._inheritColorTransform && this._pParent) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\n\t\t\tthis._pRenderables[i].dispose();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t\tthis._subGeometry.usages++;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry._clearInterfaces();\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tpublic usages:number = 0;\n\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tthis.usages--;\n\n\t\tif (!this.usages) {\n\t\t\tfor (var i:number = this._subGeometryVO.length - 1; i >= 0; i--)\n\t\t\t\tthis._subGeometryVO[i].dispose();\n\t\t}\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tprivate _parentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._parentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._parentMesh = parentMesh;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tthis._parentMesh = null;\n\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\n\t\t\tthis._renderables[i].dispose();\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar frame_command_idx:number;\n\t\tvar frame_recipe:number;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tframe_command_idx = this.frame_command_indices[k];\n\t\t\tframe_recipe = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[start_index + i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar child:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\tsourceMovieClip._addTimelineChildAt(child, this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 201:\n\t\t\t\t\t\t\ttarget.masks = null;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis._subGeometry = subGeometry;\n\t\tthis._subGeometry.usages++;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._subGeometry._clearInterfaces();\n\t\tthis._subGeometry = null;\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i].dispose();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i]._clearInterfaces();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.geometry = this._geometry;\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._clearInterfaces();\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField = require(\"awayjs-display/lib/entities/TextField\");\n\nimport MouseEvent               = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                 = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager       = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        if (this._currentFrameIndex == value)\n            return;\n\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n\n            var skip_script:boolean = false;\n\n            if (value < 0) {\n                value = 0;\n            } else if (value >= this._timeline.numFrames) {\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n        }\n\n        this._currentFrameIndex = value;\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        var numFrames:number = this._timeline.numFrames;\n        if(numFrames) {\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != numFrames - 1 || this.loop)) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else { // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren) {\n                var len:number = this.numChildren;\n                var child:DisplayObject;\n                for (var i:number = 0; i <  len; ++i) {\n                    child = this._children[i];\n\n                    if (child.isAsset(MovieClip))\n                        (<MovieClip> child).advanceFrame();\n                }\n            }\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public _clearInterfaces()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                instance.dispose();\n                delete this._potentialInstances[key];\n            } else {\n                instance._clearInterfaces();\n            }\n        }\n\n        super._clearInterfaces();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry=new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
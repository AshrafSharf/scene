{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "DisplayObjectContainer",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_maskMode",
    "mouseEnabled",
    "isAsset",
    "mouseChildren",
    "MASK_ID",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "bitFlag",
    "dif",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "partition",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "child_depths",
    "getChildDepths",
    "sessionID_depths",
    "end_index",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "key",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localTouchPoint",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\n\t\tthis.mouseEnabled = !value;\n\t\tif(this.isAsset(DisplayObjectContainer))\n\t\t\t(<DisplayObjectContainer> this).mouseChildren = !value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\n\t\t//newInstance.name = this.name;\n\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.masks = this._explicitMasks? this._explicitMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tvar dif:number = (this._hierarchicalPropsDirty ^ bitFlag) & bitFlag;\n\t\tif (!dif)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= bitFlag;\n\n\t\tif (dif & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (this._inheritColorTransform && this._pParent) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar child_depths = target_mc.getChildDepths();\n\t\tvar sessionID_depths:Object = {};\n\t\tvar i:number;\n\t\tvar end_index:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\t\tvar depth:number;\n\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc._children[i];\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\tsessionID_depths[child._depthID] = child._sessionID;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\t\t\tvar start_index:number;\n\t\t\tvar idx:number;\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\n\t\t\t\t\tdelete child_depths[depth];\n\t\t\t\t\tdelete sessionID_depths[depth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\n\t\t\t\t\tidx = i*2;\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\n\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\n\t\t\t\t\tchild_depths[depth] = target;\n\t\t\t\t\tsessionID_depths[depth] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\n\t\t//  step2: construct the final frame\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tdepth = child._depthID;\n\t\t\tif (sessionID_depths[depth] == child._sessionID)\n\t\t\t\tdelete sessionID_depths[depth];\n\t\t\telse\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t}\n\n\t\tfor (var key in sessionID_depths) {\n\t\t\tchild = child_depths[key];\n\t\t\tchild._sessionID = sessionID_depths[key];\n\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tvar len:number = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar end_index:number = start_index + len;\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\n\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\n\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\n\n\t\t\t\t\t\t\ttarget.masks = masks;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 200:// displaytransform\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _active_depths:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._active_depths[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this._active_depths[depth];\n\t}\n\n\tpublic getChildDepths():Object\n\t{\n\t\treturn this._active_depths;\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\t//check to make sure _active_depths wasn't modified with a new child\n\t\tif (this._active_depths[child._depthID] == this)\n\t\t\tdelete this._active_depths[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._active_depths[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._active_depths[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localTouchPoint:TouchPoint;\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalTouchPoint = new TouchPoint();\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoint.x = localPosition.x;\n\t\t\tlocalTouchPoint.y = localPosition.y;\n\t\t\tlocalTouchPoints.push(localTouchPoint);\n\t\t}\n\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this._children[i].clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(super._hitTestPointInternal(x, y, shapeFlag, masksFlag))\n\t\t\treturn true;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\tthis._tempPoint.setTo(x,y);\n\t\tvar local:Point = this.globalToLocal(this._tempPoint);\n\n\n\t\tif(this._geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\t//early out for non-shape tests\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\n\t\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0))\n\t\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Object;\n    private _active_session_ids:Object;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._active_session_ids = {};\n        this._potentialInstances = {};\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex():number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            var skip_script:boolean=false;\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames){\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._active_session_ids[sessionID];\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        super.addChildAtDepth(child, depth, true);\n\n        this._active_session_ids[child._sessionID] = child;\n\n\n        return child;\n    }\n\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject = super.removeChildAtInternal(index);\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        delete this._active_session_ids[child._sessionID];\n\n        child._sessionID = -1;\n\n        return child;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n\n        FrameScriptManager.execute_intervals();\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop)\n                advance = false;\n\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n\n            if (advance) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else if (oldFrameIndex != this._currentFrameIndex){ // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n        }\n\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len:number = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\n\t\t\t\tvar line_width:number = 0;\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar font_chars_scale:Array<number> =[];\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\tif(this_char == null) {\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\n\t\t\t\t}\n\t\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t\t}\n\t\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\n\t\t\t\t}\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\t\tchar_scale = font_chars_scale[i];\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len:number = this.numChildren;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
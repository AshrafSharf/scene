{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_loaderInfo",
    "_maskMode",
    "_pUpdateImplicitMaskId",
    "_iAssignedMaskId",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "_explicitMasks",
    "maskMode",
    "_pUpdateImplicitMasks",
    "_iAssignedMasks",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_pImplicitMasks",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iMasksConfig",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "child",
    "_children",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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gB,GACjC71E,MAAK61E,YAAY,QAAU,GAC3B71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,eAAiB,KAClC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,WAAa,OAC9B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,mBAAqB,OACtC71E,MAAK61E,YAAY,iBAAmB,OACpC71E,MAAK61E,YAAY,YAAc,KAC/B71E,MAAK61E,YAAY,QAAU,KAC3B71E;KAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,iBAAmB,KACpC71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,oBAAsB,OACvC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,kBAAoB,OACrC71E,MAAK61E,YAAY,YAAc,OAC/B71E,MAAK61E,YAAY,aAAe,KAChC71E,MAAK61E,YAAY,SAAW,KAC5B71E,MAAK61E,YAAY,eAAiB,OAClC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,eAAiB,KAClC71E,MAAK61E,YAAY,qBAAuB,KACxC71E,MAAK61E,YAAY,kBAAoB,OACrC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,SAAW,OAC5B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,aAAe,QACh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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tprivate _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._pUpdateImplicitMaskId(this._pParent? this._pParent._iAssignedMaskId() : -1);\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\n\t\tthis._pUpdateImplicitMasks(this._pParent? this._pParent._iAssignedMasks() : null);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\n\t{\n\t\tif (!newInstance)\n\t\t\tnewInstance = new DisplayObject();\n\n\t\tnewInstance.pivot = this.pivot;\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\n\t\t//newInstance.name = this.name;\n\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.masks = this._explicitMasks? this._explicitMasks.concat() : null;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D);\n\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\t\tthis.maskMode = false;\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitMaskId(value._iAssignedMaskId());\n\t\t\tthis._pUpdateImplicitMasks(value._iAssignedMasks());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitMaskId(-1);\n\t\t\tthis._pUpdateImplicitMasks(null);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:PartitionBase, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tthis._pImplicitMaskId = (value != -1)? value : this._explicitMaskId;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tthis._pImplicitMasks = (value != null)? (this._explicitMasks != null)? value.concat([this._explicitMasks]) : value.concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices=[];\n\n\t\tthis._potentialPrototypes=[];\n\t\tthis._labels={};\n\t\tthis._framescripts={};\n\t\tthis._framescripts_translated={};\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChilds() : Array<DisplayObject>\n\t{\n\t\treturn this._potentialPrototypes;\n\t}\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\n\t\tthis_clone.name=\"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index>=0)\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\n\n\t}\n\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:Boolean=false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\n\t\tif (frameIndex == value) //we are already on exactly this frame.\n\t\t\treturn;\n\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tif ((!skip_script) && (firstframe == value)) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = break_frame_idx;\n\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\n\n\t\tvar target_childs_dic:Object = {};\n\t\tvar target_sessionIDs_dic:Object = {};\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar k:number;\n\t\tvar child:DisplayObject;\n\t\tvar depth:number;\n\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\n\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\n\t\t\t// before we do that, we need to clear the childlist\n/*\n\t\t\twhile(i--){\n\t\t\t\tchild = target_mc._children[i];\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t}\n\t\t\ttarget_mc.set_currentFrameIndex(value);\n\t\t\tthis.constructNextFrame(target_mc, false);\n\t\t\treturn;\n\t\t\t*/\n\t\t}\n\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\t\ttarget_mc.removeChild(child);\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\t\t\tdepth = target_mc.getChildDepth(child);\n\t\t\t\ttarget_childs_dic[depth] = child;\n\t\t\t\ttarget_sessionIDs_dic[depth] = child._sessionID;\n\t\t\t}\n\t\t}\n\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\t\t\tvar start_index:number;\n\t\t\tvar idx:number;\n\n\t\t\tif ((frame_recipe & 2) == 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tdepth = this.remove_child_stream[start_index + i] - 16383;\n\t\t\t\t\tdelete target_childs_dic[depth];\n\t\t\t\t\tdelete target_sessionIDs_dic[depth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((frame_recipe & 4) == 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tidx = start_index*2 + i*2;\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\n\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\n\t\t\t\t\ttarget_childs_dic[depth] = target;\n\t\t\t\t\ttarget_sessionIDs_dic[depth] = start_index + i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((frame_recipe & 8) == 8)\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t\t//  step2: construct the final frame\n\n\t\tvar target_child_sessionIDS:Object = {};\n\t\tfor (var key in target_sessionIDs_dic)\n\t\t\tif (target_sessionIDs_dic[key] != null)\n\t\t\t\ttarget_child_sessionIDS[target_sessionIDs_dic[key]] = key;\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (target_child_sessionIDS[child._sessionID]) {\n\t\t\t\tdelete target_childs_dic[target_child_sessionIDS[child._sessionID]];\n\t\t\t\tdelete target_sessionIDs_dic[target_child_sessionIDS[child._sessionID]];\n\t\t\t\ttarget_child_sessionIDS[child._sessionID] = null;\n\t\t\t} else {\n\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in target_childs_dic) {\n\t\t\tchild = target_childs_dic[key];\n\t\t\tif(child) {\n\t\t\t\tchild._sessionID = target_sessionIDs_dic[key];\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\n\t\t\t}\n\t\t}\n\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tvar frame_command_idx:number;\n\t\tlen = update_indices.length;\n\t\tfor (k = 0; k < len; k++) {\n\t\t\tframe_command_idx = update_indices[k];\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\n\t\t}\n\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\n\t}\n\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif((frame_recipe & 1) == 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if ((frame_recipe & 2)==2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\t\t\t}\n\n\t\t\tif((frame_recipe & 4)==4)\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\n\n\t\t\tif((frame_recipe & 8)==8)\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tfor (var i:number = len - 1; i >= 0; i--) {\n\t\t\tidx = (start_index + i)*2;\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\n\t\t\ttarget._sessionID = start_index + i;\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\n\t\t}\n\t}\n\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\n\t{\n\t\tvar props_start_idx:number;\n\t\tvar props_len:number;\n\t\tvar props_end_index:number;\n\t\tvar value_start_index:number;\n\t\tvar props_type:number;\n\t\tvar doit:boolean;\n\t\tvar end_index:number = start_index + len;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (target != null) {\n\t\t\t\tdoit = true;\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\n\t\t\t\t\tdoit = false;\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + props_len;\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\n\t\t\t\t\tprops_type = this.property_type_stream[p];\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\n\t\t\t\t\tswitch(props_type){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\n\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\n\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateSceneTransform();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 2:// colormatrix\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t// mask the mc with a list of objects\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\n\t\t\t\t\t\t\tvar mask:DisplayObject;\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\t\t\t\t\t\tvar numMasks:number=this.properties_stream_int[value_start_index++];\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++){\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]))) {\n\t\t\t\t\t\t\t\t\tmasks[m] = mask;\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\n\t\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.masks = masks;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:// instance name button instance\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 6://visible\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 11:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\n\n\t\t\t\t\t\t\t\ttarget.pInvalidateSceneTransform();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 12:// displaytransform\n\t\t\t\t\t\t\tif (doit) {\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 200:// displaytransform\n\t\t\t\t\t\t\ttarget.maskMode = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._children.push(child);\n\t\tthis._depths.push(depth);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._depths.length)? this._depths[index] : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\n\t{\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\n\n\t\tnewInstance.partition = this.partition;\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\n\t\tnewInstance.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\n\t\treturn newInstance;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index2];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMaskId(value:number)\n\t{\n\t\tsuper._pUpdateImplicitMaskId(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMaskId(this._pImplicitMaskId);\n\t}\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\n\t{\n\t\tsuper._pUpdateImplicitMasks(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMasks(this._pImplicitMasks);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:PartitionBase, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tvar depth:number = this._depths.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == depth + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\treturn this._depths.indexOf(depth);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._depths.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._depths[i])\n\t\t\t\tthis._nextHighestDepth = this._depths[i];\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tvar masks:Array<DisplayObject> = this.masks;\n\n\t\tif (masks) {\n\t\t\tvar numMasks:number = masks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\n\t{\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\n\n\t\tthis._containerNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this.numChildren;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iSetScene(this);\n\t\tthis._iIsRoot = true;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this._children[i].clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(super._hitTestPointInternal(x, y, shapeFlag, masksFlag))\n\t\t\treturn true;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\tthis._tempPoint.setTo(x,y);\n\t\tvar local:Point = this.globalToLocal(this._tempPoint);\n\n\n\t\tif(this._geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\t//early out for non-shape tests\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\n\t\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0))\n\t\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\n\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\n\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number;// the current time inside the animation\n    private _currentFrameIndex:number;// the current frame\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\n\n    private _isPlaying:boolean;// false if paused or stopped\n    private _loop:boolean = true;\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit : boolean;\n\n    private _potentialInstances:Array<DisplayObject>;\n    private _active_session_ids:Array<DisplayObject>;\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n        this._active_session_ids=[];\n        this._potentialInstances = [];\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        this._isInit=true;\n        this._isPlaying = true; // auto-play\n        this._isButton=false;\n\n        this._time = 0;\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    public get loop()\n    {\n        return this._loop;\n    }\n\n    public set loop(value:boolean)\n    {\n        this._loop = value;\n    }\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n    public get constructedKeyFrameIndex():number\n    {\n        return this._constructedKeyFrameIndex;\n    }\n\n    public set constructedKeyFrameIndex(value : number)\n    {\n        this._constructedKeyFrameIndex = value;\n    }\n\n    public exit_frame():void\n    {\n        this._skipAdvance = false;\n\n        var child:DisplayObject;\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\n            child = this._children[i];\n            if(child.isAsset(MovieClip))\n                (<MovieClip> child).exit_frame();\n        }\n    }\n    public reset():void\n    {\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this._isPlaying = true;\n\n        this._currentFrameIndex = -1;\n        this._constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = true;\n\n        if (this._timeline.numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n\n    }\n\n    /*\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\n     */\n    public set_currentFrameIndex(value : number) {\n        this._skipAdvance = true;\n        this._currentFrameIndex = value;\n    }\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public set currentFrameIndex(value : number)\n    {\n        if(this._timeline.numFrames) {\n            value = Math.floor(value);\n            var skip_script:boolean=false;\n            if (value < 0)\n                value = 0;\n            else if (value >= this._timeline.numFrames){\n                value = this._timeline.numFrames - 1;\n                skip_script=true;\n            }\n\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\n            this._skipAdvance = true;\n            //this._time = 0;\n\n            this._timeline.gotoFrame(this, value, skip_script);\n            this._currentFrameIndex = value;\n        }\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._active_session_ids[sessionID];\n    }\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset_to_init_state();// this takes care of transform and visibility\n\t\tsuper.addChildAtDepth(child, depth, replace);\n        if(child.isAsset(MovieClip))(<MovieClip>child).reset();\n        this._active_session_ids[child._sessionID]=child;\n        return child;\n    }\n\n    public removeChild(child:DisplayObject):DisplayObject\n    {\n        super.removeChild(child);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n\n    public removeChildAtDepth(depth:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject=super.removeChildAtDepth(depth);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n    public removeChildAt(index:number /*int*/):DisplayObject\n    {\n        var child:DisplayObject=super.removeChildAt(index);\n        if(child.adapter)child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        this._active_session_ids[child._sessionID]=null;\n        return child;\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        this.advanceFrame();\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n\n        FrameScriptManager.execute_intervals();\n        FrameScriptManager.execute_queue();\n\n        this.exit_frame();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id]) {\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        }\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone(newInstance:MovieClip = null) : DisplayObject\n    {\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\n\n        newInstance._loop = this._loop;\n\n        return newInstance;\n    }\n\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tsuper.iSetParent(value);\n\t}\n\n    public advanceFrame(skipChildren:boolean = false)\n    {\n        if(this._timeline.numFrames) {\n            var oldFrameIndex = this._currentFrameIndex;\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\n\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop)\n                advance = false;\n\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\n                this._currentFrameIndex = 0;\n                advance = false;\n            }\n\n            if (advance) {\n                this._currentFrameIndex++;\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\n                    this.currentFrameIndex = 0;\n                } else if (oldFrameIndex != this._currentFrameIndex){ // not looping - construct next frame\n                    this._timeline.constructNextFrame(this);\n                }\n            }\n\n            if (!skipChildren)\n                this.advanceChildren();\n        }\n\n        this._skipAdvance = false;\n    }\n\n    private advanceChildren()\n    {\n        var len:number = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n    }\n\n\n\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this.numChildren;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue=value.toString();\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tget textColor(){\n\t\treturn this._textColor;\n\t}\n\tset textColor(value:number){\n\t\tthis._textColor=value;\n\t\tif(this.colorTransform==null){\n\t\t\tthis.colorTransform=new ColorTransform();\n\t\t}\n\t\tthis.colorTransform.color=value;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\n\t\t\t\tvar line_width:number = 0;\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar font_chars_scale:Array<number> =[];\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\tif(this_char == null) {\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\n\t\t\t\t}\n\t\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t\t}\n\t\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\n\t\t\t\t}\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\t\tchar_scale = font_chars_scale[i];\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len:number = this.numChildren;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2=[];\n\t\tthis._queued_scripts_pass2=[];\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs=[];\n\t\tthis._queued_scripts=[];\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    public findParentForNode(node:IDisplayObjectNode):INode\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer)\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\n\n        return this._pool.getItem(node.displayObject.parent);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = this._container.getChildDepth(node.displayObject);\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\t//this._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor(rootContainer:DisplayObjectContainer)\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\n\n\t\tif (containerNode) {\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\n\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t\t}\n\n\t\treturn containerNode;\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\n\n\t\tif (entityNode) {\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\n\n\t\t\tdelete this._entityNodePool[displayObject.id];\n\t\t}\n\n\t\treturn entityNode;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
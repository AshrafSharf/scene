<<<<<<< HEAD
{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-display.js","awayjs-display/lib/animators/nodes/AnimationNodeBase.ts","awayjs-display/lib/base/AlignmentMode.ts","awayjs-display/lib/base/CapsStyle.ts","awayjs-display/lib/base/CurveSubGeometry.ts","awayjs-display/lib/base/CurveSubMesh.ts","awayjs-display/lib/base/DisplayObject.ts","awayjs-display/lib/base/Geometry.ts","awayjs-display/lib/base/GradientType.ts","awayjs-display/lib/base/GraphicsPathWinding.ts","awayjs-display/lib/base/Graphics.ts","awayjs-display/lib/base/InterpolationMethod.ts","awayjs-display/lib/base/JointStyle.ts","awayjs-display/lib/base/LightBase.ts","awayjs-display/lib/base/LineScaleMode.ts","awayjs-display/lib/base/LineSubGeometry.ts","awayjs-display/lib/base/LineSubMesh.ts","awayjs-display/lib/base/LoaderInfo.ts","awayjs-display/lib/base/OrientationMode.ts","awayjs-display/lib/base/PixelSnapping.ts","awayjs-display/lib/base/SpreadMethod.ts","awayjs-display/lib/base/SubGeometryBase.ts","awayjs-display/lib/base/SubMeshBase.ts","awayjs-display/lib/base/Transform.ts","awayjs-display/lib/base/TriangleCulling.ts","awayjs-display/lib/base/TriangleSubGeometry.ts","awayjs-display/lib/base/TriangleSubMesh.ts","awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts","awayjs-display/lib/bounds/BoundingSphere.ts","awayjs-display/lib/bounds/BoundingVolumeBase.ts","awayjs-display/lib/bounds/BoundsType.ts","awayjs-display/lib/bounds/NullBounds.ts","awayjs-display/lib/containers/DisplayObjectContainer.ts","awayjs-display/lib/containers/Loader.ts","awayjs-display/lib/containers/Scene.ts","awayjs-display/lib/containers/View.ts","awayjs-display/lib/controllers/ControllerBase.ts","awayjs-display/lib/controllers/FirstPersonController.ts","awayjs-display/lib/controllers/FollowController.ts","awayjs-display/lib/controllers/HoverController.ts","awayjs-display/lib/controllers/LookAtController.ts","awayjs-display/lib/controllers/SpringController.ts","awayjs-display/lib/display/ContextMode.ts","awayjs-display/lib/entities/Billboard.ts","awayjs-display/lib/entities/Camera.ts","awayjs-display/lib/entities/DirectionalLight.ts","awayjs-display/lib/entities/LightProbe.ts","awayjs-display/lib/entities/LineSegment.ts","awayjs-display/lib/entities/Mesh.ts","awayjs-display/lib/entities/PointLight.ts","awayjs-display/lib/entities/Shape.ts","awayjs-display/lib/entities/Skybox.ts","awayjs-display/lib/entities/TextField.ts","awayjs-display/lib/errors/CastError.ts","awayjs-display/lib/events/CameraEvent.ts","awayjs-display/lib/events/DisplayObjectEvent.ts","awayjs-display/lib/events/GeometryEvent.ts","awayjs-display/lib/events/LightEvent.ts","awayjs-display/lib/events/MaterialEvent.ts","awayjs-display/lib/events/MouseEvent.ts","awayjs-display/lib/events/RenderableOwnerEvent.ts","awayjs-display/lib/events/RendererEvent.ts","awayjs-display/lib/events/ResizeEvent.ts","awayjs-display/lib/events/SceneEvent.ts","awayjs-display/lib/events/StageEvent.ts","awayjs-display/lib/events/SubGeometryEvent.ts","awayjs-display/lib/managers/DefaultMaterialManager.ts","awayjs-display/lib/managers/MouseManager.ts","awayjs-display/lib/materials/BasicMaterial.ts","awayjs-display/lib/materials/CSSMaterialBase.ts","awayjs-display/lib/materials/CurveMaterial.ts","awayjs-display/lib/materials/LightSources.ts","awayjs-display/lib/materials/MaterialBase.ts","awayjs-display/lib/materials/lightpickers/LightPickerBase.ts","awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts","awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts","awayjs-display/lib/partition/CameraNode.ts","awayjs-display/lib/partition/DirectionalLightNode.ts","awayjs-display/lib/partition/EntityNode.ts","awayjs-display/lib/partition/LightProbeNode.ts","awayjs-display/lib/partition/NodeBase.ts","awayjs-display/lib/partition/NullNode.ts","awayjs-display/lib/partition/Partition.ts","awayjs-display/lib/partition/PointLightNode.ts","awayjs-display/lib/partition/SkyboxNode.ts","awayjs-display/lib/pick/PickingCollisionVO.ts","awayjs-display/lib/pick/RaycastPicker.ts","awayjs-display/lib/pool/CSSBillboardRenderable.ts","awayjs-display/lib/pool/CSSLineSegmentRenderable.ts","awayjs-display/lib/pool/CSSRenderableBase.ts","awayjs-display/lib/pool/CSSSkyboxRenderable.ts","awayjs-display/lib/pool/EntityListItemPool.ts","awayjs-display/lib/pool/EntityListItem.ts","awayjs-display/lib/pool/EntityNodePool.ts","awayjs-display/lib/prefabs/PrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts","awayjs-display/lib/prefabs/PrimitiveConePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts","awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts","awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts","awayjs-display/lib/prefabs/PrimitivePrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts","awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts","awayjs-display/lib/render/CSSDefaultRenderer.ts","awayjs-display/lib/render/CSSRendererBase.ts","awayjs-display/lib/sort/RenderableMergeSort.ts","awayjs-display/lib/sort/RenderableNullSort.ts","awayjs-display/lib/text/AntiAliasType.ts","awayjs-display/lib/text/GridFitType.ts","awayjs-display/lib/text/TextFieldAutoSize.ts","awayjs-display/lib/text/TextFieldType.ts","awayjs-display/lib/text/TextFormatAlign.ts","awayjs-display/lib/text/TextFormat.ts","awayjs-display/lib/text/TextInteractionMode.ts","awayjs-display/lib/text/TextLineMetrics.ts","awayjs-display/lib/traverse/CSSEntityCollector.ts","awayjs-display/lib/traverse/CollectorBase.ts","awayjs-display/lib/traverse/EntityCollector.ts","awayjs-display/lib/traverse/RaycastCollector.ts","awayjs-display/lib/traverse/ShadowCasterCollector.ts","awayjs-display/lib/utils/Cast.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-display\\lib\\animators\\IAnimationSet","module","awayjs-display\\lib\\animators\\IAnimator","awayjs-display\\lib\\animators\\nodes\\AnimationNodeBase","__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","AssetType","NamedAssetBase","AnimationNodeBase","_super","Object","defineProperty","get","_pStateClass","enumerable","configurable","dispose","ANIMATION_NODE","awayjs-core/lib/library/AssetType","undefined","awayjs-core/lib/library/NamedAssetBase","awayjs-display\\lib\\base\\AlignmentMode","AlignmentMode","REGISTRATION_POINT","PIVOT_POINT","awayjs-display\\lib\\base\\CapsStyle","CapsStyle","ROUND","NONE","SQUARE","awayjs-display\\lib\\base\\CurveSubGeometry","Vector3D","SubGeometryBase","CurveSubMesh","SubGeometryEvent","CurveSubGeometry","concatenatedArrays","_positionsDirty","_curvesDirty","_faceNormalsDirty","_vertexNormalsDirty","_uvsDirty","_secondaryUVsDirty","_jointIndicesDirty","_jointWeightsDirty","_concatenateArrays","_autoDeriveNormals","_useFaceWeights","_autoDeriveUVs","_scaleU","_scaleV","_pSubMeshClass","_useCondensedIndices","set","value","_pUpdateStrideOffset","_pOffset","VERTEX_DATA","POSITION_DATA","stride","_curves","CURVE_DATA","_uvs","UV_DATA","_pStride","len","_pNumVertices","_pVertices","Array","_pStrideOffsetDirty","notifyUVsUpdate","updatePositions","_positions","updateCurves","updateUVs","updateFaceNormals","_faceNormals","_condensedIndexLookUp","getBoundingPositions","values","index","positions","getStride","getOffset","pInvalidateBounds","notifyPositionsUpdate","offset","curves","_pNotifyVerticesUpdate","notifyCurvesUpdate","uvs","uvIdx","lenV","_faceWeights","updateIndices","indices","clone","_pIndices","concat","scaleUV","scaleU","scaleV","ratioU","ratioV","scale","applyTransformation","transform","i1","i2","vector","invTranspose","vi0","vStride","x","y","z","transformVector","j","k","x1","x2","x3","y1","y2","y3","z1","z2","z3","dx1","dy1","dz1","dx2","dy2","dz2","cx","cy","cz","Math","sqrt","w","_positionsUpdated","VERTICES_UPDATED","dispatchEvent","_curvesUpdated","_uvsUpdated","POSITION_FORMAT","CURVE_FORMAT","UV_FORMAT","awayjs-core/lib/geom/Vector3D","awayjs-display/lib/base/CurveSubMesh","awayjs-display/lib/base/SubGeometryBase","awayjs-display/lib/events/SubGeometryEvent","awayjs-display\\lib\\base\\CurveSubMesh","SubMeshBase","subGeometry","parentMesh","material","_pParentMesh","_subGeometry","CURVE_SUB_MESH","_iCollectRenderable","rendererPool","applyCurveSubMesh","awayjs-display/lib/base/SubMeshBase","awayjs-display\\lib\\base\\DisplayObject","Box","Sphere","MathConsts","Matrix3D","Matrix3DUtils","Point","AbstractMethodError","OrientationMode","Transform","PickingCollisionVO","DisplayObjectEvent","SceneEvent","DisplayObject","_boxBoundsInvalid","_sphereBoundsInvalid","_pSceneTransform","_pSceneTransformDirty","_matrix3D","_matrix3DDirty","_inverseSceneTransform","_inverseSceneTransformDirty","_scenePosition","_scenePositionDirty","_explicitVisibility","_pImplicitVisibility","_explicitMouseEnabled","_pImplicitMouseEnabled","_positionDirty","_rotationDirty","_scaleDirty","_rotationX","_rotationY","_rotationZ","_eulers","_flipY","_zOffset","_pScaleX","_pScaleY","_pScaleZ","_x","_y","_z","_pivot","_orientationMatrix","_pivotZero","_pivotDirty","_pos","_rot","_sca","_pIgnoreTransform","_pRenderables","_entityNodes","alignmentMode","castsShadows","orientationMode","DEFAULT","_transformComponents","_transform","identity","appendScale","_boundsType","_pInvalidateBounds","updateBounds","_pUpdateBoxBounds","_pBoxBounds","depth","val","scaleZ","getBox","invalidateScale","RADIANS_TO_DEGREES","DEGREES_TO_RADIANS","invalidateRotation","height","scaleY","_pParent","getChildIndex","copyFrom","sceneTransform","invert","setTo","pInvalidateSceneTransform","_pIsEntity","_loaderInfo","_pUpdateImplicitMouseEnabled","mouseChildren","_mouseX","_mouseY","_explicitPartition","_pUpdateImplicitPartition","_iAssignedPartition","_pScene","_pPickingCollider","pivot","invalidatePivot","_root","rotationX","rotationY","rotationZ","pivotScale","copyColumnTo","pUpdateSceneTransform","_shaderPickingDetails","_debugVisible","debugVisible","_pUpdateImplicitVisibility","_iIsVisible","width","scaleX","invalidatePosition","addEventListener","type","listener","POSITION_CHANGED","_listenToPositionChanged","ROTATION_CHANGED","_listenToRotationChanged","SCALE_CHANGED","_listenToScaleChanged","SCENE_CHANGED","_listenToSceneChanged","SCENETRANSFORM_CHANGED","_listenToSceneTransformChanged","_iMatrix3D","name","parent","removeChild","disposeAsset","getBounds","targetCoordinateSpace","_bounds","getRect","_iSourcePrefab","_iValidate","getSphere","_pUpdateSphereBounds","_pSphereBounds","globalToLocal","point","globalToLocal3D","position","inverseSceneTransform","hitTestObject","obj","hitTestPoint","shapeFlag","lookAt","target","upAxis","yAxis","zAxis","xAxis","raw","Y_AXIS","normalize","subtract","crossProduct","RAW_DATA_CONTAINER","m","copyRawDataFrom","vec","decompose","localToGlobal","localToGlobal3D","moveTo","dx","dy","dz","movePivot","pitch","angle","rotate","X_AXIS","getRenderSceneTransform","camera","CAMERA_PLANE","comps","scenePosition","recompose","prependTranslation","roll","Z_AXIS","axis","prependRotation","rotateTo","ax","ay","az","removeEventListener","hasEventListener","translate","distance","translateLocal","yaw","_pImplicitPartition","_pUpdateMatrix3D","elements","_pPickingCollisionVO","iSetParent","isEntity","invalidatePartition","notifySceneTransformChange","partition","scene","sceneChanged","REMOVED_FROM_SCENE","_iUnregisterPartition","_pUnregisterEntity","_iRegisterPartition","_pRegisterEntity","ADDED_TO_SCENE","notifySceneChange","appendTranslation","_iIsRoot","prepend","_iAddRenderable","renderable","push","_iRemoveRenderable","indexOf","splice","_iTestCollision","shortestCollisionDistance","findClosest","_iInternalUpdate","_iController","update","_iIsMouseEnabled","_iSetScene","notifyPositionChanged","_positionChanged","notifyRotationChanged","_rotationChanged","notifyScaleChanged","_scaleChanged","_scenechanged","_sceneTransformChanged","invalidateMatrix3D","_iAddEntityNode","entityNode","_iRemoveEntityNode","awayjs-core/lib/errors/AbstractMethodError","awayjs-core/lib/geom/Box","awayjs-core/lib/geom/MathConsts","awayjs-core/lib/geom/Matrix3D","awayjs-core/lib/geom/Matrix3DUtils","awayjs-core/lib/geom/Point","awayjs-core/lib/geom/Sphere","awayjs-display/lib/base/AlignmentMode","awayjs-display/lib/base/OrientationMode","awayjs-display/lib/base/Transform","awayjs-display/lib/events/DisplayObjectEvent","awayjs-display/lib/events/SceneEvent","awayjs-display/lib/pick/PickingCollisionVO","awayjs-display\\lib\\base\\Geometry","GeometryEvent","Geometry","_subGeometries","GEOMETRY","getSubGeometries","addSubGeometry","parentGeometry","SUB_GEOMETRY_ADDED","iInvalidateBounds","removeSubGeometry","SUB_GEOMETRY_REMOVED","numSubGeoms","subGeom","BOUNDS_INVALID","awayjs-display/lib/events/GeometryEvent","awayjs-display\\lib\\base\\GradientType","GradientType","LINEAR","RADIAL","awayjs-display\\lib\\base\\GraphicsPathWinding","GraphicsPathWinding","EVEN_ODD","NON_ZERO","awayjs-display\\lib\\base\\Graphics","Graphics","beginBitmapFill","bitmap","matrix","repeat","smooth","beginFill","color","alpha","beginGradientFill","colors","alphas","ratios","spreadMethod","interpolationMethod","focalPointRatio","clear","sourceGraphics","cubicCurveTo","controlX1","controlY1","controlX2","controlY2","anchorX","anchorY","curveTo","controlX","controlY","drawCircle","radius","drawEllipse","drawGraphicsData","graphicsData","drawPath","commands","data","winding","drawRect","drawRoundRect","ellipseWidth","ellipseHeight","NaN","drawTriangles","vertices","uvtData","culling","endFill","lineBitmapStyle","lineGradientStyle","lineStyle","thickness","pixelHinting","scaleMode","caps","joints","miterLimit","lineTo","awayjs-display\\lib\\base\\IBitmapDrawable","awayjs-display\\lib\\base\\IGraphicsData","awayjs-display\\lib\\base\\IMaterialOwner","awayjs-display\\lib\\base\\IRenderObjectOwner","awayjs-display\\lib\\base\\IRenderableOwner","awayjs-display\\lib\\base\\ISubMeshClass","awayjs-display\\lib\\base\\ISubMesh","awayjs-display\\lib\\base\\InterpolationMethod","InterpolationMethod","LINEAR_RGB","RGB","awayjs-display\\lib\\base\\JointStyle","JointStyle","BEVEL","MITER","awayjs-display\\lib\\base\\LightBase","DisplayObjectContainer","LightEvent","LightBase","_color","_colorR","_colorG","_colorB","_ambientColor","_ambient","_iAmbientR","_iAmbientG","_iAmbientB","_specular","_iSpecularR","_iSpecularG","_iSpecularB","_diffuse","_iDiffuseR","_iDiffuseG","_iDiffuseB","_castsShadows","_shadowMapper","pCreateShadowMapper","light","CASTS_SHADOW_CHANGE","updateSpecular","updateDiffuse","updateAmbient","iGetObjectProjectionMatrix","entity","LIGHT","awayjs-display/lib/containers/DisplayObjectContainer","awayjs-display/lib/events/LightEvent","awayjs-display\\lib\\base\\LineScaleMode","LineScaleMode","HORIZONTAL","NORMAL","VERTICAL","awayjs-display\\lib\\base\\LineSubGeometry","LineSubMesh","TriangleSubGeometry","LineSubGeometry","_boundingPositionDirty","_thicknessDirty","_colorsDirty","START_POSITION_DATA","END_POSITION_DATA","THICKNESS_DATA","COLOR_DATA","_startPositions","_endPositions","updateThickness","_thickness","updateColors","_startColors","_endColors","_numSegments","_boundingPositions","startPositions","endPositions","startValues","endValues","floor","notifyThicknessUpdate","notifyColorsUpdate","_thicknessUpdated","_colorUpdated","COLOR_FORMAT","THICKNESS_FORMAT","awayjs-display/lib/base/LineSubMesh","awayjs-display/lib/base/TriangleSubGeometry","awayjs-display\\lib\\base\\LineSubMesh","LINE_SUB_MESH","applyLineSubMesh","awayjs-display\\lib\\base\\LoaderInfo","EventDispatcher","LoaderInfo","apply","arguments","_bytes","_bytesLoaded","_bytesTotal","_content","_contentType","_loader","_url","awayjs-core/lib/events/EventDispatcher","awayjs-display\\lib\\base\\OrientationMode","CAMERA_POSITION","awayjs-display\\lib\\base\\PixelSnapping","PixelSnapping","ALWAYS","AUTO","NEVER","awayjs-display\\lib\\base\\SpreadMethod","SpreadMethod","PAD","REFLECT","REPEAT","awayjs-display\\lib\\base\\SubGeometryBase","_pConcatenateArrays","updateVertices","_numTriangles","dataType","_numIndices","notifyIndicesUpdate","_indicesUpdated","INDICES_UPDATED","awayjs-display\\lib\\base\\SubMeshBase","_iIndex","_renderables","animator","_material","iRemoveOwner","iAddOwner","_uvTransform","uvTransform","_iInvalidateRenderableGeometry","invalidateGeometry","_iGetExplicitMaterial","awayjs-display\\lib\\base\\Transform","displayObject","_position","_displayObject","director","getForward","negate","_concatenatedColorTransform","_concatenatedMatrix","getUp","getRight","_pixelBounds","getRelativeMatrix3D","relativeTo","moveForward","moveBackward","moveLeft","moveRight","moveUp","moveDown","awayjs-display\\lib\\base\\TriangleCulling","TriangleCulling","NEGATIVE","POSITIVE","awayjs-display\\lib\\base\\TriangleSubGeometry","TriangleSubMesh","_faceTangentsDirty","_vertexTangentsDirty","_autoDeriveTangents","notifyJointIndicesUpdate","_vertexNormals","NORMAL_DATA","_vertexTangents","TANGENT_DATA","_secondaryUVs","SECONDARY_UV_DATA","_jointIndices","JOINT_INDEX_DATA","_jointsPerVertex","_jointWeights","JOINT_WEIGHT_DATA","notifyNormalsUpdate","notifyTangentsUpdate","updateVertexNormals","updateVertexTangents","updateSecondaryUVs","updateJointIndices","updateJointWeights","updateFaceTangents","_faceTangents","_condensedJointIndices","_numCondensedJoints","normals","f1","f2","f3","lenI","weight","vx","vy","vz","tangents","notifySecondaryUVsUpdate","jointIndices","oldIndex","newIndex","dic","jointWeights","notifyJointWeightsUpdate","jointsPerVertex","bakeNormals","bakeTangents","transpose","ni0","ti0","nStride","tStride","deltaTransformVector","index1","index2","index3","vi","v0","dv1","dv2","denom","x0","y0","z0","_normalsUpdated","_tangentsUpdated","_secondaryUVsUpdated","_jointIndicesUpdated","_jointWeightsUpdated","NORMAL_FORMAT","TANGENT_FORMAT","SECONDARY_UV_FORMAT","awayjs-display/lib/base/TriangleSubMesh","awayjs-display\\lib\\base\\TriangleSubMesh","TRIANGLE_SUB_MESH","applyTriangleSubMesh","awayjs-display\\lib\\bounds\\AxisAlignedBoundingBox","PlaneClassification","BoundingVolumeBase","PrimitiveCubePrefab","AxisAlignedBoundingBox","_width","_height","_depth","_centerX","_centerY","_centerZ","_halfExtentsX","_halfExtentsY","_halfExtentsZ","nullify","isInFrustum","planes","numPlanes","_pInvalidated","_pUpdate","plane","c","flippedExtentX","flippedExtentY","flippedExtentZ","projDist","rayIntersection","direction","targetNormal","_box","classifyToPlane","centerDistance","boundOffset","FRONT","BACK","INTERSECT","_pEntity","hx","hy","hz","copyRawDataTo","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","abs","_prefab","_pBoundsPrimitive","matrix3D","_pCreateBoundsPrimitive","geometryType","getNewObject","awayjs-core/lib/geom/PlaneClassification","awayjs-display/lib/bounds/BoundingVolumeBase","awayjs-display/lib/prefabs/PrimitiveCubePrefab","awayjs-display\\lib\\bounds\\BoundingSphere","PrimitiveSpherePrefab","BoundingSphere","_radius","_sphere","dd","rr","rx","ry","rz","awayjs-display/lib/prefabs/PrimitiveSpherePrefab","awayjs-display\\lib\\bounds\\BoundingVolumeBase","invalidate","awayjs-display\\lib\\bounds\\BoundsType","BoundsType","SPHERE","AXIS_ALIGNED_BOX","NULL","awayjs-display\\lib\\bounds\\NullBounds","NullBounds","alwaysIn","_alwaysIn","awayjs-display\\lib\\containers\\DisplayObjectContainer","ArgumentError","RangeError","_mouseChildren","_children","CONTAINER","addChild","child","removeChildInternal","addChildAt","addChildren","childarray","_i","contains","disposeWithChildren","numChildren","getChildAt","getChildByName","childIndex","getObjectsUnderPoint","removeChildAt","removeChildren","beginIndex","endIndex","setChildIndex","swapChildren","child1","child2","swapChildrenAt","awayjs-core/lib/errors/ArgumentError","awayjs-core/lib/errors/Error","awayjs-core/lib/errors/RangeError","awayjs-display/lib/base/DisplayObject","awayjs-display\\lib\\containers\\Loader","AssetLibraryBundle","AssetLoader","AssetEvent","IOErrorEvent","LoaderEvent","ParserEvent","Loader","useAssetLibrary","assetLibraryId","_this","_loadingSessions","_useAssetLib","_assetLibId","_onResourceCompleteDelegate","event","onResourceComplete","_onAssetCompleteDelegate","onAssetComplete","_contentLoaderInfo","close","lib","getInstance","stopAllLoadingSessions","removeListeners","stop","load","request","context","ns","parser","token","loader","RESOURCE_COMPLETE","ASSET_COMPLETE","_iLoader","_iAddErrorHandler","onLoadError","_iAddParseErrorHandler","onParseError","loadData","unload","enableParser","parserClass","enableParsers","parserClasses","dispatcher","IO_ERROR","PARSE_ERROR","content","awayjs-core/lib/events/AssetEvent","awayjs-core/lib/events/IOErrorEvent","awayjs-core/lib/events/LoaderEvent","awayjs-core/lib/events/ParserEvent","awayjs-core/lib/library/AssetLibraryBundle","awayjs-core/lib/library/AssetLoader","awayjs-display\\lib\\containers\\Scene","NodeBase","Partition","Scene","_expandedPartitions","_partitions","_iCollectionMark","_partition","_iSceneGraphRoot","traversePartitions","traverser","traverse","PARTITION_CHANGED","awayjs-display/lib/partition/NodeBase","awayjs-display/lib/partition/Partition","awayjs-display\\lib\\containers\\View","getTimer","RaycastPicker","Camera","CameraEvent","RendererEvent","MouseManager","View","renderer","_time","_deltaTime","_backgroundColor","_backgroundAlpha","_viewportDirty","_scissorDirty","_mousePicker","_onScenePartitionChangedDelegate","onScenePartitionChanged","_onProjectionChangedDelegate","onProjectionChanged","_onViewportUpdatedDelegate","onViewportUpdated","_onScissorUpdatedDelegate","onScissorUpdated","document","body","style","margin","_htmlElement","createElement","appendChild","_mouseManager","registerView","_pCamera","_iRegisterCamera","_pMouseX","_pMouseY","_pRenderer","VIEWPORT_UPDATED","SCISSOR_UPDATED","_pEntityCollector","_iCreateEntityCollector","_iBackgroundR","_iBackgroundG","_iBackgroundB","_iBackgroundAlpha","shareContext","_shareContext","PROJECTION_CHANGED","_aspectRatio","projection","_iAspectRatio","left","top","visibility","render","pUpdateTime","_iUpdateScissorRect","scissorRect","_iUpdateViewport","viewPort","forceMouseMove","_iActiveDiv","_iUpdateDirty","_iCollidingObject","mousePicker","getViewCollision","fireMouseEvents","time","unregisterView","project","point3d","v","originX","originY","unproject","sX","sY","sZ","getRay","updateCollider","collidingObject","layeredView","rayEntryDistance","awayjs-core/lib/utils/getTimer","awayjs-display/lib/containers/Scene","awayjs-display/lib/entities/Camera","awayjs-display/lib/events/CameraEvent","awayjs-display/lib/events/RendererEvent","awayjs-display/lib/managers/MouseManager","awayjs-display/lib/pick/RaycastPicker","awayjs-display\\lib\\controllers\\ControllerBase","ControllerBase","targetObject","_pAutoUpdate","pNotifyUpdate","_pTargetObject","interpolate","awayjs-display\\lib\\controllers\\FirstPersonController","FirstPersonController","panAngle","tiltAngle","minTiltAngle","maxTiltAngle","steps","wrapPanAngle","_iCurrentPanAngle","_iCurrentTiltAngle","_panAngle","_tiltAngle","_minTiltAngle","_maxTiltAngle","_steps","_walkIncrement","_strafeIncrement","_wrapPanAngle","fly","max","min","sin","cos","incrementWalk","incrementStrafe","awayjs-display/lib/controllers/ControllerBase","awayjs-display\\lib\\controllers\\FollowController","HoverController","FollowController","lookAtObject","_pLookAtObject","awayjs-display/lib/controllers/HoverController","awayjs-display\\lib\\controllers\\HoverController","LookAtController","minPanAngle","maxPanAngle","yFactor","_distance","_minPanAngle","Infinity","_maxPanAngle","_yFactor","_upAxis","pos","lookAtPosition","_pOrigin","_pLookAtPosition","awayjs-display/lib/controllers/LookAtController","awayjs-display\\lib\\controllers\\LookAtController","_onLookAtObjectChangedDelegate","onLookAtObjectChanged","awayjs-display\\lib\\controllers\\SpringController","SpringController","stiffness","mass","damping","positionOffset","_velocity","_dv","_stretch","_force","_acceleration","_desiredPosition","offs","add","scaleBy","incrementBy","awayjs-display\\lib\\display\\ContextMode","ContextMode","WEBGL","FLASH","NATIVE","awayjs-display\\lib\\display\\IContext","awayjs-display\\lib\\entities\\Billboard","MaterialEvent","Billboard","pixelSnapping","smoothing","onSizeChangedDelegate","onSizeChanged","_billboardWidth","_billboardHeight","_animator","BILLBOARD","SIZE_CHANGED","testBillboardCollision","_iCollectRenderables","applyBillboard","_iRegisterEntity","_iUnregisterEntity","awayjs-display/lib/bounds/BoundsType","awayjs-display/lib/events/MaterialEvent","awayjs-display\\lib\\entities\\Camera","Plane3D","ProjectionEvent","PerspectiveProjection","_viewProjection","_viewProjectionDirty","_frustumPlanesDirty","_onProjectionMatrixChangedDelegate","onProjectionMatrixChanged","_projection","MATRIX_CHANGED","_frustumPlanes","CAMERA","updateFrustum","c11","c12","c13","c14","c21","c22","c23","c24","c31","c32","c33","c34","c41","c42","c43","c44","invLen","viewProjection","append","nX","nY","_iUnregisterCamera","awayjs-core/lib/events/ProjectionEvent","awayjs-core/lib/geom/Plane3D","awayjs-core/lib/projections/PerspectiveProjection","awayjs-display\\lib\\entities\\DirectionalLight","DirectionalShadowMapper","DirectionalLight","xDir","yDir","zDir","_pAabbPoints","_sceneDirection","_direction","_tmpLookAt","_projAABBPoints","transformVectors","xMin","xMax","yMin","yMax","zMin","zMax","invXRange","invYRange","invZRange","_iRegisterDirectionalLight","_iUnregisterDirectionalLight","minX","minY","minZ","maxX","maxY","maxZ","awayjs-display/lib/base/LightBase","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper","awayjs-display\\lib\\entities\\IEntity","awayjs-display\\lib\\entities\\LightProbe","LightProbe","diffuseMap","specularMap","_diffuseMap","_specularMap","_iRegisterLightProbe","_iUnregisterLightProbe","awayjs-display\\lib\\entities\\LineSegment","LineSegment","startPosition","endPosition","_startPosition","_endPosition","_halfThickness","LINE_SEGMENT","notifyRenderableUpdate","halfWidth","halfHeight","halfDepth","applyLineSegment","awayjs-display\\lib\\entities\\Mesh","Mesh","geometry","_shareAnimationGeometry","_subMeshes","_onGeometryBoundsInvalidDelegate","onGeometryBoundsInvalid","_onSubGeometryAddedDelegate","onSubGeometryAdded","_onSubGeometryRemovedDelegate","onSubGeometryRemoved","removeOwner","subMesh","addOwner","MESH","_geometry","subGeoms","subGeometries","addSubMesh","bakeTransformations","disposeWithAnimatorAndChildren","boundsType","shareAnimationGeometry","mouseEnabled","extra","getSubMeshFromSubGeometry","boundingPositions","setEmpty","box","centerX","centerY","centerZ","maxRadiusSquared","radiusSquared","distanceX","distanceY","distanceZ","SubMeshClass","subMeshClass","testMeshCollision","_iInvalidateRenderableGeometries","awayjs-display/lib/base/Geometry","awayjs-display\\lib\\entities\\PointLight","CubeMapShadowMapper","PointLight","_pRadius","_pFallOff","_pFallOffFactor","iFallOffFactor","v1","bottom","front","v2","right","back","d1","d2","rawData","_iRegisterPointLight","_iUnregisterPointLight","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper","awayjs-display\\lib\\entities\\Shape","Shape","_graphics","awayjs-display\\lib\\entities\\Skybox","BlendMode","Skybox","cubeMap","_pAlphaThreshold","_pBlendMode","_renderObjects","_mipmap","_smooth","_owners","_pIinvalidatePasses","_pLightPicker","_animationSet","_pInvalidateRenderObject","invalidateRenderObject","invalidatePasses","_cubeMap","format","SKYBOX","_iAddRenderObject","renderObject","_iRemoveRenderObject","getRenderObject","renderablePool","getSkyboxRenderObject","_iRegisterSkybox","_iUnregisterSkybox","awayjs-core/lib/base/BlendMode","awayjs-display\\lib\\entities\\TextField","TextField","_text","_bottomScrollV","_caretIndex","_length","maxScrollH","_maxScrollH","maxScrollV","_maxScrollV","_numLines","_selectionBeginIndex","_selectionEndIndex","_textHeight","_textInteractionMode","_textWidth","appendText","newText","getCharBoundaries","charIndex","_charBoundaries","getCharIndexAtPoint","_charIndexAtPoint","getFirstCharInParagraph","_firstCharInParagraph","getImageReference","id","_imageReference","getLineIndexAtPoint","_lineIndexAtPoint","getLineIndexOfChar","_lineIndexOfChar","getLineLength","lineIndex","_lineLength","getLineMetrics","_lineMetrics","getLineOffset","_lineOffset","getLineText","_lineText","getParagraphLength","_paragraphLength","getTextFormat","_textFormat","replaceSelectedText","replaceText","setSelection","setTextFormat","isFontCompatible","fontName","fontStyle","awayjs-display\\lib\\errors\\CastError","CastError","message","awayjs-display\\lib\\events\\CameraEvent","Event","_camera","awayjs-core/lib/events/Event","awayjs-display\\lib\\events\\DisplayObjectEvent","object","VISIBLITY_UPDATED","awayjs-display\\lib\\events\\GeometryEvent","awayjs-display\\lib\\events\\LightEvent","awayjs-display\\lib\\events\\MaterialEvent","awayjs-display\\lib\\events\\MouseEvent","MouseEvent","_iAllowedToPropagate","doesBubble","stopPropagation","_iParentEvent","stopImmediatePropagation","result","screenX","screenY","view","renderableOwner","uv","localPosition","localNormal","subGeometryIndex","delta","ctrlKey","shiftKey","sceneNormal","MOUSE_OVER","MOUSE_OUT","MOUSE_UP","MOUSE_DOWN","MOUSE_MOVE","CLICK","DOUBLE_CLICK","MOUSE_WHEEL","awayjs-display\\lib\\events\\RenderableOwnerEvent","RenderableOwnerEvent","renderObjectOwner","_renderObjectOwner","RENDER_OBJECT_OWNER_UPDATED","awayjs-display\\lib\\events\\RendererEvent","awayjs-display\\lib\\events\\ResizeEvent","ResizeEvent","oldHeight","oldWidth","_oldHeight","_oldWidth","RESIZE","awayjs-display\\lib\\events\\SceneEvent","awayjs-display\\lib\\events\\StageEvent","StageEvent","CONTEXT_CREATED","CONTEXT_DISPOSED","CONTEXT_RECREATED","awayjs-display\\lib\\events\\SubGeometryEvent","_dataType","awayjs-display\\lib\\managers\\DefaultMaterialManager","BitmapData","BitmapTexture","BasicMaterial","DefaultMaterialManager","getDefaultMaterial","assetType","_defaultLineMaterial","createDefaultLineMaterial","_defaultTriangleMaterial","createDefaultTriangleMaterial","getDefaultTexture","_defaultTexture","createDefaultTexture","_defaultBitmapData","createCheckeredBitmapData","setPixel","mipmap","awayjs-core/lib/base/BitmapData","awayjs-core/lib/textures/BitmapTexture","awayjs-display/lib/materials/BasicMaterial","awayjs-display\\lib\\managers\\MouseManager","AwayMouseEvent","_viewLookup","_nullVector","_queuedEvents","_mouseUp","_mouseClick","_mouseOut","_mouseDown","_mouseMove","_mouseOver","_mouseWheel","_mouseDoubleClick","onClickDelegate","onClick","onDoubleClickDelegate","onDoubleClick","onMouseDownDelegate","onMouseDown","onMouseMoveDelegate","onMouseMove","onMouseUpDelegate","onMouseUp","onMouseWheelDelegate","onMouseWheel","onMouseOverDelegate","onMouseOver","onMouseOutDelegate","onMouseOut","_instance","_previousCollidingObject","queueDispatch","_mouseMoveEvent","htmlElement","slice","sourceEvent","collider","altKey","clientX","clientY","updateColliders","bounds","mouseX","mouseY","getBoundingClientRect","awayjs-display/lib/events/MouseEvent","awayjs-display\\lib\\materials\\BasicMaterial","Texture2DBase","MaterialBase","textureColor","smoothAlpha","_preserveAlpha","texture","Number","getMaterialRenderObject","awayjs-core/lib/textures/Texture2DBase","awayjs-display/lib/materials/MaterialBase","awayjs-display\\lib\\materials\\CSSMaterialBase","ImageTexture","CSSMaterialBase","_iMaterialId","_imageElement","_imageStyle","_pTexture","htmlImageElement","node","getElementsByTagName","sheet","styleSheets","insertRule","cssRules","backgroundImage","src","backgroundSize","transformOrigin","_pHeight","_pWidth","_pNotifySizeChanged","awayjs-core/lib/textures/ImageTexture","awayjs-display\\lib\\materials\\CurveMaterial","CurveMaterial","awayjs-display\\lib\\materials\\LightSources","LightSources","LIGHTS","PROBES","ALL","awayjs-display\\lib\\materials\\MaterialBase","ColorTransform","_alphaBlending","_alpha","_pAnimateUVs","_enableLightFallOff","_specularLightSources","_diffuseLightSources","_iBaseScreenPassIndex","_bothSides","_repeat","_onLightChangeDelegate","onLightsChange","alphaPremultiplied","MATERIAL","_colorTransform","alphaMultiplier","CHANGE","_pInvalidatePasses","_alphaPremultiplied","owner","animationSet","invalidateAnimation","_sizeChanged","awayjs-core/lib/geom/ColorTransform","awayjs-display/lib/events/RenderableOwnerEvent","awayjs-display\\lib\\materials\\lightpickers\\LightPickerBase","LightPickerBase","_pNumPointLights","_pNumDirectionalLights","_pNumCastingPointLights","_pNumCastingDirectionalLights","_pNumLightProbes","LIGHT_PICKER","_pPointLights","_pDirectionalLights","_pCastingPointLights","_pCastingDirectionalLights","_pLightProbes","_pLightProbeWeights","_pAllPickedLights","collectLights","updateProbeWeights","objectPos","sourceEntity","lightPos","total","awayjs-display\\lib\\materials\\lightpickers\\StaticLightPicker","StaticLightPicker","lights","_onCastShadowChangeDelegate","onCastShadowChange","_lights","numPointLights","numDirectionalLights","numCastingPointLights","numCastingDirectionalLights","numLightProbes","clearListeners","ceil","updatePointCasting","updateDirectionalCasting","dl","pl","awayjs-display/lib/entities/DirectionalLight","awayjs-display/lib/entities/LightProbe","awayjs-display/lib/entities/PointLight","awayjs-display/lib/materials/lightpickers/LightPickerBase","awayjs-display\\lib\\materials\\shadowmappers\\CascadeShadowMapper","Rectangle","FreeMatrixProjection","CascadeShadowMapper","numCascades","_pScissorRectsInvalid","_numCascades","_changeDispatcher","init","getSplitRatio","_splitRatios","setSplitRatio","getDepthProjections","_depthCameras","_nearPlaneDistances","_texOffsetsX","_texOffsetsY","_pScissorRects","_depthLenses","_pSetDepthMapSize","invalidateScissorRects","pDrawDepthMap","updateScissorRects","_pCasterCollector","cullPlanes","_pCullPlanes","_pOverallDepthCamera","_iRenderCascades","half","_pDepthMapSize","pUpdateDepthProjection","viewCamera","projectionNear","near","projectionRange","far","pUpdateProjectionFromFrustumCorners","frustumCorners","_pMatrix","_pOverallDepthProjection","pUpdateCullPlanes","updateProjectionPartition","splitRatio","texOffsetX","texOffsetY","xN","yN","zN","xF","yF","zF","POSITIVE_INFINITY","NEGATIVE_INFINITY","_pLocalFrustum","h","_pSnap","snap2","awayjs-core/lib/geom/Rectangle","awayjs-core/lib/projections/FreeMatrixProjection","awayjs-display\\lib\\materials\\shadowmappers\\CubeMapShadowMapper","PartialImplementationError","ShadowMapperBase","_needsRender","initCameras","_projections","addCamera","cam","fieldOfView","pCreateDepthTexture","maxDistance","_pLight","_iRender","awayjs-core/lib/errors/PartialImplementationError","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase","awayjs-display\\lib\\materials\\shadowmappers\\DirectionalShadowMapper","_pLightOffset","_pMaxZ","_pMinZ","lightFrustumPlanes","frustumPlanes","viewFrustumPlanes","dir","sceneDirection","dirX","dirY","dirZ","corners","awayjs-display\\lib\\materials\\shadowmappers\\NearDirectionalShadowMapper","NearDirectionalShadowMapper","coverageRatio","_coverageRatio","awayjs-display\\lib\\materials\\shadowmappers\\ShadowMapperBase","ShadowCasterCollector","RenderTexture","_autoUpdateShadows","pCreateCasterCollector","updateShadows","_iShadowsInvalid","iSetDepthMap","depthMap","_depthMap","_explicitDepthMap","size","iRenderDepthMap","entityCollector","awayjs-core/lib/textures/RenderTexture","awayjs-display/lib/traverse/ShadowCasterCollector","awayjs-display\\lib\\partition\\CameraNode","EntityNode","CameraNode","pool","acceptTraverser","awayjs-display/lib/partition/EntityNode","awayjs-display\\lib\\partition\\DirectionalLightNode","DirectionalLightNode","directionalLight","_directionalLight","enterNode","applyDirectionalLight","isCastingShadow","awayjs-display\\lib\\partition\\EntityNode","_pool","_entity","_iNumEntities","removeFromParent","_iParent","iRemoveNode","applyEntity","_pImplicitDebugVisible","isEntityCollector","_pDebugEntity","isIntersectingRay","rayPosition","rayDirection","pickingCollisionVO","_iPickingCollisionVO","localRayPosition","localRayDirection","rayOriginIsInsideBounds","_pCreateDebugEntity","boundsPrimitive","iMarkForUpdate","updateDebugEntity","awayjs-display/lib/bounds/AxisAlignedBoundingBox","awayjs-display/lib/bounds/BoundingSphere","awayjs-display/lib/bounds/NullBounds","awayjs-display\\lib\\partition\\LightProbeNode","LightProbeNode","lightProbe","_lightProbe","applyLightProbe","awayjs-display\\lib\\partition\\NodeBase","_pNumChildNodes","_pChildNodes","_explicitDebugVisible","_iUpdateImplicitDebugVisible","debugChildrenVisible","_debugChildrenVisible","findPartitionForEntity","_pNumEntities","applyDebugEntity","iAddNode","numEntities","pop","awayjs-display\\lib\\partition\\NullNode","NullNode","awayjs-display\\lib\\partition\\Partition","PointLightNode","SkyboxNode","EntityNodePool","rootNode","_updatesMade","_rootNode","_cameraNodePool","_directionalLightNodePool","_entityNodePool","_lightProbeNodePool","_pointLightNodePool","_skyboxNodePool","updateEntities","_updateQueue","_iUpdateQueueNext","iRemoveEntity","targetNode","getItem","pointLight","skybox","disposeItem","awayjs-display/lib/partition/CameraNode","awayjs-display/lib/partition/DirectionalLightNode","awayjs-display/lib/partition/LightProbeNode","awayjs-display/lib/partition/NullNode","awayjs-display/lib/partition/PointLightNode","awayjs-display/lib/partition/SkyboxNode","awayjs-display/lib/pool/EntityNodePool","awayjs-display\\lib\\partition\\PointLightNode","_pointLight","applyPointLight","awayjs-display\\lib\\partition\\SkyboxNode","skyBox","_skyBox","applySkybox","awayjs-display\\lib\\pick\\IPicker","awayjs-display\\lib\\pick\\IPickingCollider","awayjs-display\\lib\\pick\\PickingCollisionVO","awayjs-display\\lib\\pick\\RaycastPicker","RaycastCollector","findClosestCollision","_ignoredEntities","_onlyMouseEnabled","_numEntities","_raycastCollector","_findClosestCollision","_entities","getSceneCollision","entityHead","isIgnored","next","getPickingCollisionVO","setIgnoreList","entities","sortOnNearT","entity1","entity2","collector","sort","MAX_VALUE","bestCollisionVO","pickingCollider","updateLocalPosition","collisionPos","rayDir","rayPos","awayjs-display/lib/traverse/RaycastCollector","awayjs-display\\lib\\pool\\CSSBillboardRenderable","CSSRenderableBase","CSSBillboardRenderable","billboard","div","onmousedown","img","className","awayjs-display/lib/pool/CSSRenderableBase","awayjs-display\\lib\\pool\\CSSLineSegmentRenderable","CSSLineSegmentRenderable","lineSegment","awayjs-display\\lib\\pool\\CSSRenderableBase","invalidateIndexData","invalidateVertexData","awayjs-display\\lib\\pool\\CSSSkyboxRenderable","CSSSkyboxRenderable","awayjs-display\\lib\\pool\\EntityListItemPool","EntityListItem","EntityListItemPool","_index","_poolSize","item","freeAll","awayjs-display/lib/pool/EntityListItem","awayjs-display\\lib\\pool\\EntityListItem","awayjs-display\\lib\\pool\\EntityNodePool","entityNodeClass","_entityNodeClass","awayjs-display\\lib\\pool\\IEntityNodeClass","awayjs-display\\lib\\pool\\IRenderObject","awayjs-display\\lib\\pool\\IRenderablePool","awayjs-display\\lib\\pool\\IRenderable","awayjs-display\\lib\\pool\\IRendererPool","awayjs-display\\lib\\prefabs\\PrefabBase","PrefabBase","_pObjects","_pCreateObject","awayjs-display\\lib\\prefabs\\PrimitiveCapsulePrefab","PrimitivePrefabBase","PrimitiveCapsulePrefab","segmentsW","segmentsH","yUp","_numVertices","_segmentsW","_segmentsH","_yUp","_pInvalidateGeometry","_pInvalidateUVs","_pBuildGeometry","triIndex","startIndex","comp1","comp2","t1","t2","numIndices","triangleGeometry","numVertices","vertexNormals","vertexTangents","horangle","PI","ringradius","verangle","normLen","tanLen","_pBuildUVs","awayjs-display/lib/prefabs/PrimitivePrefabBase","awayjs-display\\lib\\prefabs\\PrimitiveConePrefab","PrimitiveCylinderPrefab","PrimitiveConePrefab","closed","_pBottomRadius","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab","awayjs-display\\lib\\prefabs\\PrimitiveCubePrefab","segmentsD","tile6","_segmentsD","_tile6","tl","tr","bl","br","inc","vidx","fidx","hw","hh","hd","dw","dh","outer_pos","lineGeometry","numSegments","u_tile_dim","v_tile_dim","u_tile_step","v_tile_step","tl0u","tl0v","tl1u","tl1v","du","dv","awayjs-display\\lib\\prefabs\\PrimitiveCylinderPrefab","topRadius","bottomRadius","topClosed","bottomClosed","surfaceClosed","_topRadius","_pSegmentsW","_pSegmentsH","_topClosed","_bottomClosed","_surfaceClosed","setSegmentsW","setSegmentsH","revolutionAngle","dr","latNormElev","latNormBase","nextVertexIndex","centerVertexIndex","revolutionAngleDelta","na0","na1","naComp1","naComp2","awayjs-display\\lib\\prefabs\\PrimitivePlanePrefab","PrimitivePlanePrefab","doubleSided","_doubleSided","base","tw","xi","yi","mult","awayjs-display\\lib\\prefabs\\PrimitivePolygonPrefab","PrimitivePolygonPrefab","sides","awayjs-display\\lib\\prefabs\\PrimitivePrefabBase","_geomDirty","_uvDirty","_geometryTypeDirty","_geometryType","PRIMITIVE_PREFAB","invalidateGeometryType","updateGeometryType","autoDeriveNormals","autoDeriveTangents","autoDeriveUVs","updateGeometry","mesh","awayjs-display/lib/base/LineSubGeometry","awayjs-display/lib/entities/Mesh","awayjs-display/lib/prefabs/PrefabBase","awayjs-display\\lib\\prefabs\\PrimitiveSpherePrefab","awayjs-display\\lib\\prefabs\\PrimitiveTorusPrefab","PrimitiveTorusPrefab","tubeRadius","segmentsR","segmentsT","_tubeRadius","_segmentsR","_segmentsT","nx","ny","nz","revolutionAngleR","revolutionAngleT","revolutionAngleDeltaR","revolutionAngleDeltaT","n1","n2","awayjs-display\\lib\\render\\CSSDefaultRenderer","CoordinateSystem","CSSRendererBase","CSSEntityCollector","CSSDefaultRenderer","_contextMatrix","_skyboxProjection","_container","overflow","_context","_contextStyle","transformStyle","_pBackBufferInvalid","pUpdateBackBuffer","pDraw","coordinateSystem","RIGHT_HANDED","drawRenderables","_renderableHead","_activeMaterial","clip","toString","drawSkybox","renderSceneTransform","awayjs-core/lib/projections/CoordinateSystem","awayjs-display/lib/render/CSSRendererBase","awayjs-display/lib/traverse/CSSEntityCollector","awayjs-display\\lib\\render\\CSSRendererBase","renderToTexture","forceSoftware","profile","_backgroundR","_backgroundG","_backgroundB","_depthTextureInvalid","_viewPort","_scissorRect","_localPos","_globalPos","window","innerWidth","innerHeight","updateGlobalPos","notifyViewportUpdate","notifyScissorUpdate","surfaceSelector","pExecuteRender","scissorRects","cameras","pCollectRenderables","lineSubMesh","triangleSubMesh","_applyRenderable","materialId","cascaded","_iEntryPoint","zIndex","zOffset","dotProduct","_pCameraForward","_scissorUpdated","_viewPortUpdated","awayjs-display\\lib\\render\\IRenderer","awayjs-display\\lib\\sort\\IEntitySorter","awayjs-display\\lib\\sort\\RenderableMergeSort","RenderableMergeSort","sortBlendedRenderables","head","headB","fast","slow","curr","sortOpaqueRenderables","cmp","aid","renderOrderId","bid","ma","renderObjectId","mb","awayjs-display\\lib\\sort\\RenderableNullSort","RenderableNullSort","awayjs-display\\lib\\text\\AntiAliasType","AntiAliasType","ADVANCED","awayjs-display\\lib\\text\\GridFitType","GridFitType","PIXEL","SUBPIXEL","awayjs-display\\lib\\text\\TextFieldAutoSize","TextFieldAutoSize","CENTER","LEFT","RIGHT","awayjs-display\\lib\\text\\TextFieldType","TextFieldType","DYNAMIC","INPUT","awayjs-display\\lib\\text\\TextFormatAlign","TextFormatAlign","JUSTIFY","awayjs-display\\lib\\text\\TextFormat","TextFormat","font","bold","italic","underline","url","align","leftMargin","rightMargin","indent","leading","tabStops","awayjs-display\\lib\\text\\TextInteractionMode","TextInteractionMode","SELECTION","awayjs-display\\lib\\text\\TextLineMetrics","TextLineMetrics","ascent","descent","awayjs-display\\lib\\traverse\\CSSEntityCollector","CollectorBase","awayjs-display/lib/traverse/CollectorBase","awayjs-display\\lib\\traverse\\CollectorBase","_numCullPlanes","_pNumInteractiveEntities","_pEntityListItemPool","_cullPlanes","_customCullPlanes","_pEntityHead","enter","awayjs-display/lib/pool/EntityListItemPool","awayjs-display\\lib\\traverse\\EntityCollector","EntityCollector","_pNumLights","_numDirectionalLights","_numPointLights","_numLightProbes","_pLights","_directionalLights","_pointLights","_lightProbes","_pSkybox","awayjs-display\\lib\\traverse\\RaycastCollector","_rayPosition","_rayDirection","awayjs-display\\lib\\traverse\\ShadowCasterCollector","awayjs-display\\lib\\utils\\Cast","ByteArray","Cast","string","byteArray","isHex","str","_hexChars","charAt","tryColor","random","_colorNames","parseInt","tryClass","_notClasses","_classes","bitmapData","HTMLImageElement","imageElement","draw","bitmapTexture","bmd","awayjs-core/lib/utils/ByteArray","awayjs-display/lib/errors/CastError"],"mappings":"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","file":"awayjs-display.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.ANIMATION_NODE;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;","/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;","/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubMesh\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n    public static CURVE_DATA:string = \"curves\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static CURVE_FORMAT:string = \"float2\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _curvesDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n    private _vertexNormalsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _curves:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n    private _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _curvesUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._curves != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n    //remove\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n        if (this._curvesDirty)\r\n            this.updateCurves(this._curves);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Array<number>\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\tthis.updateCurves(this._curves);\r\n\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = CurveSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateCurves(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar curves:Array<number>;\r\n\r\n\t\tif (true) {\r\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._curves = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\r\n                curves = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n                    curves[index] = values[i++];\r\n                    curves[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.notifyCurvesUpdate();\r\n\r\n\t\tthis._curvesDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._curves = null;\r\n\t\tthis._uvs = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the CurveSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._curves)\r\n\t\t\tclone.updateCurves(this._curves.concat());\r\n\t\telse\r\n\t\t\tclone.updateCurves(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\r\n\r\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyCurvesUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyCurvesUpdate()\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curvesDirty = true;\r\n\r\n\t\tif (!this._curvesUpdated)\r\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._curvesUpdated);\r\n\t}\r\n\r\n\r\n\r\n\tprivate notifyUVsUpdate() {\r\n        if (this._uvsDirty)\r\n            return;\r\n\r\n        this._uvsDirty = true;\r\n\r\n        if (!this._uvsUpdated)\r\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\r\n\r\n        this.dispatchEvent(this._uvsUpdated);\r\n    }\r\n}\r\n\r\nexport = CurveSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport CurveSubGeometry\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CURVE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyCurveSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic alpha:number;\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tvar scaleZ:number = val/this.getBox().depth;\r\n\r\n\t\tif (this._pScaleZ == scaleZ)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = scaleZ;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tvar scaleY:number = val/this.getBox().height;\r\n\r\n\t\tif (this._pScaleY == scaleY)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = scaleY;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\r\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tvar scaleX:number = val/this.getBox().width;\r\n\r\n\t\tif (this._pScaleX == scaleX)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = scaleX;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends NamedAssetBase implements IAsset\r\n{\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.GEOMETRY;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\tpublic getSubGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;","/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;","/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;","/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;","/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;","/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;","import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\r\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\r\n\tpublic static THICKNESS_DATA:string = \"thickness\";\r\n\tpublic static COLOR_DATA:string = \"colors\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static COLOR_FORMAT:string = \"float4\";\r\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _boundingPositionDirty = true;\r\n\tprivate _thicknessDirty:boolean = true;\r\n\tprivate _colorsDirty:boolean = true;\r\n\r\n\tprivate _startPositions:Array<number>;\r\n\tprivate _endPositions:Array<number>;\r\n\tprivate _boundingPositions:Array<number>\r\n\tprivate _thickness:Array<number>;\r\n\tprivate _startColors:Array<number>;\r\n\tprivate _endColors:Array<number>;\r\n\r\n\tprivate _numSegments:number;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _thicknessUpdated:SubGeometryEvent;\r\n\tprivate _colorUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\tvar stride:number = 0;\r\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tstride += 1;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\r\n\t\tstride += 4;\r\n\r\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\r\n\r\n\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\telse if (this._pVertices.length != len)\r\n\t\t\tthis._pVertices.length = len;\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._startPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._endPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Array<number>\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._startColors;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._endColors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of segments in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numSegments():number\r\n\t{\r\n\t\treturn this._numSegments;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(true);\r\n\r\n\t\tthis._pSubMeshClass = LineSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._boundingPositionDirty)\r\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\r\n\r\n\t\treturn this._boundingPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar indices:Array<number>;\r\n\r\n\t\tthis._startPositions = startValues;\r\n\r\n\t\tif (this._startPositions == null)\r\n\t\t\tthis._startPositions = new Array<number>();\r\n\r\n\t\tthis._endPositions = endValues;\r\n\r\n\t\tif (this._endPositions == null)\r\n\t\t\tthis._endPositions = new Array<number>();\r\n\r\n\t\tthis._boundingPositionDirty = true;\r\n\r\n\t\tthis._numSegments = this._startPositions.length/3;\r\n\r\n\t\tthis._pNumVertices = this._numSegments*4;\r\n\r\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(lenV);\r\n\t\telse if (this._pVertices.length != lenV)\r\n\t\t\tthis._pVertices.length = lenV;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\r\n\t\tpositions = this._pVertices;\r\n\t\tindices = new Array();\r\n\r\n\t\twhile (i < startValues.length) {\r\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\r\n\t\t\tpositions[index] = values[i];\r\n\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\tpositions[index + 2] = values[i + 2];\r\n\r\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\r\n\t\t\tpositions[index + 3] = values[i];\r\n\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\tpositions[index + 5] = values[i + 2];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tvar o:number = index/stride - 3;\r\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.updateIndices(indices);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic updateThickness(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tthis._thickness = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\ti = 0;\r\n\t\t\tj = 0;\r\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tthickness = this._pVertices;\r\n\r\n\t\t\tindex = offset\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyThicknessUpdate();\r\n\r\n\t\tthis._thicknessDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar colors:Array<number>;\r\n\r\n\t\tthis._startColors = startValues;\r\n\r\n\t\tthis._endColors = endValues;\r\n\r\n\t\t//default to white\r\n\t\tif (this._startColors == null) {\r\n\t\t\tthis._startColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._startColors.length)\r\n\t\t\t\tthis._startColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\tif (this._endColors == null) {\r\n\t\t\tthis._endColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._endColors.length)\r\n\t\t\t\tthis._endColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\r\n\t\tcolors = this._pVertices;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (i < this._startColors.length) {\r\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\r\n\t\t\tcolors[index] = values[i];\r\n\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\tcolors[index + 3] = values[i + 3];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 4;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyColorsUpdate();\r\n\r\n\t\tthis._colorsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._startPositions = null;\r\n\t\tthis._endPositions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._startColors = null;\r\n\t\tthis._endColors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\t\tclone.updateThickness(this._thickness.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyThicknessUpdate();\r\n\t\tthis.notifyColorsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyThicknessUpdate()\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._thicknessDirty = true;\r\n\r\n\t\tif (!this._thicknessUpdated)\r\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._thicknessUpdated);\r\n\t}\r\n\r\n\tprivate notifyColorsUpdate()\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._colorsDirty = true;\r\n\r\n\t\tif (!this._colorUpdated)\r\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._colorUpdated);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;","import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;","class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;","/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;","/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends NamedAssetBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\r\n\tpublic _pStrideOffsetDirty:boolean = true;\r\n\r\n\tpublic _pIndices:Array<number> /*uint*/;\r\n\tpublic _pVertices:Array<number>;\r\n\r\n\tprivate _numIndices:number;\r\n\tprivate _numTriangles:number;\r\n\tpublic _pNumVertices:number;\r\n\r\n\tpublic _pConcatenateArrays:boolean = true;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pStride:Object = new Object();\r\n\tpublic _pOffset:Object = new Object();\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSubMeshClass:ISubMeshClass;\r\n\r\n\tpublic get subMeshClass():ISubMeshClass\r\n\t{\r\n\t\treturn this._pSubMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get concatenateArrays():boolean\r\n\t{\r\n\t\treturn this._pConcatenateArrays;\r\n\t}\r\n\r\n\tpublic set concatenateArrays(value:boolean)\r\n\t{\r\n\t\tif (this._pConcatenateArrays == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pConcatenateArrays = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Array<number>\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tthis.updateVertices();\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._pNumVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pConcatenateArrays = concatenatedArrays;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getStride(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pStride[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getOffset(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pOffset[dataType];\r\n\t}\r\n\r\n\tpublic updateVertices()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pIndices = null;\r\n\t\tthis._pVertices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tthis._pIndices = indices;\r\n\t\tthis._numIndices = indices.length;\r\n\r\n\t\tthis._numTriangles = this._numIndices/3;\r\n\r\n\t\tthis.notifyIndicesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends NamedAssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;","import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n","/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\r\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\r\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\r\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static NORMAL_FORMAT:string = \"float3\";\r\n\tpublic static TANGENT_FORMAT:string = \"float3\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\tprivate _vertexNormalsDirty:boolean = true;\r\n\tprivate _vertexTangentsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _vertexNormals:Array<number>;\r\n\tprivate _vertexTangents:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _secondaryUVs:Array<number>;\r\n\tprivate _jointIndices:Array<number>;\r\n\tprivate _jointWeights:Array<number>;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\tprivate _numCondensedJoints:number;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceTangents:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _normalsUpdated:SubGeometryEvent;\r\n\tprivate _tangentsUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\r\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._vertexNormals != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._vertexTangents != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._secondaryUVs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointIndices != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointWeights != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (this._pConcatenateArrays)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexNormals():Array<number>\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\treturn this._vertexNormals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexTangents():Array<number>\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\treturn this._vertexTangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Array<number>\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Array<number>\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._useCondensedIndices)\r\n\t\t\treturn this._condensedJointIndices;\r\n\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():Array<number>\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\tpublic get numCondensedJoints():number\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._numCondensedJoints;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = TriangleSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyUVsUpdate()\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateVertexNormals(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar normals:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._vertexNormals = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tnormals = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tnormals[index] = values[i++];\r\n\t\t\t\t\tnormals[index + 1] = values[i++];\r\n\t\t\t\t\tnormals[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexNormals == null) {\r\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\t\t//autoderived normals\r\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\r\n\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear normal values\r\n\t\t\tvar lenV:number = normals.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tnormals[index] = 0;\r\n\t\t\t\tnormals[index + 1] = 0;\r\n\t\t\t\tnormals[index + 2] = 0;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\tvar weight:number;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face normals\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average normals collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = normals[index];\r\n\t\t\t\tvar vy:number = normals[index + 1];\r\n\t\t\t\tvar vz:number = normals[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnormals[index] = vx*d;\r\n\t\t\t\t\tnormals[index + 1] = vy*d;\r\n\t\t\t\t\tnormals[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tthis._vertexNormalsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic updateVertexTangents(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._vertexTangents = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\ttangents = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\ttangents[index] = values[i++];\r\n\t\t\t\t\ttangents[index + 1] = values[i++];\r\n\t\t\t\t\ttangents[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexTangents == null) {\r\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\t\t//autoderived tangents\r\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear tangent values\r\n\t\t\tvar lenV:number = tangents.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\ttangents[index] = 0;\r\n\t\t\t\ttangents[index + 1] = 0;\r\n\t\t\t\ttangents[index + 2] = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar weight:number;\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face tangents\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average tangents collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = tangents[index];\r\n\t\t\t\tvar vy:number = tangents[index + 1];\r\n\t\t\t\tvar vz:number = tangents[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttangents[index] = vx*d;\r\n\t\t\t\t\ttangents[index + 1] = vy*d;\r\n\t\t\t\t\ttangents[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._vertexTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic updateSecondaryUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._secondaryUVs = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\r\n\t\tthis._secondaryUVsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic updateJointIndices(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointIndices:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointIndices = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tj = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tif (!this._concatenateArrays)\r\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\r\n\t\t\t\t\t\toldIndex = values[i++];\r\n\r\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\r\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t\tthis._numCondensedJoints = newIndex;\r\n\t\t\t} else if (this._concatenateArrays) {\r\n\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\r\n\t\tthis._jointIndicesDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic updateJointWeights(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointWeights:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointWeights = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tjointWeights = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\r\n\t\tthis._jointWeightsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._vertexNormals = null;\r\n\t\tthis._vertexTangents = null;\r\n\t\tthis._uvs = null;\r\n\t\tthis._secondaryUVs = null;\r\n\t\tthis._jointIndices = null;\r\n\t\tthis._jointWeights = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t\tthis._faceTangents = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\r\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexNormals(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\r\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexTangents(null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t\tnormals = this._pVertices;\r\n\t\t\ttangents = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t\tnormals = this._vertexNormals;\r\n\t\t\ttangents = this._vertexTangents;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\r\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (bakeNormals || bakeTangents) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t\t// bake normal\r\n\t\t\tif (bakeNormals) {\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += nStride;\r\n\t\t\t}\r\n\r\n\t\t\t// bake tangent\r\n\t\t\tif (bakeTangents) {\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tStride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions\r\n\t\tvar uvs:Array<number> = this._uvs;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceTangents == null)\r\n\t\t\tthis._faceTangents = new Array<number>(len);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex1 = this._pIndices[i];\r\n\t\t\tindex2 = this._pIndices[i + 1];\r\n\t\t\tindex3 = this._pIndices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*2 + 1];\r\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\r\n\r\n\t\t\tvi = index1*3;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*3;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*3;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tthis._faceTangents[i++] = denom*cx;\r\n\t\t\tthis._faceTangents[i++] = denom*cy;\r\n\t\t\tthis._faceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyNormalsUpdate()\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (!this._normalsUpdated)\r\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._normalsUpdated);\r\n\t}\r\n\r\n\tprivate notifyTangentsUpdate()\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (!this._tangentsUpdated)\r\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._tangentsUpdated);\r\n\t}\r\n\r\n\tprivate notifyUVsUpdate()\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._uvsDirty = true;\r\n\r\n\t\tif (!this._uvsUpdated)\r\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._uvsUpdated);\r\n\t}\r\n\r\n\tprivate notifySecondaryUVsUpdate()\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._secondaryUVsDirty = true;\r\n\r\n\t\tif (!this._secondaryUVsUpdated)\r\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointIndicesUpdate()\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointIndicesDirty = true;\r\n\r\n\t\tif (!this._jointIndicesUpdated)\r\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointWeightsUpdate()\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointWeightsDirty = true;\r\n\r\n\t\tif (!this._jointWeightsUpdated)\r\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyTriangleSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;","import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;","import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;","/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;","import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CONTAINER;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;","import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;","import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;","import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;","class ContextMode\r\n{\r\n\tstatic AUTO:string = \"auto\";\r\n\tstatic WEBGL:string = \"webgl\";\r\n\tstatic FLASH:string = \"flash\";\r\n\tstatic NATIVE:string = \"native\";\r\n}\r\n\r\nexport = ContextMode;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its BitmapData reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same BitmapData object,\r\n * multiple display objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.BILLBOARD;\r\n\t}\r\n\r\n\t/**\r\n\t * The BitmapData object being referenced.\r\n\t */\r\n\tpublic bitmapData:BitmapData; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardWidth;\r\n\t\tthis._pBoxBounds.height = this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyBillboard(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CAMERA;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:CubeTextureBase;\r\n\tprivate _specularMap:CubeTextureBase;\r\n\r\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SEGMENT;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSegment(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;","﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tlen = this.numChildren;\r\n\t\tvar obj:any;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tclone.animator = this._animator.clone();\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;","import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\r\n{\r\n\tprivate _cubeMap:CubeTextureBase;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\t\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:CubeTextureBase)\r\n\t{\r\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\t\tthis._pInvalidateRenderObject();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SKYBOX;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool)\r\n\t{\r\n\t\treturn renderablePool.getSkyboxRenderObject(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends DisplayObject\r\n{\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t * \r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = TextField;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\r\n\r\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\r\n\r\n\tprivate _renderObjectOwner:IRenderObjectOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderObjectOwner():IRenderObjectOwner\r\n\t{\r\n\t\treturn this._renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass StageEvent extends Event\r\n{\r\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\r\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\r\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = StageEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\tprivate _dataType:string;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, dataType:string = \"\")\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._dataType = dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * The data type of the vertex data.\r\n\t */\r\n\tpublic get dataType():string\r\n\t{\r\n\t\treturn this._dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapData:BitmapData;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:BitmapTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapData():BitmapData\r\n\t{\r\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = BasicMaterial;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass CSSMaterialBase extends MaterialBase\r\n{\r\n\tprivate _imageElement:HTMLImageElement;\r\n\tprivate _imageStyle:MSStyleCSSProperties;\r\n\r\n\r\n\tpublic get imageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._imageElement;\r\n\t}\r\n\r\n\tpublic get imageStyle():MSStyleCSSProperties\r\n\t{\r\n\t\treturn this._imageStyle;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tif (value instanceof ImageTexture) {\r\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\r\n\r\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\r\n\t\t\tnode.type = \"text/css\";\r\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\r\n\r\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\r\n\r\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\r\n\t\t\tstyle.backgroundSize = \"100% 100%\";\r\n\t\t\tstyle.position = \"absolute\";\r\n\t\t\tstyle.width = this._imageElement.width + \"px\";\r\n\t\t\tstyle.height = this._imageElement.height + \"px\";\r\n\t\t\tstyle.transformOrigin\r\n\t\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t\tthis._pHeight = this._imageElement.height;\r\n\t\t\tthis._pWidth = this._imageElement.width;\r\n\r\n\t\t\tthis._pNotifySizeChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis.texture = texture;\r\n\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.repeat = repeat;\r\n\t}\r\n}\r\n\r\nexport = CSSMaterialBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = CurveMaterial;","/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:Texture2DBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MATERIAL;;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tthis._pHeight = this._pTexture.height;\r\n\t\tthis._pWidth = this._pTexture.width;\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT_PICKER;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\tthrow new PartialImplementationError();\r\n\t\t/*\r\n\t\t return new RenderCubeTexture( this._depthMapSize );\r\n\t\t */\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tprivate _depthMap:TextureProxyBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tprivate _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureProxyBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;","/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSBillboardRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"billboard\";\r\n\r\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + billboard.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSBillboardRenderable;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSLineSegmentRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"lineSegment\";\r\n\r\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + lineSegment.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSLineSegmentRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSRenderableBase implements IRenderable\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _pool:IRenderablePool;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:CSSRenderableBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic materialId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic htmlElement:HTMLElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param material\r\n\t * @param animator\r\n\t */\r\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = CSSRenderableBase;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n\r\n/**\r\n * @class away.pool.CSSSkyboxRenderable\r\n */\r\nclass CSSSkyboxRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\r\n\t{\r\n\t\tsuper(pool, skyBox, skyBox);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\t\tvar img:HTMLDivElement;\r\n\r\n\t\t//create the six images that make up the skybox\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + skyBox.id;\r\n\t}\r\n}\r\n\r\nexport = CSSSkyboxRenderable;","import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends NamedAssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.PRIMITIVE_PREFAB;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\n\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\n\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\r\n{\r\n\tprivate _container:HTMLDivElement;\r\n\tprivate _context:HTMLDivElement;\r\n\tprivate _contextStyle:MSStyleCSSProperties;\r\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\r\n\t\r\n\tprivate _activeMaterial:CSSMaterialBase;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tprivate _transform:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Creates a new CSSDefaultRenderer object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//create container for the renderer\r\n\t\tthis._container = document.createElement(\"div\");\r\n\t\tthis._container.style.overflow = \"hidden\";\r\n\t\tthis._container.style.position = \"absolute\";\r\n\t\t\r\n\t\t//add container to body\r\n\t\tdocument.body.appendChild(this._container);\r\n\r\n\t\t//create conxtext for the renderer\r\n\t\tthis._context = document.createElement(\"div\");\r\n\t\tthis._contextStyle = this._context.style;\r\n\t\tthis._contextStyle.position = \"absolute\";\r\n\t\tthis._contextStyle.transformStyle\r\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\t\tthis._contextStyle.transformOrigin\r\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t//add context to container\r\n\t\tthis._container.appendChild(this._context);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entityCollector\r\n\t */\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tthis._iRender(<EntityCollector> entityCollector);\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n//\t\t\tif (entityCollector.skyBox) {\r\n//\t\t\t\tif (this._activeMaterial)\r\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n//\r\n//\t\t\t\tthis._activeMaterial = null;\r\n//\r\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\r\n//\t\t\t\tthis.drawSkybox(entityCollector);\r\n//\r\n//\t\t\t}\r\n//\r\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\r\n\r\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\r\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\r\n\t\t}\r\n\r\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\r\n\r\n//\t\t\tif (this._activeMaterial)\r\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n\r\n\t\tthis._activeMaterial = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the backbuffer properties.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\tthis._container.style.width = this._width + \"px\";\r\n\t\tthis._container.style.height = this._height + \"px\";\r\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\r\n\r\n\t\t//update context matrix\r\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\r\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\r\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\r\n\r\n\t\t//update context tranform\r\n\t\tthis._contextStyle.transform\r\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform\"]\r\n\t\t\t= this._contextStyle[\"-o-transform\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\r\n\r\n\t\twhile (item) {\r\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\r\n\r\n\t\t\t//serialise transform and apply to html element\r\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\r\n\t\t\tthis._transform.append(viewProjection);\r\n\r\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\r\n\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\r\n\r\n\t\t\tstyle.transformStyle\r\n\t\t\t\t= style[\"-webkit-transform-style\"]\r\n\t\t\t\t= style[\"-moz-transform-style\"]\r\n\t\t\t\t= style[\"-o-transform-style\"]\r\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\r\n\t\t\t//check if child requires adding to the view\r\n\t\t\tif (!this._context.contains(item.htmlElement))\r\n\t\t\t\tthis._context.appendChild(item.htmlElement);\r\n\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n//\t\t\tvar numPasses:number;\r\n//\t\t\tvar j:number;\r\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\r\n//\t\t\tvar item2:away.render.CSSRenderableBase;\r\n//\r\n//\t\t\twhile (item) {\r\n//\t\t\t\tthis._activeMaterial = item.material;\r\n//\r\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\r\n//\r\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\r\n//\r\n//\t\t\t\tj = 0;\r\n//\r\n//\t\t\t\tdo {\r\n//\t\t\t\t\titem2 = item;\r\n//\r\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\r\n//\r\n//\t\t\t\t\tif ((rttMask & which) != 0) {\r\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\r\n//\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\r\n//\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\r\n//\r\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\r\n//\r\n//\t\t\t\t\t} else {\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\r\n//\t\t\t\t\t}\r\n//\t\t\t\t} while (++j < numPasses);\r\n//\r\n//\t\t\t\titem = item2;\r\n//\t\t\t}\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new CSSEntityCollector();\r\n\t}\r\n}\r\n\r\nexport = CSSDefaultRenderer;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\r\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass CSSRendererBase extends EventDispatcher\r\n{\r\n\tprivate _billboardRenderablePool:IRenderablePool;\r\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tprivate _shareContext:boolean = false;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _depthTextureInvalid:boolean = true;\r\n\r\n\tpublic _renderableHead:CSSRenderableBase;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorRect:Rectangle = new Rectangle();\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the StageGL size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._scissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._scissorRect.width = value;\r\n\t\tthis._viewPort.width = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._scissorRect.height = value;\r\n\t\tthis._viewPort.height = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\r\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\r\n\r\n\t\tthis._viewPort = new Rectangle();\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tif (!entityCollector.entityHead)\r\n\t\t\treturn;\r\n\r\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\r\n\t}\r\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\r\n\t{\r\n\t\t////reset head values\r\n\t\t//this._renderableHead = null;\r\n\t\t//\r\n\t\t////grab entity head\r\n\t\t//var item:EntityListItem = entityCollector.entityHead;\r\n\t\t//\r\n\t\t////set temp values for entry point and camera forward vector\r\n\t\t//this._pCamera = entityCollector.camera;\r\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\r\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\r\n\t\t//\r\n\t\t////iterate through all entities\r\n\t\t//while (item) {\r\n\t\t//\t//item.entity._iCollectRenderables(this);\r\n\t\t//\titem = item.next;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\r\n\t{\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of dom objects to the target.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\r\n\t */\r\n\tpublic pDraw(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param billboard\r\n\t */\r\n\tpublic applyBillboard(billboard:Billboard)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param skybox\r\n\t */\r\n\tpublic applySkybox(skybox:Skybox)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param triangleSubMesh\r\n\t */\r\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @private\r\n\t */\r\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\r\n\t{\r\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\tif (material) {\r\n\t\t\t//set ids for faster referencing\r\n\t\t\trenderable.materialId = material._iMaterialId;\r\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\r\n\t\t\trenderable.cascaded = false;\r\n\r\n\t\t\t// project onto camera's z-axis\r\n\t\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\r\n\r\n\t\t\t//store reference to scene transform\r\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\t\t//store reference to next item in list\r\n\t\t\trenderable.next = this._renderableHead;\r\n\t\t\tthis._renderableHead = renderable;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\tthis._viewPort.y = this._globalPos.y;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CSSRendererBase;","import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderObjectId;\r\n\t\t\t\tvar mb:number = headB.renderObjectId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;","import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;","/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;","/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;","/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;","/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;","/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;","/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat\r\n{\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\tpublic align:string;\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\tpublic color:boolean;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses\r\n\t * Times New Roman font for the text.\r\n\t */\r\n\tpublic font:string;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\tpublic target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tthis.font = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.target = target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;","/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;","/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;","import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static bitmapData(data:any):BitmapData\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapData)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof ImageTexture)\r\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\r\n\r\n\t\tif (data instanceof HTMLImageElement) {\r\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\r\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\r\n\t\t\tbitmapData.draw(imageElement)\r\n\t\t\treturn bitmapData;\r\n\t\t}\r\n\r\n\t\t//            if (data is DisplayObject) {\r\n\t\t//                var ds:DisplayObject = data as DisplayObject;\r\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\r\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\r\n\t\t//                mat.tx = 0;\r\n\t\t//                mat.ty = 0;\r\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\r\n\t\t//                return bmd;\r\n\t\t//            }\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):BitmapTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\r\n\t\t\treturn new BitmapTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"],"sourceRoot":"./"}
=======
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CapsStyle.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/GradientType.ts",
    "awayjs-display/lib/base/GraphicsPathWinding.ts",
    "awayjs-display/lib/base/Graphics.ts",
    "awayjs-display/lib/base/InterpolationMethod.ts",
    "awayjs-display/lib/base/JointStyle.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineScaleMode.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/PixelSnapping.ts",
    "awayjs-display/lib/base/SpreadMethod.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleCulling.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/ContextMode.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/StageEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetType",
    "NamedAssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "ANIMATION_NODE",
    "awayjs-core/lib/library/AssetType",
    "undefined",
    "awayjs-core/lib/library/NamedAssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Vector3D",
    "SubGeometryBase",
    "CurveSubMesh",
    "SubGeometryEvent",
    "CurveSubGeometry",
    "concatenatedArrays",
    "_positionsDirty",
    "_curvesDirty",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_vertexNormalsDirty",
    "_vertexTangentsDirty",
    "_uvsDirty",
    "_secondaryUVsDirty",
    "_jointIndicesDirty",
    "_jointWeightsDirty",
    "_concatenateArrays",
    "_autoDeriveNormals",
    "_useFaceWeights",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_pSubMeshClass",
    "_useCondensedIndices",
    "set",
    "value",
    "_pUpdateStrideOffset",
    "_pOffset",
    "VERTEX_DATA",
    "POSITION_DATA",
    "stride",
    "_curves",
    "CURVE_DATA",
    "_uvs",
    "UV_DATA",
    "_pStride",
    "len",
    "_pNumVertices",
    "_pVertices",
    "Array",
    "_pStrideOffsetDirty",
    "notifyUVsUpdate",
    "updatePositions",
    "_positions",
    "updateCurves",
    "updateUVs",
    "updateFaceNormals",
    "_faceNormals",
    "_condensedIndexLookUp",
    "getBoundingPositions",
    "values",
    "index",
    "positions",
    "getStride",
    "getOffset",
    "pInvalidateBounds",
    "notifyPositionsUpdate",
    "offset",
    "curves",
    "notifyCurvesUpdate",
    "uvs",
    "_pNotifyVerticesUpdate",
    "uvIdx",
    "lenV",
    "_faceWeights",
    "_faceTangents",
    "updateIndices",
    "indices",
    "clone",
    "_pIndices",
    "concat",
    "scaleUV",
    "scaleU",
    "scaleV",
    "ratioU",
    "ratioV",
    "scale",
    "applyTransformation",
    "transform",
    "i1",
    "i2",
    "vector",
    "invTranspose",
    "vi0",
    "vStride",
    "x",
    "y",
    "z",
    "transformVector",
    "j",
    "k",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "cx",
    "cy",
    "cz",
    "Math",
    "sqrt",
    "w",
    "_positionsUpdated",
    "VERTICES_UPDATED",
    "dispatchEvent",
    "_curvesUpdated",
    "_uvsUpdated",
    "POSITION_FORMAT",
    "CURVE_FORMAT",
    "UV_FORMAT",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/CurveSubMesh",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/events/SubGeometryEvent",
    "SubMeshBase",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "CURVE_SUB_MESH",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "_pInvalidateBounds",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "GEOMETRY",
    "getSubGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/base/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/base/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "matrix",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "clear",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "radius",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "data",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IGraphicsData",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/base/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "LIGHT",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/base/LineSubGeometry",
    "LineSubMesh",
    "TriangleSubGeometry",
    "LineSubGeometry",
    "_boundingPositionDirty",
    "_thicknessDirty",
    "_colorsDirty",
    "START_POSITION_DATA",
    "END_POSITION_DATA",
    "THICKNESS_DATA",
    "COLOR_DATA",
    "_startPositions",
    "_endPositions",
    "updateThickness",
    "_thickness",
    "updateColors",
    "_startColors",
    "_endColors",
    "_numSegments",
    "_boundingPositions",
    "startPositions",
    "endPositions",
    "startValues",
    "endValues",
    "floor",
    "notifyThicknessUpdate",
    "notifyColorsUpdate",
    "_thicknessUpdated",
    "_colorUpdated",
    "COLOR_FORMAT",
    "THICKNESS_FORMAT",
    "awayjs-display/lib/base/LineSubMesh",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "LINE_SUB_MESH",
    "applyLineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/base/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "_pConcatenateArrays",
    "updateVertices",
    "_numTriangles",
    "dataType",
    "_numIndices",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "TriangleSubMesh",
    "_autoDeriveTangents",
    "notifyJointIndicesUpdate",
    "_vertexNormals",
    "NORMAL_DATA",
    "_vertexTangents",
    "TANGENT_DATA",
    "_secondaryUVs",
    "SECONDARY_UV_DATA",
    "_jointIndices",
    "JOINT_INDEX_DATA",
    "_jointsPerVertex",
    "_jointWeights",
    "JOINT_WEIGHT_DATA",
    "notifyNormalsUpdate",
    "notifyTangentsUpdate",
    "updateVertexNormals",
    "updateVertexTangents",
    "updateSecondaryUVs",
    "updateJointIndices",
    "updateJointWeights",
    "updateFaceTangents",
    "_condensedJointIndices",
    "_numCondensedJoints",
    "normals",
    "f1",
    "f2",
    "f3",
    "lenI",
    "weight",
    "vx",
    "vy",
    "vz",
    "tangents",
    "notifySecondaryUVsUpdate",
    "jointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "jointWeights",
    "notifyJointWeightsUpdate",
    "jointsPerVertex",
    "bakeNormals",
    "bakeTangents",
    "transpose",
    "ni0",
    "ti0",
    "nStride",
    "tStride",
    "deltaTransformVector",
    "index1",
    "index2",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "_normalsUpdated",
    "_tangentsUpdated",
    "_secondaryUVsUpdated",
    "_jointIndicesUpdated",
    "_jointWeightsUpdated",
    "NORMAL_FORMAT",
    "TANGENT_FORMAT",
    "SECONDARY_UV_FORMAT",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TRIANGLE_SUB_MESH",
    "applyTriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "hx",
    "hy",
    "hz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "CONTAINER",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/display/ContextMode",
    "ContextMode",
    "WEBGL",
    "FLASH",
    "NATIVE",
    "awayjs-display/lib/display/IContext",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "BILLBOARD",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "CAMERA",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "LINE_SEGMENT",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "MESH",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "subMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "SKYBOX",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/base/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "appendText",
    "newText",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "_textFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StageEvent",
    "StageEvent",
    "CONTEXT_CREATED",
    "CONTEXT_DISPOSED",
    "CONTEXT_RECREATED",
    "_dataType",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "assetType",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/base/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "MATERIAL",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "LIGHT_PICKER",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "size",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "PRIMITIVE_PREFAB",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "toString",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubMesh\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n    public static CURVE_DATA:string = \"curves\";\n\tpublic static UV_DATA:string = \"uvs\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static CURVE_FORMAT:string = \"float2\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _curvesDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _curves:Array<number>;\n\tprivate _uvs:Array<number>;\n\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n    private _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _curvesUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._curves != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\n\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\n\n\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn false;//this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\t//if (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\t//this._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n    //remove\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n        if (this._curvesDirty)\n            this.updateCurves(this._curves);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Array<number>\n\t{\n\t\tif (this._curvesDirty)\n\t\t\tthis.updateCurves(this._curves);\n\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\n\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = CurveSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateCurves(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar curves:Array<number>;\n\n\t\tif (true) {\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n                    true; //\"do nothing\";\n\t\t\t\t\t//this._pNotifyCurvesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._curves = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\n                curves = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n                    curves[index] = values[i++];\n                    curves[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.notifyCurvesUpdate();\n\n\t\tthis._curvesDirty = false;\n\t}\n\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\n\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._curves = null;\n\t\tthis._uvs = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the CurveSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._curves)\n\t\t\tclone.updateCurves(this._curves.concat());\n\t\telse\n\t\t\tclone.updateCurves(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar invTranspose:Matrix3D;\n\n\n\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyCurvesUpdate();\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyCurvesUpdate()\n\t{\n\t\tif (this._curvesDirty)\n\t\t\treturn;\n\n\t\tthis._curvesDirty = true;\n\n\t\tif (!this._curvesUpdated)\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\n\n\t\tthis.dispatchEvent(this._curvesUpdated);\n\t}\n\n\n\n\tprivate notifyUVsUpdate() {\n        if (this._uvsDirty)\n            return;\n\n        this._uvsDirty = true;\n\n        if (!this._uvsUpdated)\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\n\n        this.dispatchEvent(this._uvsUpdated);\n    }\n}\n\nexport = CurveSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport CurveSubGeometry\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CURVE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyCurveSubMesh(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends NamedAssetBase implements IAsset\n{\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.GEOMETRY;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\tpublic getSubGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\n\t\tthis._pSubMeshClass = LineSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends NamedAssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSubMeshClass:ISubMeshClass;\n\n\tpublic get subMeshClass():ISubMeshClass\n\t{\n\t\treturn this._pSubMeshClass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = TriangleSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n}\n\nexport = ContextMode;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardWidth;\n\t\tthis._pBoxBounds.height = this._billboardHeight;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyBillboard(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\t\trendererPool.applyLineSegment(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\n{\n\tprivate _cubeMap:CubeTextureBase;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\t\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidateRenderObject();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\n\t{\n\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool)\n\t{\n\t\treturn renderablePool.getSkyboxRenderObject(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends DisplayObject\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\n\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\n\n\tprivate _renderObjectOwner:IRenderObjectOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderObjectOwner = renderObjectOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderObjectOwner():IRenderObjectOwner\n\t{\n\t\treturn this._renderObjectOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass StageEvent extends Event\n{\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = StageEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\n{\n    private _preserveAlpha:boolean = false;\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRenderObject();\n    }\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\treturn renderablePool.getMaterialRenderObject(this);\n\t}\n}\n\nexport = CurveMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;;\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renderObjects.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].dispose();\n\n\t\tthis._renderObjects = new Array<IRenderObject>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRenderObject()\n\t{\n\t\tvar len:number = this._renderObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRenderObject();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.push(renderObject);\n\n\t\treturn renderObject;\n\t}\n\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\n\t{\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\n\n\t\treturn renderObject;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:IRenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic renderObjectId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\n\t\tthis.renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.renderableOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:IRenderablePool;\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:CollectorBase)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\n\t{\n\t\t////reset head values\n\t\t//this._renderableHead = null;\n\t\t//\n\t\t////grab entity head\n\t\t//var item:EntityListItem = entityCollector.entityHead;\n\t\t//\n\t\t////set temp values for entry point and camera forward vector\n\t\t//this._pCamera = entityCollector.camera;\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\n\t\t//\n\t\t////iterate through all entities\n\t\t//while (item) {\n\t\t//\t//item.entity._iCollectRenderables(this);\n\t\t//\titem = item.next;\n\t\t//}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():CollectorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderObjectId;\n\t\t\t\tvar mb:number = headB.renderObjectId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\t/**\n\t * The name of the font for text in this text format, as a string. The\n\t * default value is <code>null</code>, which means that Flash Player uses\n\t * Times New Roman font for the text.\n\t */\n\tpublic font:string;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"
  ],
  "sourceRoot": ""
}
>>>>>>> origin/dev

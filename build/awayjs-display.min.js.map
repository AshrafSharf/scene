{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "count",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_boundsType",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "k",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "numElements",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0x",
    "p0y",
    "p0z",
    "p1x",
    "p1y",
    "p1z",
    "p2x",
    "p2y",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\n\t\tclone.setCurves(this._curves.clone());\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean = false;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid) {\n\t\t\tthis._pUpdateSphereBounds();\n\t\t}\n\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\n\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\n\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._textFormat==null){\n\t\t\treturn;\n\t\t}\n\t\tif(this._text==\"\"){\n\t\t\treturn;\n\t\t}\n\t\tvar indices:Array<number> = new Array<number>();\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar tri_idx_offset:number=0;\n\t\tvar tri_cnt:number=0;\n\t\tvar x_offset:number=0;\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tfor (var i = 0; i < this.text.length; i++) {\n\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\n\t\t\tif(this_char!= null) {\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\ttri_cnt = 0;\n\t\t\t\t\tvar indices2:Uint16Array = this_subGeom.indices.get(this_subGeom.numElements);\n\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\n\t\t\t\t\t\tindices[k++] = indices2[v] + tri_idx_offset;\n\t\t\t\t\t\ttri_cnt++;\n\t\t\t\t\t}\n\t\t\t\t\ttri_idx_offset += tri_cnt;\n\t\t\t\t\tfor (v = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t}\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\tvar kerning_value:number=0;\n\t\t\t\t\tif(prev_char!=null){\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setIndices(indices);\n\t\tcurve_sub_geom.setPositions(new Float3Attributes(attributesBuffer));\n\t\tcurve_sub_geom.setCurves(new Float2Attributes(attributesBuffer));\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n        this._iCopyToMesh(clone);\n        clone.textFormat = clone.textFormat;\n        clone.textColor = clone.textColor;\n        clone.text = clone.text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if nmot solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//if (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t//\tshortestCollisionDistance = t;\n\t\t\t//\tcollisionCurveIndex = index/3;\n\t\t\t//\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t//\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t//\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t//\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t//\tpickingCollisionVO.index = index;\n\t\t\t//\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\t\t\t//\n\t\t\t//\t// if not looking for best hit, first found will do...\n\t\t\t//\tif (!this._findClosestCollision)\n\t\t\t//\t\treturn true;\n\t\t\t//}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}